//
//  StyleKit.swift
//  Lock
//
//  Created by Alsey Coleman Miller on 9/18/22.
//  Copyright Â© 2022 ColemanCDA. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//


#if canImport(AppKit)
import Cocoa

public class StyleKit : NSObject {

    //// Cache

    private struct Cache {
        static let bluetoothBlue: NSColor = NSColor(red: 0.035, green: 0.294, blue: 0.596, alpha: 1)
        static let bluetoothDisabledGrey: NSColor = NSColor(red: 0.746, green: 0.733, blue: 0.733, alpha: 1)
        static let wirelessBlue: NSColor = NSColor(red: 0.278, green: 0.506, blue: 0.976, alpha: 1)
        static var imageOfActivityNewKey: NSImage?
    }

    //// Colors

    @objc dynamic public class var bluetoothBlue: NSColor { return Cache.bluetoothBlue }
    @objc dynamic public class var bluetoothDisabledGrey: NSColor { return Cache.bluetoothDisabledGrey }
    @objc dynamic public class var wirelessBlue: NSColor { return Cache.wirelessBlue }

    //// Drawing Methods

    @objc dynamic public class func drawScan2(frame: NSRect = NSRect(x: 0, y: 0, width: 230, height: 230)) {

        //// Bezier Drawing
        let bezierPath = NSBezierPath()
        bezierPath.move(to: NSPoint(x: frame.minX + 0.43125 * frame.width, y: frame.minY + 0.17500 * frame.height))
        bezierPath.line(to: NSPoint(x: frame.minX + 0.50000 * frame.width, y: frame.minY + 0.10625 * frame.height))
        bezierPath.line(to: NSPoint(x: frame.minX + 0.56875 * frame.width, y: frame.minY + 0.17500 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.50000 * frame.width, y: frame.minY + 0.20625 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.55000 * frame.width, y: frame.minY + 0.19375 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.52500 * frame.width, y: frame.minY + 0.20625 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.43125 * frame.width, y: frame.minY + 0.17500 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.47500 * frame.width, y: frame.minY + 0.20625 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.44375 * frame.width, y: frame.minY + 0.19375 * frame.height))
        bezierPath.close()
        StyleKit.wirelessBlue.setFill()
        bezierPath.fill()


        //// Bezier 4 Drawing
        let bezier4Path = NSBezierPath()
        bezier4Path.move(to: NSPoint(x: frame.minX + 0.28750 * frame.width, y: frame.minY + 0.31875 * frame.height))
        bezier4Path.line(to: NSPoint(x: frame.minX + 0.35625 * frame.width, y: frame.minY + 0.25000 * frame.height))
        bezier4Path.curve(to: NSPoint(x: frame.minX + 0.50000 * frame.width, y: frame.minY + 0.30625 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.39375 * frame.width, y: frame.minY + 0.28750 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.44375 * frame.width, y: frame.minY + 0.30625 * frame.height))
        bezier4Path.curve(to: NSPoint(x: frame.minX + 0.64375 * frame.width, y: frame.minY + 0.25000 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.55625 * frame.width, y: frame.minY + 0.30625 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.60625 * frame.width, y: frame.minY + 0.28125 * frame.height))
        bezier4Path.line(to: NSPoint(x: frame.minX + 0.71250 * frame.width, y: frame.minY + 0.31875 * frame.height))
        bezier4Path.curve(to: NSPoint(x: frame.minX + 0.50000 * frame.width, y: frame.minY + 0.40625 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.66250 * frame.width, y: frame.minY + 0.37500 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.58125 * frame.width, y: frame.minY + 0.40625 * frame.height))
        bezier4Path.curve(to: NSPoint(x: frame.minX + 0.28750 * frame.width, y: frame.minY + 0.31875 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.41875 * frame.width, y: frame.minY + 0.40625 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.33750 * frame.width, y: frame.minY + 0.37500 * frame.height))
        bezier4Path.close()
        StyleKit.wirelessBlue.setFill()
        bezier4Path.fill()
    }

    @objc dynamic public class func drawBluetoothLogo(frame: NSRect = NSRect(x: 0, y: 0, width: 230, height: 230)) {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext

        //// Group
        NSGraphicsContext.saveGraphicsState()
        context.translateBy(x: frame.minX + 0.13043 * frame.width, y: frame.minY + 0.99565 * frame.height)
        context.scaleBy(x: 3.7, y: 3.7)



        //// Page-1
        //// Bluetooth_Smart_Logo
        //// Shape Drawing
        let shapePath = NSBezierPath()
        shapePath.move(to: NSPoint(x: 25.55, y: -15.31))
        shapePath.line(to: NSPoint(x: 30.61, y: -20.37))
        shapePath.line(to: NSPoint(x: 25.56, y: -25.43))
        shapePath.line(to: NSPoint(x: 25.55, y: -15.31))
        shapePath.line(to: NSPoint(x: 25.55, y: -15.31))
        shapePath.close()
        shapePath.move(to: NSPoint(x: 25.55, y: -46.27))
        shapePath.line(to: NSPoint(x: 30.61, y: -41.21))
        shapePath.line(to: NSPoint(x: 25.56, y: -36.17))
        shapePath.line(to: NSPoint(x: 25.55, y: -46.27))
        shapePath.line(to: NSPoint(x: 25.55, y: -46.27))
        shapePath.close()
        shapePath.move(to: NSPoint(x: 20.16, y: -30.8))
        shapePath.line(to: NSPoint(x: 9.23, y: -19.83))
        shapePath.line(to: NSPoint(x: 12.39, y: -16.66))
        shapePath.line(to: NSPoint(x: 21.1, y: -25.37))
        shapePath.line(to: NSPoint(x: 21.1, y: -4.49))
        shapePath.line(to: NSPoint(x: 36.95, y: -20.33))
        shapePath.line(to: NSPoint(x: 26.48, y: -30.8))
        shapePath.line(to: NSPoint(x: 36.95, y: -41.24))
        shapePath.line(to: NSPoint(x: 21.1, y: -57.09))
        shapePath.line(to: NSPoint(x: 21.1, y: -36.21))
        shapePath.line(to: NSPoint(x: 12.39, y: -44.92))
        shapePath.line(to: NSPoint(x: 9.23, y: -41.75))
        shapePath.line(to: NSPoint(x: 20.16, y: -30.8))
        shapePath.line(to: NSPoint(x: 20.16, y: -30.8))
        shapePath.close()
        shapePath.move(to: NSPoint(x: 23.09, y: -61.38))
        shapePath.curve(to: NSPoint(x: 45.65, y: -30.8), controlPoint1: NSPoint(x: 36.45, y: -61.38), controlPoint2: NSPoint(x: 45.65, y: -55.03))
        shapePath.curve(to: NSPoint(x: 23.09, y: -0.2), controlPoint1: NSPoint(x: 45.65, y: -6.54), controlPoint2: NSPoint(x: 36.45, y: -0.2))
        shapePath.curve(to: NSPoint(x: 0.52, y: -30.8), controlPoint1: NSPoint(x: 9.73, y: -0.2), controlPoint2: NSPoint(x: 0.52, y: -6.54))
        shapePath.curve(to: NSPoint(x: 23.09, y: -61.38), controlPoint1: NSPoint(x: 0.52, y: -55.03), controlPoint2: NSPoint(x: 9.73, y: -61.38))
        shapePath.line(to: NSPoint(x: 23.09, y: -61.38))
        shapePath.line(to: NSPoint(x: 23.09, y: -61.38))
        shapePath.close()
        shapePath.windingRule = .evenOdd
        StyleKit.bluetoothBlue.setFill()
        shapePath.fill()







        NSGraphicsContext.restoreGraphicsState()
    }

    @objc dynamic public class func drawBluetoothLogoDisabled(frame: NSRect = NSRect(x: 0, y: 0, width: 230, height: 230)) {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext

        //// Group
        NSGraphicsContext.saveGraphicsState()
        context.translateBy(x: frame.minX + 0.13043 * frame.width, y: frame.minY + 0.99565 * frame.height)
        context.scaleBy(x: 3.7, y: 3.7)



        //// Page-1
        //// Bluetooth_Smart_Logo
        //// Shape Drawing
        let shapePath = NSBezierPath()
        shapePath.move(to: NSPoint(x: 25.55, y: -15.31))
        shapePath.line(to: NSPoint(x: 30.61, y: -20.37))
        shapePath.line(to: NSPoint(x: 25.56, y: -25.43))
        shapePath.line(to: NSPoint(x: 25.55, y: -15.31))
        shapePath.line(to: NSPoint(x: 25.55, y: -15.31))
        shapePath.close()
        shapePath.move(to: NSPoint(x: 25.55, y: -46.27))
        shapePath.line(to: NSPoint(x: 30.61, y: -41.21))
        shapePath.line(to: NSPoint(x: 25.56, y: -36.17))
        shapePath.line(to: NSPoint(x: 25.55, y: -46.27))
        shapePath.line(to: NSPoint(x: 25.55, y: -46.27))
        shapePath.close()
        shapePath.move(to: NSPoint(x: 20.16, y: -30.8))
        shapePath.line(to: NSPoint(x: 9.23, y: -19.83))
        shapePath.line(to: NSPoint(x: 12.39, y: -16.66))
        shapePath.line(to: NSPoint(x: 21.1, y: -25.37))
        shapePath.line(to: NSPoint(x: 21.1, y: -4.49))
        shapePath.line(to: NSPoint(x: 36.95, y: -20.33))
        shapePath.line(to: NSPoint(x: 26.48, y: -30.8))
        shapePath.line(to: NSPoint(x: 36.95, y: -41.24))
        shapePath.line(to: NSPoint(x: 21.1, y: -57.09))
        shapePath.line(to: NSPoint(x: 21.1, y: -36.21))
        shapePath.line(to: NSPoint(x: 12.39, y: -44.92))
        shapePath.line(to: NSPoint(x: 9.23, y: -41.75))
        shapePath.line(to: NSPoint(x: 20.16, y: -30.8))
        shapePath.line(to: NSPoint(x: 20.16, y: -30.8))
        shapePath.close()
        shapePath.move(to: NSPoint(x: 23.09, y: -61.38))
        shapePath.curve(to: NSPoint(x: 45.65, y: -30.8), controlPoint1: NSPoint(x: 36.45, y: -61.38), controlPoint2: NSPoint(x: 45.65, y: -55.03))
        shapePath.curve(to: NSPoint(x: 23.09, y: -0.2), controlPoint1: NSPoint(x: 45.65, y: -6.54), controlPoint2: NSPoint(x: 36.45, y: -0.2))
        shapePath.curve(to: NSPoint(x: 0.52, y: -30.8), controlPoint1: NSPoint(x: 9.73, y: -0.2), controlPoint2: NSPoint(x: 0.52, y: -6.54))
        shapePath.curve(to: NSPoint(x: 23.09, y: -61.38), controlPoint1: NSPoint(x: 0.52, y: -55.03), controlPoint2: NSPoint(x: 9.73, y: -61.38))
        shapePath.line(to: NSPoint(x: 23.09, y: -61.38))
        shapePath.line(to: NSPoint(x: 23.09, y: -61.38))
        shapePath.close()
        shapePath.windingRule = .evenOdd
        StyleKit.bluetoothDisabledGrey.setFill()
        shapePath.fill()







        NSGraphicsContext.restoreGraphicsState()
    }

    @objc dynamic public class func drawScan1(frame: NSRect = NSRect(x: 0, y: 0, width: 230, height: 230)) {

        //// Bezier Drawing
        let bezierPath = NSBezierPath()
        bezierPath.move(to: NSPoint(x: frame.minX + 0.43125 * frame.width, y: frame.minY + 0.17500 * frame.height))
        bezierPath.line(to: NSPoint(x: frame.minX + 0.50000 * frame.width, y: frame.minY + 0.10625 * frame.height))
        bezierPath.line(to: NSPoint(x: frame.minX + 0.56875 * frame.width, y: frame.minY + 0.17500 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.50000 * frame.width, y: frame.minY + 0.20625 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.55000 * frame.width, y: frame.minY + 0.19375 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.52500 * frame.width, y: frame.minY + 0.20625 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.43125 * frame.width, y: frame.minY + 0.17500 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.47500 * frame.width, y: frame.minY + 0.20625 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.44375 * frame.width, y: frame.minY + 0.19375 * frame.height))
        bezierPath.close()
        StyleKit.wirelessBlue.setFill()
        bezierPath.fill()
    }

    @objc dynamic public class func drawScan3(frame: NSRect = NSRect(x: 0, y: 0, width: 230, height: 230)) {

        //// Bezier Drawing
        let bezierPath = NSBezierPath()
        bezierPath.move(to: NSPoint(x: frame.minX + 0.43125 * frame.width, y: frame.minY + 0.17500 * frame.height))
        bezierPath.line(to: NSPoint(x: frame.minX + 0.50000 * frame.width, y: frame.minY + 0.10625 * frame.height))
        bezierPath.line(to: NSPoint(x: frame.minX + 0.56875 * frame.width, y: frame.minY + 0.17500 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.50000 * frame.width, y: frame.minY + 0.20625 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.55000 * frame.width, y: frame.minY + 0.19375 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.52500 * frame.width, y: frame.minY + 0.20625 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.43125 * frame.width, y: frame.minY + 0.17500 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.47500 * frame.width, y: frame.minY + 0.20625 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.44375 * frame.width, y: frame.minY + 0.19375 * frame.height))
        bezierPath.close()
        StyleKit.wirelessBlue.setFill()
        bezierPath.fill()


        //// Bezier 3 Drawing
        let bezier3Path = NSBezierPath()
        bezier3Path.move(to: NSPoint(x: frame.minX + 0.14375 * frame.width, y: frame.minY + 0.46250 * frame.height))
        bezier3Path.line(to: NSPoint(x: frame.minX + 0.21250 * frame.width, y: frame.minY + 0.39375 * frame.height))
        bezier3Path.curve(to: NSPoint(x: frame.minX + 0.50000 * frame.width, y: frame.minY + 0.50625 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.28750 * frame.width, y: frame.minY + 0.46250 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.38750 * frame.width, y: frame.minY + 0.50625 * frame.height))
        bezier3Path.curve(to: NSPoint(x: frame.minX + 0.78750 * frame.width, y: frame.minY + 0.38750 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.61250 * frame.width, y: frame.minY + 0.50625 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.71250 * frame.width, y: frame.minY + 0.46250 * frame.height))
        bezier3Path.line(to: NSPoint(x: frame.minX + 0.85625 * frame.width, y: frame.minY + 0.45625 * frame.height))
        bezier3Path.curve(to: NSPoint(x: frame.minX + 0.50000 * frame.width, y: frame.minY + 0.61250 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.76875 * frame.width, y: frame.minY + 0.55625 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.63750 * frame.width, y: frame.minY + 0.61250 * frame.height))
        bezier3Path.curve(to: NSPoint(x: frame.minX + 0.14375 * frame.width, y: frame.minY + 0.46250 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.36250 * frame.width, y: frame.minY + 0.61250 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.23125 * frame.width, y: frame.minY + 0.55625 * frame.height))
        bezier3Path.close()
        StyleKit.wirelessBlue.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = NSBezierPath()
        bezier4Path.move(to: NSPoint(x: frame.minX + 0.28750 * frame.width, y: frame.minY + 0.31875 * frame.height))
        bezier4Path.line(to: NSPoint(x: frame.minX + 0.35625 * frame.width, y: frame.minY + 0.25000 * frame.height))
        bezier4Path.curve(to: NSPoint(x: frame.minX + 0.50000 * frame.width, y: frame.minY + 0.30625 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.39375 * frame.width, y: frame.minY + 0.28750 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.44375 * frame.width, y: frame.minY + 0.30625 * frame.height))
        bezier4Path.curve(to: NSPoint(x: frame.minX + 0.64375 * frame.width, y: frame.minY + 0.25000 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.55625 * frame.width, y: frame.minY + 0.30625 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.60625 * frame.width, y: frame.minY + 0.28125 * frame.height))
        bezier4Path.line(to: NSPoint(x: frame.minX + 0.71250 * frame.width, y: frame.minY + 0.31875 * frame.height))
        bezier4Path.curve(to: NSPoint(x: frame.minX + 0.50000 * frame.width, y: frame.minY + 0.40625 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.66250 * frame.width, y: frame.minY + 0.37500 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.58125 * frame.width, y: frame.minY + 0.40625 * frame.height))
        bezier4Path.curve(to: NSPoint(x: frame.minX + 0.28750 * frame.width, y: frame.minY + 0.31875 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.41875 * frame.width, y: frame.minY + 0.40625 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.33750 * frame.width, y: frame.minY + 0.37500 * frame.height))
        bezier4Path.close()
        StyleKit.wirelessBlue.setFill()
        bezier4Path.fill()
    }

    @objc dynamic public class func drawScan4(frame: NSRect = NSRect(x: 0, y: 0, width: 230, height: 230)) {

        //// Bezier Drawing
        let bezierPath = NSBezierPath()
        bezierPath.move(to: NSPoint(x: frame.minX + 0.43125 * frame.width, y: frame.minY + 0.17500 * frame.height))
        bezierPath.line(to: NSPoint(x: frame.minX + 0.50000 * frame.width, y: frame.minY + 0.10625 * frame.height))
        bezierPath.line(to: NSPoint(x: frame.minX + 0.56875 * frame.width, y: frame.minY + 0.17500 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.50000 * frame.width, y: frame.minY + 0.20625 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.55000 * frame.width, y: frame.minY + 0.19375 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.52500 * frame.width, y: frame.minY + 0.20625 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.43125 * frame.width, y: frame.minY + 0.17500 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.47500 * frame.width, y: frame.minY + 0.20625 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.44375 * frame.width, y: frame.minY + 0.19375 * frame.height))
        bezierPath.close()
        StyleKit.wirelessBlue.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = NSBezierPath()
        bezier2Path.move(to: NSPoint(x: frame.minX + 0.50000 * frame.width, y: frame.minY + 0.71250 * frame.height))
        bezier2Path.curve(to: NSPoint(x: frame.minX + 0.93125 * frame.width, y: frame.minY + 0.53750 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.66875 * frame.width, y: frame.minY + 0.71250 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.81875 * frame.width, y: frame.minY + 0.64375 * frame.height))
        bezier2Path.line(to: NSPoint(x: frame.minX + 1.00000 * frame.width, y: frame.minY + 0.60625 * frame.height))
        bezier2Path.curve(to: NSPoint(x: frame.minX + 0.50000 * frame.width, y: frame.minY + 0.81250 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.87500 * frame.width, y: frame.minY + 0.73125 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.69375 * frame.width, y: frame.minY + 0.81250 * frame.height))
        bezier2Path.curve(to: NSPoint(x: frame.minX + 0.00000 * frame.width, y: frame.minY + 0.60625 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.30625 * frame.width, y: frame.minY + 0.81250 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.12500 * frame.width, y: frame.minY + 0.73125 * frame.height))
        bezier2Path.line(to: NSPoint(x: frame.minX + 0.06875 * frame.width, y: frame.minY + 0.53750 * frame.height))
        bezier2Path.curve(to: NSPoint(x: frame.minX + 0.50000 * frame.width, y: frame.minY + 0.71250 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.18125 * frame.width, y: frame.minY + 0.64375 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.33125 * frame.width, y: frame.minY + 0.71250 * frame.height))
        bezier2Path.close()
        StyleKit.wirelessBlue.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = NSBezierPath()
        bezier3Path.move(to: NSPoint(x: frame.minX + 0.14375 * frame.width, y: frame.minY + 0.46250 * frame.height))
        bezier3Path.line(to: NSPoint(x: frame.minX + 0.21250 * frame.width, y: frame.minY + 0.39375 * frame.height))
        bezier3Path.curve(to: NSPoint(x: frame.minX + 0.50000 * frame.width, y: frame.minY + 0.50625 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.28750 * frame.width, y: frame.minY + 0.46250 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.38750 * frame.width, y: frame.minY + 0.50625 * frame.height))
        bezier3Path.curve(to: NSPoint(x: frame.minX + 0.78750 * frame.width, y: frame.minY + 0.38750 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.61250 * frame.width, y: frame.minY + 0.50625 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.71250 * frame.width, y: frame.minY + 0.46250 * frame.height))
        bezier3Path.line(to: NSPoint(x: frame.minX + 0.85625 * frame.width, y: frame.minY + 0.45625 * frame.height))
        bezier3Path.curve(to: NSPoint(x: frame.minX + 0.50000 * frame.width, y: frame.minY + 0.61250 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.76875 * frame.width, y: frame.minY + 0.55625 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.63750 * frame.width, y: frame.minY + 0.61250 * frame.height))
        bezier3Path.curve(to: NSPoint(x: frame.minX + 0.14375 * frame.width, y: frame.minY + 0.46250 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.36250 * frame.width, y: frame.minY + 0.61250 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.23125 * frame.width, y: frame.minY + 0.55625 * frame.height))
        bezier3Path.close()
        StyleKit.wirelessBlue.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = NSBezierPath()
        bezier4Path.move(to: NSPoint(x: frame.minX + 0.28750 * frame.width, y: frame.minY + 0.31875 * frame.height))
        bezier4Path.line(to: NSPoint(x: frame.minX + 0.35625 * frame.width, y: frame.minY + 0.25000 * frame.height))
        bezier4Path.curve(to: NSPoint(x: frame.minX + 0.50000 * frame.width, y: frame.minY + 0.30625 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.39375 * frame.width, y: frame.minY + 0.28750 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.44375 * frame.width, y: frame.minY + 0.30625 * frame.height))
        bezier4Path.curve(to: NSPoint(x: frame.minX + 0.64375 * frame.width, y: frame.minY + 0.25000 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.55625 * frame.width, y: frame.minY + 0.30625 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.60625 * frame.width, y: frame.minY + 0.28125 * frame.height))
        bezier4Path.line(to: NSPoint(x: frame.minX + 0.71250 * frame.width, y: frame.minY + 0.31875 * frame.height))
        bezier4Path.curve(to: NSPoint(x: frame.minX + 0.50000 * frame.width, y: frame.minY + 0.40625 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.66250 * frame.width, y: frame.minY + 0.37500 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.58125 * frame.width, y: frame.minY + 0.40625 * frame.height))
        bezier4Path.curve(to: NSPoint(x: frame.minX + 0.28750 * frame.width, y: frame.minY + 0.31875 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.41875 * frame.width, y: frame.minY + 0.40625 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.33750 * frame.width, y: frame.minY + 0.37500 * frame.height))
        bezier4Path.close()
        StyleKit.wirelessBlue.setFill()
        bezier4Path.fill()
    }

    @objc dynamic public class func drawSetupLock(frame: NSRect = NSRect(x: 0, y: 0, width: 230, height: 230), setupLockGear: NSColor = NSColor(red: 0.425, green: 0.46, blue: 0.499, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }


        //// Subframes
        let group2: NSRect = NSRect(x: frame.minX + fastFloor(frame.width * 0.00000 + 0.5), y: frame.minY + fastFloor(frame.height * 0.01955 + 0) + 0.5, width: fastFloor(frame.width * 1.00000 - 0.5) - fastFloor(frame.width * 0.00000 + 0.5) + 1, height: fastFloor(frame.height * 0.99997 - 0.49) - fastFloor(frame.height * 0.01955 + 0) + 0.5)


        //// Group 2
        NSGraphicsContext.saveGraphicsState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = NSBezierPath()
        clipPath.move(to: NSPoint(x: group2.minX + 0.55471 * group2.width, y: group2.minY + 0.00000 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.44959 * group2.width, y: group2.minY + 0.00000 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.37437 * group2.width, y: group2.minY + 0.13622 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.43378 * group2.width, y: group2.minY + 0.00000 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.42826 * group2.width, y: group2.minY + -0.00003 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.33274 * group2.width, y: group2.minY + 0.15349 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.20142 * group2.width, y: group2.minY + 0.10098 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.21934 * group2.width, y: group2.minY + 0.10098 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.20591 * group2.width, y: group2.minY + 0.10098 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.19274 * group2.width, y: group2.minY + 0.10098 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.18534 * group2.width, y: group2.minY + 0.10747 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.11083 * group2.width, y: group2.minY + 0.18187 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.15388 * group2.width, y: group2.minY + 0.33189 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.09950 * group2.width, y: group2.minY + 0.19341 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.09557 * group2.width, y: group2.minY + 0.19742 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.13691 * group2.width, y: group2.minY + 0.37287 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.00000 * group2.width, y: group2.minY + 0.44524 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.00000 * group2.width, y: group2.minY + 0.42294 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.00000 * group2.width, y: group2.minY + 0.42874 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.00000 * group2.width, y: group2.minY + 0.55041 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.13645 * group2.width, y: group2.minY + 0.62594 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.00000 * group2.width, y: group2.minY + 0.56689 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.00000 * group2.width, y: group2.minY + 0.57209 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.15343 * group2.width, y: group2.minY + 0.66700 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.10816 * group2.width, y: group2.minY + 0.81523 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.09175 * group2.width, y: group2.minY + 0.79943 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.09599 * group2.width, y: group2.minY + 0.80354 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.18829 * group2.width, y: group2.minY + 0.89540 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.19824 * group2.width, y: group2.minY + 0.89572 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.33176 * group2.width, y: group2.minY + 0.84604 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.21034 * group2.width, y: group2.minY + 0.89572 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.25522 * group2.width, y: group2.minY + 0.87901 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.37326 * group2.width, y: group2.minY + 0.86323 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.44512 * group2.width, y: group2.minY + 1.00000 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.42323 * group2.width, y: group2.minY + 1.00002 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.42936 * group2.width, y: group2.minY + 1.00000 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.55024 * group2.width, y: group2.minY + 1.00000 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.62541 * group2.width, y: group2.minY + 0.86369 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.56598 * group2.width, y: group2.minY + 1.00000 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.57152 * group2.width, y: group2.minY + 0.99998 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.66710 * group2.width, y: group2.minY + 0.84655 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.79846 * group2.width, y: group2.minY + 0.89898 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.78034 * group2.width, y: group2.minY + 0.89898 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.79394 * group2.width, y: group2.minY + 0.89898 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.80709 * group2.width, y: group2.minY + 0.89898 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.81449 * group2.width, y: group2.minY + 0.89261 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.88900 * group2.width, y: group2.minY + 0.81833 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.84590 * group2.width, y: group2.minY + 0.66814 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.90033 * group2.width, y: group2.minY + 0.80666 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.90421 * group2.width, y: group2.minY + 0.80267 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.86292 * group2.width, y: group2.minY + 0.62693 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 1.00000 * group2.width, y: group2.minY + 0.55476 * group2.height), controlPoint1: NSPoint(x: group2.minX + 1.00000 * group2.width, y: group2.minY + 0.57708 * group2.height), controlPoint2: NSPoint(x: group2.minX + 1.00000 * group2.width, y: group2.minY + 0.57129 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 1.00000 * group2.width, y: group2.minY + 0.44971 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.86337 * group2.width, y: group2.minY + 0.37408 * group2.height), controlPoint1: NSPoint(x: group2.minX + 1.00000 * group2.width, y: group2.minY + 0.43362 * group2.height), controlPoint2: NSPoint(x: group2.minX + 1.00000 * group2.width, y: group2.minY + 0.42796 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.84651 * group2.width, y: group2.minY + 0.33298 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.89233 * group2.width, y: group2.minY + 0.18518 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.90787 * group2.width, y: group2.minY + 0.20113 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.90382 * group2.width, y: group2.minY + 0.19700 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.81159 * group2.width, y: group2.minY + 0.10451 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.80158 * group2.width, y: group2.minY + 0.10423 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.66832 * group2.width, y: group2.minY + 0.15397 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.78954 * group2.width, y: group2.minY + 0.10423 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.74476 * group2.width, y: group2.minY + 0.12096 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.62658 * group2.width, y: group2.minY + 0.13676 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.55471 * group2.width, y: group2.minY + 0.00000 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.57648 * group2.width, y: group2.minY + 0.00000 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.57079 * group2.width, y: group2.minY + 0.00000 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.55471 * group2.width, y: group2.minY + 0.00000 * group2.height))
        clipPath.close()
        clipPath.move(to: NSPoint(x: group2.minX + 0.46052 * group2.width, y: group2.minY + 0.04342 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.54343 * group2.width, y: group2.minY + 0.04342 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.58997 * group2.width, y: group2.minY + 0.16088 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.55294 * group2.width, y: group2.minY + 0.06321 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.57351 * group2.width, y: group2.minY + 0.11568 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.59329 * group2.width, y: group2.minY + 0.16988 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.66878 * group2.width, y: group2.minY + 0.20098 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.67690 * group2.width, y: group2.minY + 0.19747 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.79579 * group2.width, y: group2.minY + 0.14953 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.72189 * group2.width, y: group2.minY + 0.17789 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.77507 * group2.width, y: group2.minY + 0.15620 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.85405 * group2.width, y: group2.minY + 0.20768 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.80398 * group2.width, y: group2.minY + 0.32304 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.84665 * group2.width, y: group2.minY + 0.22861 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.82422 * group2.width, y: group2.minY + 0.27983 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.79990 * group2.width, y: group2.minY + 0.33182 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.83113 * group2.width, y: group2.minY + 0.40791 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.83964 * group2.width, y: group2.minY + 0.41126 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.95741 * group2.width, y: group2.minY + 0.46120 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.88508 * group2.width, y: group2.minY + 0.42911 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.93774 * group2.width, y: group2.minY + 0.45115 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.95741 * group2.width, y: group2.minY + 0.54289 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.83987 * group2.width, y: group2.minY + 0.58916 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.93751 * group2.width, y: group2.minY + 0.55244 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.88506 * group2.width, y: group2.minY + 0.57281 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.83102 * group2.width, y: group2.minY + 0.59239 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.79958 * group2.width, y: group2.minY + 0.66855 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.80333 * group2.width, y: group2.minY + 0.67714 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.85108 * group2.width, y: group2.minY + 0.79539 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.82267 * group2.width, y: group2.minY + 0.72168 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.84418 * group2.width, y: group2.minY + 0.77422 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.79266 * group2.width, y: group2.minY + 0.85366 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.67648 * group2.width, y: group2.minY + 0.80312 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.77381 * group2.width, y: group2.minY + 0.84695 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.72101 * group2.width, y: group2.minY + 0.82386 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.66818 * group2.width, y: group2.minY + 0.79924 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.59269 * group2.width, y: group2.minY + 0.83029 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.58932 * group2.width, y: group2.minY + 0.83886 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.53930 * group2.width, y: group2.minY + 0.95652 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.57148 * group2.width, y: group2.minY + 0.88431 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.54930 * group2.width, y: group2.minY + 0.93701 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.45645 * group2.width, y: group2.minY + 0.95652 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.40996 * group2.width, y: group2.minY + 0.83911 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.44689 * group2.width, y: group2.minY + 0.93678 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.42639 * group2.width, y: group2.minY + 0.88429 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.40670 * group2.width, y: group2.minY + 0.83016 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.33142 * group2.width, y: group2.minY + 0.79895 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.32330 * group2.width, y: group2.minY + 0.80249 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.20413 * group2.width, y: group2.minY + 0.85036 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.27821 * group2.width, y: group2.minY + 0.82204 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.22492 * group2.width, y: group2.minY + 0.84370 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.14597 * group2.width, y: group2.minY + 0.79218 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.19594 * group2.width, y: group2.minY + 0.67689 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.15327 * group2.width, y: group2.minY + 0.77128 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.17577 * group2.width, y: group2.minY + 0.72009 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.20008 * group2.width, y: group2.minY + 0.66809 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.16868 * group2.width, y: group2.minY + 0.59203 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.16024 * group2.width, y: group2.minY + 0.58870 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.04262 * group2.width, y: group2.minY + 0.53883 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.11486 * group2.width, y: group2.minY + 0.57087 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.06230 * group2.width, y: group2.minY + 0.54884 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.04262 * group2.width, y: group2.minY + 0.45704 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.16008 * group2.width, y: group2.minY + 0.41061 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.06252 * group2.width, y: group2.minY + 0.44745 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.11491 * group2.width, y: group2.minY + 0.42703 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.16886 * group2.width, y: group2.minY + 0.40735 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.20031 * group2.width, y: group2.minY + 0.33144 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.19655 * group2.width, y: group2.minY + 0.32287 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.14881 * group2.width, y: group2.minY + 0.20477 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.17721 * group2.width, y: group2.minY + 0.27836 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.15572 * group2.width, y: group2.minY + 0.22589 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.20734 * group2.width, y: group2.minY + 0.14631 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.32346 * group2.width, y: group2.minY + 0.19693 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.22615 * group2.width, y: group2.minY + 0.15308 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.27887 * group2.width, y: group2.minY + 0.17617 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.33181 * group2.width, y: group2.minY + 0.20083 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.40714 * group2.width, y: group2.minY + 0.16959 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.41051 * group2.width, y: group2.minY + 0.16102 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.46052 * group2.width, y: group2.minY + 0.04342 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.42841 * group2.width, y: group2.minY + 0.11555 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.45052 * group2.width, y: group2.minY + 0.06294 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.46052 * group2.width, y: group2.minY + 0.04342 * group2.height))
        clipPath.close()
        clipPath.move(to: NSPoint(x: group2.minX + 0.50000 * group2.width, y: group2.minY + 0.32498 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.32512 * group2.width, y: group2.minY + 0.50001 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.40361 * group2.width, y: group2.minY + 0.32498 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.32512 * group2.width, y: group2.minY + 0.40350 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.50000 * group2.width, y: group2.minY + 0.67492 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.32512 * group2.width, y: group2.minY + 0.59645 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.40359 * group2.width, y: group2.minY + 0.67492 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.67463 * group2.width, y: group2.minY + 0.50001 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.59633 * group2.width, y: group2.minY + 0.67492 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.67463 * group2.width, y: group2.minY + 0.59643 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.50000 * group2.width, y: group2.minY + 0.32498 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.67463 * group2.width, y: group2.minY + 0.40350 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.59633 * group2.width, y: group2.minY + 0.32498 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.50000 * group2.width, y: group2.minY + 0.32498 * group2.height))
        clipPath.close()
        clipPath.move(to: NSPoint(x: group2.minX + 0.50000 * group2.width, y: group2.minY + 0.63146 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.36773 * group2.width, y: group2.minY + 0.50001 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.42704 * group2.width, y: group2.minY + 0.63146 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.36773 * group2.width, y: group2.minY + 0.57248 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.50000 * group2.width, y: group2.minY + 0.36845 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.36773 * group2.width, y: group2.minY + 0.42748 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.42702 * group2.width, y: group2.minY + 0.36845 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.63209 * group2.width, y: group2.minY + 0.50001 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.57283 * group2.width, y: group2.minY + 0.36845 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.63209 * group2.width, y: group2.minY + 0.42748 * group2.height))
        clipPath.curve(to: NSPoint(x: group2.minX + 0.50000 * group2.width, y: group2.minY + 0.63146 * group2.height), controlPoint1: NSPoint(x: group2.minX + 0.63207 * group2.width, y: group2.minY + 0.57248 * group2.height), controlPoint2: NSPoint(x: group2.minX + 0.57283 * group2.width, y: group2.minY + 0.63146 * group2.height))
        clipPath.line(to: NSPoint(x: group2.minX + 0.50000 * group2.width, y: group2.minY + 0.63146 * group2.height))
        clipPath.close()
        clipPath.windingRule = .evenOdd
        clipPath.addClip()


        //// Rectangle Drawing
        let rectanglePath = NSBezierPath(rect: NSRect(x: group2.minX + fastFloor(group2.width * -0.20000 + 0.5), y: group2.minY + fastFloor(group2.height * -0.20397 + 0.5) + 0, width: fastFloor(group2.width * 1.20001 + 0.5) - fastFloor(group2.width * -0.20000 + 0.5), height: fastFloor(group2.height * 1.20403 - 0) - fastFloor(group2.height * -0.20397 + 0.5) + 0.5))
        setupLockGear.setFill()
        rectanglePath.fill()


        context.endTransparencyLayer()
        NSGraphicsContext.restoreGraphicsState()
    }

    @objc dynamic public class func drawSetupLockSelected(frame: NSRect = NSRect(x: 0, y: 0, width: 230, height: 230), setupLockGear: NSColor = NSColor(red: 0.425, green: 0.46, blue: 0.499, alpha: 1)) {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }


        //// Subframes
        let group: NSRect = NSRect(x: frame.minX + fastFloor(frame.width * 0.00000 + 0.5), y: frame.minY + fastFloor(frame.height * 0.01955 + 0) + 0.5, width: fastFloor(frame.width * 1.00000 - 0.5) - fastFloor(frame.width * 0.00000 + 0.5) + 1, height: fastFloor(frame.height * 0.99997 - 0.49) - fastFloor(frame.height * 0.01955 + 0) + 0.5)


        //// Group
        //// Group 2
        NSGraphicsContext.saveGraphicsState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = NSBezierPath()
        clipPath.move(to: NSPoint(x: group.minX + 0.55471 * group.width, y: group.minY + 0.00000 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.44959 * group.width, y: group.minY + 0.00000 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.37437 * group.width, y: group.minY + 0.13622 * group.height), controlPoint1: NSPoint(x: group.minX + 0.43378 * group.width, y: group.minY + 0.00000 * group.height), controlPoint2: NSPoint(x: group.minX + 0.42826 * group.width, y: group.minY + -0.00003 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.33274 * group.width, y: group.minY + 0.15349 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.20142 * group.width, y: group.minY + 0.10098 * group.height), controlPoint1: NSPoint(x: group.minX + 0.21934 * group.width, y: group.minY + 0.10098 * group.height), controlPoint2: NSPoint(x: group.minX + 0.20591 * group.width, y: group.minY + 0.10098 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.19274 * group.width, y: group.minY + 0.10098 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.18534 * group.width, y: group.minY + 0.10747 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.11083 * group.width, y: group.minY + 0.18187 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.15388 * group.width, y: group.minY + 0.33189 * group.height), controlPoint1: NSPoint(x: group.minX + 0.09950 * group.width, y: group.minY + 0.19341 * group.height), controlPoint2: NSPoint(x: group.minX + 0.09557 * group.width, y: group.minY + 0.19742 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.13691 * group.width, y: group.minY + 0.37287 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.00000 * group.width, y: group.minY + 0.44524 * group.height), controlPoint1: NSPoint(x: group.minX + 0.00000 * group.width, y: group.minY + 0.42294 * group.height), controlPoint2: NSPoint(x: group.minX + 0.00000 * group.width, y: group.minY + 0.42874 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.00000 * group.width, y: group.minY + 0.55041 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.13645 * group.width, y: group.minY + 0.62594 * group.height), controlPoint1: NSPoint(x: group.minX + 0.00000 * group.width, y: group.minY + 0.56689 * group.height), controlPoint2: NSPoint(x: group.minX + 0.00000 * group.width, y: group.minY + 0.57209 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.15343 * group.width, y: group.minY + 0.66700 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.10816 * group.width, y: group.minY + 0.81523 * group.height), controlPoint1: NSPoint(x: group.minX + 0.09175 * group.width, y: group.minY + 0.79943 * group.height), controlPoint2: NSPoint(x: group.minX + 0.09599 * group.width, y: group.minY + 0.80354 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.18829 * group.width, y: group.minY + 0.89540 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.19824 * group.width, y: group.minY + 0.89572 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.33176 * group.width, y: group.minY + 0.84604 * group.height), controlPoint1: NSPoint(x: group.minX + 0.21034 * group.width, y: group.minY + 0.89572 * group.height), controlPoint2: NSPoint(x: group.minX + 0.25522 * group.width, y: group.minY + 0.87901 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.37326 * group.width, y: group.minY + 0.86323 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.44512 * group.width, y: group.minY + 1.00000 * group.height), controlPoint1: NSPoint(x: group.minX + 0.42323 * group.width, y: group.minY + 1.00002 * group.height), controlPoint2: NSPoint(x: group.minX + 0.42936 * group.width, y: group.minY + 1.00000 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.55024 * group.width, y: group.minY + 1.00000 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.62541 * group.width, y: group.minY + 0.86369 * group.height), controlPoint1: NSPoint(x: group.minX + 0.56598 * group.width, y: group.minY + 1.00000 * group.height), controlPoint2: NSPoint(x: group.minX + 0.57152 * group.width, y: group.minY + 0.99998 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.66710 * group.width, y: group.minY + 0.84655 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.79846 * group.width, y: group.minY + 0.89898 * group.height), controlPoint1: NSPoint(x: group.minX + 0.78034 * group.width, y: group.minY + 0.89898 * group.height), controlPoint2: NSPoint(x: group.minX + 0.79394 * group.width, y: group.minY + 0.89898 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.80709 * group.width, y: group.minY + 0.89898 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.81449 * group.width, y: group.minY + 0.89261 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.88900 * group.width, y: group.minY + 0.81833 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.84590 * group.width, y: group.minY + 0.66814 * group.height), controlPoint1: NSPoint(x: group.minX + 0.90033 * group.width, y: group.minY + 0.80666 * group.height), controlPoint2: NSPoint(x: group.minX + 0.90421 * group.width, y: group.minY + 0.80267 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.86292 * group.width, y: group.minY + 0.62693 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 1.00000 * group.width, y: group.minY + 0.55476 * group.height), controlPoint1: NSPoint(x: group.minX + 1.00000 * group.width, y: group.minY + 0.57708 * group.height), controlPoint2: NSPoint(x: group.minX + 1.00000 * group.width, y: group.minY + 0.57129 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 1.00000 * group.width, y: group.minY + 0.44971 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.86337 * group.width, y: group.minY + 0.37408 * group.height), controlPoint1: NSPoint(x: group.minX + 1.00000 * group.width, y: group.minY + 0.43362 * group.height), controlPoint2: NSPoint(x: group.minX + 1.00000 * group.width, y: group.minY + 0.42796 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.84651 * group.width, y: group.minY + 0.33298 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.89233 * group.width, y: group.minY + 0.18518 * group.height), controlPoint1: NSPoint(x: group.minX + 0.90787 * group.width, y: group.minY + 0.20113 * group.height), controlPoint2: NSPoint(x: group.minX + 0.90382 * group.width, y: group.minY + 0.19700 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.81159 * group.width, y: group.minY + 0.10451 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.80158 * group.width, y: group.minY + 0.10423 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.66832 * group.width, y: group.minY + 0.15397 * group.height), controlPoint1: NSPoint(x: group.minX + 0.78954 * group.width, y: group.minY + 0.10423 * group.height), controlPoint2: NSPoint(x: group.minX + 0.74476 * group.width, y: group.minY + 0.12096 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.62658 * group.width, y: group.minY + 0.13676 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.55471 * group.width, y: group.minY + 0.00000 * group.height), controlPoint1: NSPoint(x: group.minX + 0.57648 * group.width, y: group.minY + 0.00000 * group.height), controlPoint2: NSPoint(x: group.minX + 0.57079 * group.width, y: group.minY + 0.00000 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.55471 * group.width, y: group.minY + 0.00000 * group.height))
        clipPath.close()
        clipPath.move(to: NSPoint(x: group.minX + 0.46052 * group.width, y: group.minY + 0.04342 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.54343 * group.width, y: group.minY + 0.04342 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.58997 * group.width, y: group.minY + 0.16088 * group.height), controlPoint1: NSPoint(x: group.minX + 0.55294 * group.width, y: group.minY + 0.06321 * group.height), controlPoint2: NSPoint(x: group.minX + 0.57351 * group.width, y: group.minY + 0.11568 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.59329 * group.width, y: group.minY + 0.16988 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.66878 * group.width, y: group.minY + 0.20098 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.67690 * group.width, y: group.minY + 0.19747 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.79579 * group.width, y: group.minY + 0.14953 * group.height), controlPoint1: NSPoint(x: group.minX + 0.72189 * group.width, y: group.minY + 0.17789 * group.height), controlPoint2: NSPoint(x: group.minX + 0.77507 * group.width, y: group.minY + 0.15620 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.85405 * group.width, y: group.minY + 0.20768 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.80398 * group.width, y: group.minY + 0.32304 * group.height), controlPoint1: NSPoint(x: group.minX + 0.84665 * group.width, y: group.minY + 0.22861 * group.height), controlPoint2: NSPoint(x: group.minX + 0.82422 * group.width, y: group.minY + 0.27983 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.79990 * group.width, y: group.minY + 0.33182 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.83113 * group.width, y: group.minY + 0.40791 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.83964 * group.width, y: group.minY + 0.41126 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.95741 * group.width, y: group.minY + 0.46120 * group.height), controlPoint1: NSPoint(x: group.minX + 0.88508 * group.width, y: group.minY + 0.42911 * group.height), controlPoint2: NSPoint(x: group.minX + 0.93774 * group.width, y: group.minY + 0.45115 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.95741 * group.width, y: group.minY + 0.54289 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.83987 * group.width, y: group.minY + 0.58916 * group.height), controlPoint1: NSPoint(x: group.minX + 0.93751 * group.width, y: group.minY + 0.55244 * group.height), controlPoint2: NSPoint(x: group.minX + 0.88506 * group.width, y: group.minY + 0.57281 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.83102 * group.width, y: group.minY + 0.59239 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.79958 * group.width, y: group.minY + 0.66855 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.80333 * group.width, y: group.minY + 0.67714 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.85108 * group.width, y: group.minY + 0.79539 * group.height), controlPoint1: NSPoint(x: group.minX + 0.82267 * group.width, y: group.minY + 0.72168 * group.height), controlPoint2: NSPoint(x: group.minX + 0.84418 * group.width, y: group.minY + 0.77422 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.79266 * group.width, y: group.minY + 0.85366 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.67648 * group.width, y: group.minY + 0.80312 * group.height), controlPoint1: NSPoint(x: group.minX + 0.77381 * group.width, y: group.minY + 0.84695 * group.height), controlPoint2: NSPoint(x: group.minX + 0.72101 * group.width, y: group.minY + 0.82386 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.66818 * group.width, y: group.minY + 0.79924 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.59269 * group.width, y: group.minY + 0.83029 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.58932 * group.width, y: group.minY + 0.83886 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.53930 * group.width, y: group.minY + 0.95652 * group.height), controlPoint1: NSPoint(x: group.minX + 0.57148 * group.width, y: group.minY + 0.88431 * group.height), controlPoint2: NSPoint(x: group.minX + 0.54930 * group.width, y: group.minY + 0.93701 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.45645 * group.width, y: group.minY + 0.95652 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.40996 * group.width, y: group.minY + 0.83911 * group.height), controlPoint1: NSPoint(x: group.minX + 0.44689 * group.width, y: group.minY + 0.93678 * group.height), controlPoint2: NSPoint(x: group.minX + 0.42639 * group.width, y: group.minY + 0.88429 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.40670 * group.width, y: group.minY + 0.83016 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.33142 * group.width, y: group.minY + 0.79895 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.32330 * group.width, y: group.minY + 0.80249 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.20413 * group.width, y: group.minY + 0.85036 * group.height), controlPoint1: NSPoint(x: group.minX + 0.27821 * group.width, y: group.minY + 0.82204 * group.height), controlPoint2: NSPoint(x: group.minX + 0.22492 * group.width, y: group.minY + 0.84370 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.14597 * group.width, y: group.minY + 0.79218 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.19594 * group.width, y: group.minY + 0.67689 * group.height), controlPoint1: NSPoint(x: group.minX + 0.15327 * group.width, y: group.minY + 0.77128 * group.height), controlPoint2: NSPoint(x: group.minX + 0.17577 * group.width, y: group.minY + 0.72009 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.20008 * group.width, y: group.minY + 0.66809 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.16868 * group.width, y: group.minY + 0.59203 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.16024 * group.width, y: group.minY + 0.58870 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.04262 * group.width, y: group.minY + 0.53883 * group.height), controlPoint1: NSPoint(x: group.minX + 0.11486 * group.width, y: group.minY + 0.57087 * group.height), controlPoint2: NSPoint(x: group.minX + 0.06230 * group.width, y: group.minY + 0.54884 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.04262 * group.width, y: group.minY + 0.45704 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.16008 * group.width, y: group.minY + 0.41061 * group.height), controlPoint1: NSPoint(x: group.minX + 0.06252 * group.width, y: group.minY + 0.44745 * group.height), controlPoint2: NSPoint(x: group.minX + 0.11491 * group.width, y: group.minY + 0.42703 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.16886 * group.width, y: group.minY + 0.40735 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.20031 * group.width, y: group.minY + 0.33144 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.19655 * group.width, y: group.minY + 0.32287 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.14881 * group.width, y: group.minY + 0.20477 * group.height), controlPoint1: NSPoint(x: group.minX + 0.17721 * group.width, y: group.minY + 0.27836 * group.height), controlPoint2: NSPoint(x: group.minX + 0.15572 * group.width, y: group.minY + 0.22589 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.20734 * group.width, y: group.minY + 0.14631 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.32346 * group.width, y: group.minY + 0.19693 * group.height), controlPoint1: NSPoint(x: group.minX + 0.22615 * group.width, y: group.minY + 0.15308 * group.height), controlPoint2: NSPoint(x: group.minX + 0.27887 * group.width, y: group.minY + 0.17617 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.33181 * group.width, y: group.minY + 0.20083 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.40714 * group.width, y: group.minY + 0.16959 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.41051 * group.width, y: group.minY + 0.16102 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.46052 * group.width, y: group.minY + 0.04342 * group.height), controlPoint1: NSPoint(x: group.minX + 0.42841 * group.width, y: group.minY + 0.11555 * group.height), controlPoint2: NSPoint(x: group.minX + 0.45052 * group.width, y: group.minY + 0.06294 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.46052 * group.width, y: group.minY + 0.04342 * group.height))
        clipPath.close()
        clipPath.move(to: NSPoint(x: group.minX + 0.50000 * group.width, y: group.minY + 0.32498 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.32512 * group.width, y: group.minY + 0.50001 * group.height), controlPoint1: NSPoint(x: group.minX + 0.40361 * group.width, y: group.minY + 0.32498 * group.height), controlPoint2: NSPoint(x: group.minX + 0.32512 * group.width, y: group.minY + 0.40350 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.50000 * group.width, y: group.minY + 0.67492 * group.height), controlPoint1: NSPoint(x: group.minX + 0.32512 * group.width, y: group.minY + 0.59645 * group.height), controlPoint2: NSPoint(x: group.minX + 0.40359 * group.width, y: group.minY + 0.67492 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.67463 * group.width, y: group.minY + 0.50001 * group.height), controlPoint1: NSPoint(x: group.minX + 0.59633 * group.width, y: group.minY + 0.67492 * group.height), controlPoint2: NSPoint(x: group.minX + 0.67463 * group.width, y: group.minY + 0.59643 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.50000 * group.width, y: group.minY + 0.32498 * group.height), controlPoint1: NSPoint(x: group.minX + 0.67463 * group.width, y: group.minY + 0.40350 * group.height), controlPoint2: NSPoint(x: group.minX + 0.59633 * group.width, y: group.minY + 0.32498 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.50000 * group.width, y: group.minY + 0.32498 * group.height))
        clipPath.close()
        clipPath.move(to: NSPoint(x: group.minX + 0.50000 * group.width, y: group.minY + 0.63146 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.36773 * group.width, y: group.minY + 0.50001 * group.height), controlPoint1: NSPoint(x: group.minX + 0.42704 * group.width, y: group.minY + 0.63146 * group.height), controlPoint2: NSPoint(x: group.minX + 0.36773 * group.width, y: group.minY + 0.57248 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.50000 * group.width, y: group.minY + 0.36845 * group.height), controlPoint1: NSPoint(x: group.minX + 0.36773 * group.width, y: group.minY + 0.42748 * group.height), controlPoint2: NSPoint(x: group.minX + 0.42702 * group.width, y: group.minY + 0.36845 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.63209 * group.width, y: group.minY + 0.50001 * group.height), controlPoint1: NSPoint(x: group.minX + 0.57283 * group.width, y: group.minY + 0.36845 * group.height), controlPoint2: NSPoint(x: group.minX + 0.63209 * group.width, y: group.minY + 0.42748 * group.height))
        clipPath.curve(to: NSPoint(x: group.minX + 0.50000 * group.width, y: group.minY + 0.63146 * group.height), controlPoint1: NSPoint(x: group.minX + 0.63207 * group.width, y: group.minY + 0.57248 * group.height), controlPoint2: NSPoint(x: group.minX + 0.57283 * group.width, y: group.minY + 0.63146 * group.height))
        clipPath.line(to: NSPoint(x: group.minX + 0.50000 * group.width, y: group.minY + 0.63146 * group.height))
        clipPath.close()
        clipPath.windingRule = .evenOdd
        clipPath.addClip()


        //// Rectangle Drawing
        let rectanglePath = NSBezierPath(rect: NSRect(x: group.minX + fastFloor(group.width * -0.20000 + 0.5), y: group.minY + fastFloor(group.height * -0.20397 + 0.5) + 0, width: fastFloor(group.width * 1.20001 + 0.5) - fastFloor(group.width * -0.20000 + 0.5), height: fastFloor(group.height * 1.20403 - 0) - fastFloor(group.height * -0.20397 + 0.5) + 0.5))
        setupLockGear.setFill()
        rectanglePath.fill()


        context.endTransparencyLayer()
        NSGraphicsContext.restoreGraphicsState()


        //// Bezier Drawing
        let bezierPath = NSBezierPath()
        bezierPath.move(to: NSPoint(x: group.minX + 0.54751 * group.width, y: group.minY + 0.97747 * group.height))
        bezierPath.curve(to: NSPoint(x: group.minX + 0.61250 * group.width, y: group.minY + 0.85216 * group.height), controlPoint1: NSPoint(x: group.minX + 0.54750 * group.width, y: group.minY + 0.97748 * group.height), controlPoint2: NSPoint(x: group.minX + 0.61250 * group.width, y: group.minY + 0.85216 * group.height))
        bezierPath.line(to: NSPoint(x: group.minX + 0.66750 * group.width, y: group.minY + 0.82710 * group.height))
        bezierPath.line(to: NSPoint(x: group.minX + 0.79250 * group.width, y: group.minY + 0.88224 * group.height))
        bezierPath.line(to: NSPoint(x: group.minX + 0.87750 * group.width, y: group.minY + 0.79703 * group.height))
        bezierPath.line(to: NSPoint(x: group.minX + 0.82750 * group.width, y: group.minY + 0.67672 * group.height))
        bezierPath.line(to: NSPoint(x: group.minX + 0.85250 * group.width, y: group.minY + 0.61156 * group.height))
        bezierPath.line(to: NSPoint(x: group.minX + 0.97750 * group.width, y: group.minY + 0.55141 * group.height))
        bezierPath.line(to: NSPoint(x: group.minX + 0.97750 * group.width, y: group.minY + 0.45617 * group.height))
        bezierPath.line(to: NSPoint(x: group.minX + 0.85250 * group.width, y: group.minY + 0.39100 * group.height))
        bezierPath.line(to: NSPoint(x: group.minX + 0.82750 * group.width, y: group.minY + 0.34088 * group.height))
        bezierPath.line(to: NSPoint(x: group.minX + 0.87750 * group.width, y: group.minY + 0.21055 * group.height))
        bezierPath.line(to: NSPoint(x: group.minX + 0.80750 * group.width, y: group.minY + 0.12534 * group.height))
        bezierPath.line(to: NSPoint(x: group.minX + 0.67750 * group.width, y: group.minY + 0.17546 * group.height))
        bezierPath.line(to: NSPoint(x: group.minX + 0.61250 * group.width, y: group.minY + 0.15541 * group.height))
        bezierPath.line(to: NSPoint(x: group.minX + 0.54750 * group.width, y: group.minY + 0.02508 * group.height))
        bezierPath.line(to: NSPoint(x: group.minX + 0.45250 * group.width, y: group.minY + 0.02508 * group.height))
        bezierPath.line(to: NSPoint(x: group.minX + 0.38750 * group.width, y: group.minY + 0.15541 * group.height))
        bezierPath.line(to: NSPoint(x: group.minX + 0.33250 * group.width, y: group.minY + 0.17546 * group.height))
        bezierPath.line(to: NSPoint(x: group.minX + 0.20750 * group.width, y: group.minY + 0.12534 * group.height))
        bezierPath.line(to: NSPoint(x: group.minX + 0.13250 * group.width, y: group.minY + 0.19551 * group.height))
        bezierPath.line(to: NSPoint(x: group.minX + 0.17250 * group.width, y: group.minY + 0.32083 * group.height))
        bezierPath.line(to: NSPoint(x: group.minX + 0.15250 * group.width, y: group.minY + 0.39100 * group.height))
        bezierPath.line(to: NSPoint(x: group.minX + 0.02250 * group.width, y: group.minY + 0.44113 * group.height))
        bezierPath.line(to: NSPoint(x: group.minX + 0.02250 * group.width, y: group.minY + 0.55141 * group.height))
        bezierPath.line(to: NSPoint(x: group.minX + 0.15250 * group.width, y: group.minY + 0.61156 * group.height))
        bezierPath.line(to: NSPoint(x: group.minX + 0.17250 * group.width, y: group.minY + 0.67672 * group.height))
        bezierPath.line(to: NSPoint(x: group.minX + 0.12250 * group.width, y: group.minY + 0.79703 * group.height))
        bezierPath.line(to: NSPoint(x: group.minX + 0.19750 * group.width, y: group.minY + 0.87221 * group.height))
        bezierPath.line(to: NSPoint(x: group.minX + 0.33250 * group.width, y: group.minY + 0.82710 * group.height))
        bezierPath.line(to: NSPoint(x: group.minX + 0.38750 * group.width, y: group.minY + 0.85216 * group.height))
        bezierPath.line(to: NSPoint(x: group.minX + 0.44250 * group.width, y: group.minY + 0.97748 * group.height))
        bezierPath.line(to: NSPoint(x: group.minX + 0.54750 * group.width, y: group.minY + 0.97748 * group.height))
        bezierPath.line(to: NSPoint(x: group.minX + 0.54751 * group.width, y: group.minY + 0.97747 * group.height))
        bezierPath.close()
        bezierPath.move(to: NSPoint(x: group.minX + 0.40854 * group.width, y: group.minY + 0.59524 * group.height))
        bezierPath.curve(to: NSPoint(x: group.minX + 0.40631 * group.width, y: group.minY + 0.59307 * group.height), controlPoint1: NSPoint(x: group.minX + 0.40779 * group.width, y: group.minY + 0.59453 * group.height), controlPoint2: NSPoint(x: group.minX + 0.40705 * group.width, y: group.minY + 0.59380 * group.height))
        bezierPath.curve(to: NSPoint(x: group.minX + 0.40631 * group.width, y: group.minY + 0.40699 * group.height), controlPoint1: NSPoint(x: group.minX + 0.35457 * group.width, y: group.minY + 0.54168 * group.height), controlPoint2: NSPoint(x: group.minX + 0.35457 * group.width, y: group.minY + 0.45837 * group.height))
        bezierPath.curve(to: NSPoint(x: group.minX + 0.59369 * group.width, y: group.minY + 0.40699 * group.height), controlPoint1: NSPoint(x: group.minX + 0.45806 * group.width, y: group.minY + 0.35560 * group.height), controlPoint2: NSPoint(x: group.minX + 0.54195 * group.width, y: group.minY + 0.35560 * group.height))
        bezierPath.curve(to: NSPoint(x: group.minX + 0.59369 * group.width, y: group.minY + 0.59307 * group.height), controlPoint1: NSPoint(x: group.minX + 0.64544 * group.width, y: group.minY + 0.45837 * group.height), controlPoint2: NSPoint(x: group.minX + 0.64544 * group.width, y: group.minY + 0.54168 * group.height))
        bezierPath.curve(to: NSPoint(x: group.minX + 0.40854 * group.width, y: group.minY + 0.59524 * group.height), controlPoint1: NSPoint(x: group.minX + 0.54269 * group.width, y: group.minY + 0.64372 * group.height), controlPoint2: NSPoint(x: group.minX + 0.46044 * group.width, y: group.minY + 0.64445 * group.height))
        bezierPath.close()
        setupLockGear.setFill()
        bezierPath.fill()
        setupLockGear.setStroke()
        bezierPath.lineWidth = 1
        bezierPath.stroke()
    }

    @objc dynamic public class func drawSetupKey(frame: NSRect = NSRect(x: 0, y: 0, width: 230, height: 230)) {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext

        //// Color Declarations
        let setupKeyFill = NSColor(red: 0, green: 0, blue: 0, alpha: 1)

        //// Group
        NSGraphicsContext.saveGraphicsState()
        context.translateBy(x: frame.minX + 0.00000 * frame.width, y: frame.minY + 1.00000 * frame.height)
        context.scaleBy(x: 9.2, y: 9.2)



        //// Bezier Drawing
        let bezierPath = NSBezierPath()
        bezierPath.move(to: NSPoint(x: 9.53, y: -11.6))
        bezierPath.curve(to: NSPoint(x: 8.97, y: -12.21), controlPoint1: NSPoint(x: 9.32, y: -11.77), controlPoint2: NSPoint(x: 9.13, y: -11.97))
        bezierPath.curve(to: NSPoint(x: 7.63, y: -14.79), controlPoint1: NSPoint(x: 8.3, y: -13.49), controlPoint2: NSPoint(x: 8.3, y: -13.49))
        bezierPath.curve(to: NSPoint(x: 3.56, y: -22.58), controlPoint1: NSPoint(x: 5.59, y: -18.69), controlPoint2: NSPoint(x: 4.76, y: -20.29))
        bezierPath.line(to: NSPoint(x: 3.41, y: -22.67))
        bezierPath.curve(to: NSPoint(x: 1.92, y: -22.7), controlPoint1: NSPoint(x: 2.59, y: -22.6), controlPoint2: NSPoint(x: 2.27, y: -22.6))
        bezierPath.line(to: NSPoint(x: 1.75, y: -22.64))
        bezierPath.curve(to: NSPoint(x: 1.02, y: -20.01), controlPoint1: NSPoint(x: 1.22, y: -21.79), controlPoint2: NSPoint(x: 1.02, y: -20.99))
        bezierPath.line(to: NSPoint(x: 1.13, y: -19.86))
        bezierPath.curve(to: NSPoint(x: 1.39, y: -19.77), controlPoint1: NSPoint(x: 1.26, y: -19.82), controlPoint2: NSPoint(x: 1.26, y: -19.82))
        bezierPath.curve(to: NSPoint(x: 1.66, y: -19.69), controlPoint1: NSPoint(x: 1.52, y: -19.73), controlPoint2: NSPoint(x: 1.52, y: -19.73))
        bezierPath.curve(to: NSPoint(x: 1.79, y: -19.65), controlPoint1: NSPoint(x: 1.72, y: -19.67), controlPoint2: NSPoint(x: 1.72, y: -19.67))
        bezierPath.line(to: NSPoint(x: 1.72, y: -19.69))
        bezierPath.curve(to: NSPoint(x: 2.12, y: -19.05), controlPoint1: NSPoint(x: 1.9, y: -19.51), controlPoint2: NSPoint(x: 2.03, y: -19.3))
        bezierPath.line(to: NSPoint(x: 2.11, y: -19.12))
        bezierPath.curve(to: NSPoint(x: 2.07, y: -18.8), controlPoint1: NSPoint(x: 2.09, y: -18.96), controlPoint2: NSPoint(x: 2.09, y: -18.96))
        bezierPath.curve(to: NSPoint(x: 2.03, y: -18.48), controlPoint1: NSPoint(x: 2.05, y: -18.64), controlPoint2: NSPoint(x: 2.05, y: -18.64))
        bezierPath.line(to: NSPoint(x: 2.12, y: -18.32))
        bezierPath.curve(to: NSPoint(x: 3, y: -17.93), controlPoint1: NSPoint(x: 2.56, y: -18.13), controlPoint2: NSPoint(x: 2.56, y: -18.13))
        bezierPath.curve(to: NSPoint(x: 3.28, y: -17.45), controlPoint1: NSPoint(x: 3.09, y: -17.87), controlPoint2: NSPoint(x: 3.19, y: -17.7))
        bezierPath.line(to: NSPoint(x: 3.27, y: -17.5))
        bezierPath.curve(to: NSPoint(x: 3.27, y: -17.36), controlPoint1: NSPoint(x: 3.27, y: -17.43), controlPoint2: NSPoint(x: 3.27, y: -17.43))
        bezierPath.curve(to: NSPoint(x: 3.27, y: -16.8), controlPoint1: NSPoint(x: 3.27, y: -17.08), controlPoint2: NSPoint(x: 3.27, y: -17.08))
        bezierPath.line(to: NSPoint(x: 3.37, y: -16.66))
        bezierPath.curve(to: NSPoint(x: 4.19, y: -16.35), controlPoint1: NSPoint(x: 3.78, y: -16.51), controlPoint2: NSPoint(x: 3.78, y: -16.51))
        bezierPath.line(to: NSPoint(x: 4.13, y: -16.39))
        bezierPath.curve(to: NSPoint(x: 4.47, y: -15.77), controlPoint1: NSPoint(x: 4.29, y: -16.23), controlPoint2: NSPoint(x: 4.4, y: -16.02))
        bezierPath.curve(to: NSPoint(x: 4.34, y: -15.39), controlPoint1: NSPoint(x: 4.46, y: -15.72), controlPoint2: NSPoint(x: 4.43, y: -15.62))
        bezierPath.line(to: NSPoint(x: 4.34, y: -15.39))
        bezierPath.curve(to: NSPoint(x: 4.52, y: -14.36), controlPoint1: NSPoint(x: 4.11, y: -14.81), controlPoint2: NSPoint(x: 4.1, y: -14.54))
        bezierPath.line(to: NSPoint(x: 4.45, y: -14.43))
        bezierPath.curve(to: NSPoint(x: 4.88, y: -13.71), controlPoint1: NSPoint(x: 4.66, y: -14.07), controlPoint2: NSPoint(x: 4.66, y: -14.07))
        bezierPath.line(to: NSPoint(x: 4.86, y: -13.83))
        bezierPath.curve(to: NSPoint(x: 4.74, y: -13.48), controlPoint1: NSPoint(x: 4.84, y: -13.75), controlPoint2: NSPoint(x: 4.81, y: -13.67))
        bezierPath.line(to: NSPoint(x: 4.74, y: -13.48))
        bezierPath.curve(to: NSPoint(x: 4.6, y: -12.8), controlPoint1: NSPoint(x: 4.57, y: -12.98), controlPoint2: NSPoint(x: 4.55, y: -12.91))
        bezierPath.curve(to: NSPoint(x: 4.86, y: -12.29), controlPoint1: NSPoint(x: 4.66, y: -12.65), controlPoint2: NSPoint(x: 4.74, y: -12.49))
        bezierPath.curve(to: NSPoint(x: 5.04, y: -11.99), controlPoint1: NSPoint(x: 4.9, y: -12.22), controlPoint2: NSPoint(x: 4.95, y: -12.14))
        bezierPath.curve(to: NSPoint(x: 5.45, y: -11.16), controlPoint1: NSPoint(x: 5.24, y: -11.65), controlPoint2: NSPoint(x: 5.36, y: -11.42))
        bezierPath.line(to: NSPoint(x: 5.46, y: -11.28))
        bezierPath.curve(to: NSPoint(x: 5.21, y: -10.98), controlPoint1: NSPoint(x: 5.4, y: -11.15), controlPoint2: NSPoint(x: 5.33, y: -11.07))
        bezierPath.curve(to: NSPoint(x: 5.04, y: -10.88), controlPoint1: NSPoint(x: 5.17, y: -10.96), controlPoint2: NSPoint(x: 5.02, y: -10.86))
        bezierPath.curve(to: NSPoint(x: 4.75, y: -10.3), controlPoint1: NSPoint(x: 4.8, y: -10.73), controlPoint2: NSPoint(x: 4.71, y: -10.57))
        bezierPath.curve(to: NSPoint(x: 5.18, y: -9.64), controlPoint1: NSPoint(x: 4.74, y: -10.03), controlPoint2: NSPoint(x: 4.88, y: -9.85))
        bezierPath.curve(to: NSPoint(x: 5.5, y: -9.43), controlPoint1: NSPoint(x: 5.2, y: -9.63), controlPoint2: NSPoint(x: 5.43, y: -9.48))
        bezierPath.curve(to: NSPoint(x: 6.01, y: -8.8), controlPoint1: NSPoint(x: 5.75, y: -9.24), controlPoint2: NSPoint(x: 5.91, y: -9.06))
        bezierPath.line(to: NSPoint(x: 6.03, y: -8.95))
        bezierPath.curve(to: NSPoint(x: 5.64, y: -3.24), controlPoint1: NSPoint(x: 4.84, y: -7.29), controlPoint2: NSPoint(x: 4.67, y: -5.09))
        bezierPath.curve(to: NSPoint(x: 11.07, y: -0.33), controlPoint1: NSPoint(x: 6.69, y: -1.22), controlPoint2: NSPoint(x: 8.86, y: -0.08))
        bezierPath.line(to: NSPoint(x: 12.09, y: -0.44))
        bezierPath.line(to: NSPoint(x: 11.09, y: -0.64))
        bezierPath.curve(to: NSPoint(x: 6.96, y: -5.68), controlPoint1: NSPoint(x: 8.71, y: -1.1), controlPoint2: NSPoint(x: 6.96, y: -3.21))
        bezierPath.curve(to: NSPoint(x: 9.78, y: -10.28), controlPoint1: NSPoint(x: 6.96, y: -7.65), controlPoint2: NSPoint(x: 8.06, y: -9.42))
        bezierPath.line(to: NSPoint(x: 9.86, y: -10.41))
        bezierPath.curve(to: NSPoint(x: 9.57, y: -11.55), controlPoint1: NSPoint(x: 9.91, y: -10.81), controlPoint2: NSPoint(x: 9.82, y: -11.11))
        bezierPath.line(to: NSPoint(x: 9.53, y: -11.6))
        bezierPath.close()
        bezierPath.move(to: NSPoint(x: 9.34, y: -11.35))
        bezierPath.line(to: NSPoint(x: 9.3, y: -11.4))
        bezierPath.curve(to: NSPoint(x: 9.55, y: -10.44), controlPoint1: NSPoint(x: 9.51, y: -11.01), controlPoint2: NSPoint(x: 9.59, y: -10.77))
        bezierPath.line(to: NSPoint(x: 9.64, y: -10.56))
        bezierPath.curve(to: NSPoint(x: 6.65, y: -5.68), controlPoint1: NSPoint(x: 7.82, y: -9.65), controlPoint2: NSPoint(x: 6.65, y: -7.77))
        bezierPath.curve(to: NSPoint(x: 11.03, y: -0.33), controlPoint1: NSPoint(x: 6.65, y: -3.06), controlPoint2: NSPoint(x: 8.5, y: -0.82))
        bezierPath.line(to: NSPoint(x: 11.04, y: -0.64))
        bezierPath.curve(to: NSPoint(x: 5.91, y: -3.38), controlPoint1: NSPoint(x: 8.96, y: -0.4), controlPoint2: NSPoint(x: 6.91, y: -1.48))
        bezierPath.curve(to: NSPoint(x: 6.28, y: -8.76), controlPoint1: NSPoint(x: 5, y: -5.13), controlPoint2: NSPoint(x: 5.17, y: -7.21))
        bezierPath.line(to: NSPoint(x: 6.3, y: -8.91))
        bezierPath.curve(to: NSPoint(x: 5.68, y: -9.68), controlPoint1: NSPoint(x: 6.18, y: -9.24), controlPoint2: NSPoint(x: 5.98, y: -9.46))
        bezierPath.curve(to: NSPoint(x: 5.36, y: -9.9), controlPoint1: NSPoint(x: 5.61, y: -9.73), controlPoint2: NSPoint(x: 5.38, y: -9.89))
        bezierPath.curve(to: NSPoint(x: 5.06, y: -10.32), controlPoint1: NSPoint(x: 5.14, y: -10.05), controlPoint2: NSPoint(x: 5.06, y: -10.16))
        bezierPath.curve(to: NSPoint(x: 5.21, y: -10.62), controlPoint1: NSPoint(x: 5.04, y: -10.48), controlPoint2: NSPoint(x: 5.07, y: -10.52))
        bezierPath.curve(to: NSPoint(x: 5.38, y: -10.73), controlPoint1: NSPoint(x: 5.18, y: -10.6), controlPoint2: NSPoint(x: 5.34, y: -10.7))
        bezierPath.curve(to: NSPoint(x: 5.74, y: -11.15), controlPoint1: NSPoint(x: 5.55, y: -10.84), controlPoint2: NSPoint(x: 5.66, y: -10.97))
        bezierPath.line(to: NSPoint(x: 5.75, y: -11.27))
        bezierPath.curve(to: NSPoint(x: 5.31, y: -12.15), controlPoint1: NSPoint(x: 5.65, y: -11.55), controlPoint2: NSPoint(x: 5.52, y: -11.79))
        bezierPath.curve(to: NSPoint(x: 5.13, y: -12.45), controlPoint1: NSPoint(x: 5.22, y: -12.3), controlPoint2: NSPoint(x: 5.17, y: -12.38))
        bezierPath.curve(to: NSPoint(x: 4.88, y: -12.92), controlPoint1: NSPoint(x: 5.02, y: -12.64), controlPoint2: NSPoint(x: 4.95, y: -12.78))
        bezierPath.curve(to: NSPoint(x: 5.04, y: -13.38), controlPoint1: NSPoint(x: 4.89, y: -12.92), controlPoint2: NSPoint(x: 4.95, y: -13.12))
        bezierPath.line(to: NSPoint(x: 5.04, y: -13.38))
        bezierPath.curve(to: NSPoint(x: 5.16, y: -13.75), controlPoint1: NSPoint(x: 5.11, y: -13.57), controlPoint2: NSPoint(x: 5.13, y: -13.66))
        bezierPath.line(to: NSPoint(x: 5.14, y: -13.87))
        bezierPath.curve(to: NSPoint(x: 4.72, y: -14.59), controlPoint1: NSPoint(x: 4.93, y: -14.23), controlPoint2: NSPoint(x: 4.93, y: -14.23))
        bezierPath.line(to: NSPoint(x: 4.64, y: -14.65))
        bezierPath.curve(to: NSPoint(x: 4.63, y: -15.27), controlPoint1: NSPoint(x: 4.46, y: -14.73), controlPoint2: NSPoint(x: 4.46, y: -14.84))
        bezierPath.line(to: NSPoint(x: 4.63, y: -15.27))
        bezierPath.curve(to: NSPoint(x: 4.78, y: -15.8), controlPoint1: NSPoint(x: 4.74, y: -15.54), controlPoint2: NSPoint(x: 4.77, y: -15.66))
        bezierPath.curve(to: NSPoint(x: 4.36, y: -16.61), controlPoint1: NSPoint(x: 4.69, y: -16.16), controlPoint2: NSPoint(x: 4.55, y: -16.41))
        bezierPath.line(to: NSPoint(x: 4.3, y: -16.65))
        bezierPath.curve(to: NSPoint(x: 3.48, y: -16.95), controlPoint1: NSPoint(x: 3.89, y: -16.8), controlPoint2: NSPoint(x: 3.89, y: -16.8))
        bezierPath.line(to: NSPoint(x: 3.58, y: -16.8))
        bezierPath.curve(to: NSPoint(x: 3.58, y: -17.36), controlPoint1: NSPoint(x: 3.58, y: -17.08), controlPoint2: NSPoint(x: 3.58, y: -17.08))
        bezierPath.curve(to: NSPoint(x: 3.58, y: -17.5), controlPoint1: NSPoint(x: 3.58, y: -17.43), controlPoint2: NSPoint(x: 3.58, y: -17.43))
        bezierPath.line(to: NSPoint(x: 3.58, y: -17.5))
        bezierPath.curve(to: NSPoint(x: 3.15, y: -18.21), controlPoint1: NSPoint(x: 3.47, y: -17.86), controlPoint2: NSPoint(x: 3.33, y: -18.08))
        bezierPath.curve(to: NSPoint(x: 2.24, y: -18.6), controlPoint1: NSPoint(x: 2.68, y: -18.41), controlPoint2: NSPoint(x: 2.68, y: -18.41))
        bezierPath.line(to: NSPoint(x: 2.34, y: -18.44))
        bezierPath.curve(to: NSPoint(x: 2.38, y: -18.76), controlPoint1: NSPoint(x: 2.36, y: -18.6), controlPoint2: NSPoint(x: 2.36, y: -18.6))
        bezierPath.curve(to: NSPoint(x: 2.42, y: -19.08), controlPoint1: NSPoint(x: 2.4, y: -18.92), controlPoint2: NSPoint(x: 2.4, y: -18.92))
        bezierPath.line(to: NSPoint(x: 2.41, y: -19.15))
        bezierPath.curve(to: NSPoint(x: 1.94, y: -19.91), controlPoint1: NSPoint(x: 2.31, y: -19.45), controlPoint2: NSPoint(x: 2.16, y: -19.7))
        bezierPath.line(to: NSPoint(x: 1.88, y: -19.95))
        bezierPath.curve(to: NSPoint(x: 1.75, y: -19.99), controlPoint1: NSPoint(x: 1.81, y: -19.97), controlPoint2: NSPoint(x: 1.81, y: -19.97))
        bezierPath.curve(to: NSPoint(x: 1.49, y: -20.07), controlPoint1: NSPoint(x: 1.62, y: -20.03), controlPoint2: NSPoint(x: 1.62, y: -20.03))
        bezierPath.curve(to: NSPoint(x: 1.23, y: -20.15), controlPoint1: NSPoint(x: 1.36, y: -20.11), controlPoint2: NSPoint(x: 1.36, y: -20.11))
        bezierPath.line(to: NSPoint(x: 1.34, y: -20.01))
        bezierPath.curve(to: NSPoint(x: 2.01, y: -22.47), controlPoint1: NSPoint(x: 1.33, y: -20.93), controlPoint2: NSPoint(x: 1.51, y: -21.68))
        bezierPath.line(to: NSPoint(x: 1.83, y: -22.41))
        bezierPath.curve(to: NSPoint(x: 3.44, y: -22.36), controlPoint1: NSPoint(x: 2.23, y: -22.28), controlPoint2: NSPoint(x: 2.57, y: -22.29))
        bezierPath.line(to: NSPoint(x: 3.29, y: -22.44))
        bezierPath.curve(to: NSPoint(x: 7.35, y: -14.65), controlPoint1: NSPoint(x: 4.48, y: -20.15), controlPoint2: NSPoint(x: 5.32, y: -18.54))
        bezierPath.curve(to: NSPoint(x: 8.7, y: -12.05), controlPoint1: NSPoint(x: 8.03, y: -13.35), controlPoint2: NSPoint(x: 8.03, y: -13.35))
        bezierPath.curve(to: NSPoint(x: 9.34, y: -11.35), controlPoint1: NSPoint(x: 8.89, y: -11.77), controlPoint2: NSPoint(x: 9.1, y: -11.54))
        bezierPath.close()
        setupKeyFill.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = NSBezierPath()
        bezier2Path.move(to: NSPoint(x: 12.05, y: -0.23))
        bezier2Path.curve(to: NSPoint(x: 13.14, y: -0.34), controlPoint1: NSPoint(x: 12.42, y: -0.23), controlPoint2: NSPoint(x: 12.78, y: -0.27))
        bezier2Path.line(to: NSPoint(x: 14, y: -0.52))
        bezier2Path.line(to: NSPoint(x: 13.13, y: -0.65))
        bezier2Path.curve(to: NSPoint(x: 11.51, y: -1.18), controlPoint1: NSPoint(x: 12.57, y: -0.73), controlPoint2: NSPoint(x: 12.02, y: -0.91))
        bezier2Path.curve(to: NSPoint(x: 9.42, y: -8.11), controlPoint1: NSPoint(x: 9.02, y: -2.5), controlPoint2: NSPoint(x: 8.09, y: -5.6))
        bezier2Path.curve(to: NSPoint(x: 13.94, y: -10.86), controlPoint1: NSPoint(x: 10.32, y: -9.81), controlPoint2: NSPoint(x: 12.06, y: -10.85))
        bezier2Path.line(to: NSPoint(x: 14.2, y: -10.86))
        bezier2Path.line(to: NSPoint(x: 14.07, y: -11.09))
        bezier2Path.curve(to: NSPoint(x: 13.75, y: -12.1), controlPoint1: NSPoint(x: 13.9, y: -11.39), controlPoint2: NSPoint(x: 13.79, y: -11.73))
        bezier2Path.curve(to: NSPoint(x: 13.75, y: -23.8), controlPoint1: NSPoint(x: 13.75, y: -17.94), controlPoint2: NSPoint(x: 13.75, y: -17.94))
        bezier2Path.line(to: NSPoint(x: 13.66, y: -23.94))
        bezier2Path.curve(to: NSPoint(x: 13.47, y: -24.02), controlPoint1: NSPoint(x: 13.56, y: -23.98), controlPoint2: NSPoint(x: 13.56, y: -23.98))
        bezier2Path.curve(to: NSPoint(x: 12.35, y: -24.66), controlPoint1: NSPoint(x: 12.89, y: -24.27), controlPoint2: NSPoint(x: 12.59, y: -24.43))
        bezier2Path.line(to: NSPoint(x: 12.17, y: -24.68))
        bezier2Path.curve(to: NSPoint(x: 10.31, y: -22.68), controlPoint1: NSPoint(x: 11.31, y: -24.18), controlPoint2: NSPoint(x: 10.76, y: -23.56))
        bezier2Path.line(to: NSPoint(x: 10.34, y: -22.5))
        bezier2Path.curve(to: NSPoint(x: 10.58, y: -22.26), controlPoint1: NSPoint(x: 10.46, y: -22.38), controlPoint2: NSPoint(x: 10.46, y: -22.38))
        bezier2Path.curve(to: NSPoint(x: 10.82, y: -22.02), controlPoint1: NSPoint(x: 10.7, y: -22.14), controlPoint2: NSPoint(x: 10.7, y: -22.14))
        bezier2Path.line(to: NSPoint(x: 10.78, y: -22.08))
        bezier2Path.curve(to: NSPoint(x: 10.84, y: -21.33), controlPoint1: NSPoint(x: 10.86, y: -21.84), controlPoint2: NSPoint(x: 10.88, y: -21.59))
        bezier2Path.line(to: NSPoint(x: 10.86, y: -21.4))
        bezier2Path.curve(to: NSPoint(x: 10.49, y: -20.87), controlPoint1: NSPoint(x: 10.68, y: -21.13), controlPoint2: NSPoint(x: 10.68, y: -21.13))
        bezier2Path.line(to: NSPoint(x: 10.5, y: -20.68))
        bezier2Path.curve(to: NSPoint(x: 10.74, y: -20.38), controlPoint1: NSPoint(x: 10.62, y: -20.53), controlPoint2: NSPoint(x: 10.62, y: -20.53))
        bezier2Path.curve(to: NSPoint(x: 10.98, y: -20.08), controlPoint1: NSPoint(x: 10.86, y: -20.23), controlPoint2: NSPoint(x: 10.86, y: -20.23))
        bezier2Path.curve(to: NSPoint(x: 11.11, y: -19.93), controlPoint1: NSPoint(x: 11.05, y: -20.01), controlPoint2: NSPoint(x: 11.05, y: -20.01))
        bezier2Path.curve(to: NSPoint(x: 11.13, y: -19.37), controlPoint1: NSPoint(x: 11.15, y: -19.84), controlPoint2: NSPoint(x: 11.17, y: -19.64))
        bezier2Path.line(to: NSPoint(x: 11.14, y: -19.42))
        bezier2Path.curve(to: NSPoint(x: 10.91, y: -18.98), controlPoint1: NSPoint(x: 11.03, y: -19.2), controlPoint2: NSPoint(x: 11.03, y: -19.2))
        bezier2Path.curve(to: NSPoint(x: 10.82, y: -18.81), controlPoint1: NSPoint(x: 10.86, y: -18.9), controlPoint2: NSPoint(x: 10.86, y: -18.9))
        bezier2Path.line(to: NSPoint(x: 10.84, y: -18.63))
        bezier2Path.curve(to: NSPoint(x: 11.43, y: -17.98), controlPoint1: NSPoint(x: 11.13, y: -18.31), controlPoint2: NSPoint(x: 11.13, y: -18.31))
        bezier2Path.line(to: NSPoint(x: 11.4, y: -18.04))
        bezier2Path.curve(to: NSPoint(x: 11.41, y: -17.33), controlPoint1: NSPoint(x: 11.46, y: -17.83), controlPoint2: NSPoint(x: 11.46, y: -17.59))
        bezier2Path.curve(to: NSPoint(x: 11.12, y: -17.05), controlPoint1: NSPoint(x: 11.38, y: -17.29), controlPoint2: NSPoint(x: 11.3, y: -17.22))
        bezier2Path.line(to: NSPoint(x: 11.12, y: -17.05))
        bezier2Path.curve(to: NSPoint(x: 10.8, y: -16.06), controlPoint1: NSPoint(x: 10.65, y: -16.65), controlPoint2: NSPoint(x: 10.51, y: -16.41))
        bezier2Path.line(to: NSPoint(x: 10.77, y: -16.15))
        bezier2Path.curve(to: NSPoint(x: 10.79, y: -15.74), controlPoint1: NSPoint(x: 10.78, y: -15.95), controlPoint2: NSPoint(x: 10.78, y: -15.95))
        bezier2Path.curve(to: NSPoint(x: 10.81, y: -15.32), controlPoint1: NSPoint(x: 10.8, y: -15.53), controlPoint2: NSPoint(x: 10.8, y: -15.53))
        bezier2Path.line(to: NSPoint(x: 10.86, y: -15.44))
        bezier2Path.curve(to: NSPoint(x: 10.59, y: -15.18), controlPoint1: NSPoint(x: 10.8, y: -15.38), controlPoint2: NSPoint(x: 10.74, y: -15.32))
        bezier2Path.line(to: NSPoint(x: 10.59, y: -15.18))
        bezier2Path.curve(to: NSPoint(x: 10.15, y: -14.64), controlPoint1: NSPoint(x: 10.2, y: -14.81), controlPoint2: NSPoint(x: 10.15, y: -14.76))
        bezier2Path.curve(to: NSPoint(x: 10.16, y: -13.83), controlPoint1: NSPoint(x: 10.13, y: -14.42), controlPoint2: NSPoint(x: 10.13, y: -14.24))
        bezier2Path.curve(to: NSPoint(x: 10.15, y: -12.79), controlPoint1: NSPoint(x: 10.19, y: -13.33), controlPoint2: NSPoint(x: 10.19, y: -13.09))
        bezier2Path.line(to: NSPoint(x: 10.21, y: -12.89))
        bezier2Path.curve(to: NSPoint(x: 10.2, y: -12.89), controlPoint1: NSPoint(x: 10.2, y: -12.89), controlPoint2: NSPoint(x: 10.2, y: -12.89))
        bezier2Path.curve(to: NSPoint(x: 9.71, y: -12.74), controlPoint1: NSPoint(x: 10.07, y: -12.78), controlPoint2: NSPoint(x: 9.96, y: -12.76))
        bezier2Path.curve(to: NSPoint(x: 9.13, y: -12.35), controlPoint1: NSPoint(x: 9.38, y: -12.71), controlPoint2: NSPoint(x: 9.22, y: -12.64))
        bezier2Path.curve(to: NSPoint(x: 9.06, y: -11.98), controlPoint1: NSPoint(x: 9.07, y: -12.25), controlPoint2: NSPoint(x: 9.04, y: -12.12))
        bezier2Path.curve(to: NSPoint(x: 9.33, y: -11.35), controlPoint1: NSPoint(x: 9.08, y: -11.81), controlPoint2: NSPoint(x: 9.08, y: -11.8))
        bezier2Path.curve(to: NSPoint(x: 9.55, y: -10.44), controlPoint1: NSPoint(x: 9.52, y: -11), controlPoint2: NSPoint(x: 9.59, y: -10.76))
        bezier2Path.line(to: NSPoint(x: 9.64, y: -10.56))
        bezier2Path.curve(to: NSPoint(x: 6.65, y: -5.68), controlPoint1: NSPoint(x: 7.82, y: -9.65), controlPoint2: NSPoint(x: 6.65, y: -7.77))
        bezier2Path.curve(to: NSPoint(x: 12.05, y: -0.23), controlPoint1: NSPoint(x: 6.65, y: -2.67), controlPoint2: NSPoint(x: 9.07, y: -0.23))
        bezier2Path.close()
        bezier2Path.move(to: NSPoint(x: 12.05, y: -0.54))
        bezier2Path.curve(to: NSPoint(x: 6.96, y: -5.68), controlPoint1: NSPoint(x: 9.24, y: -0.54), controlPoint2: NSPoint(x: 6.96, y: -2.85))
        bezier2Path.curve(to: NSPoint(x: 9.78, y: -10.28), controlPoint1: NSPoint(x: 6.96, y: -7.65), controlPoint2: NSPoint(x: 8.06, y: -9.42))
        bezier2Path.line(to: NSPoint(x: 9.86, y: -10.41))
        bezier2Path.curve(to: NSPoint(x: 9.6, y: -11.5), controlPoint1: NSPoint(x: 9.91, y: -10.8), controlPoint2: NSPoint(x: 9.82, y: -11.1))
        bezier2Path.curve(to: NSPoint(x: 9.37, y: -12.02), controlPoint1: NSPoint(x: 9.39, y: -11.89), controlPoint2: NSPoint(x: 9.38, y: -11.9))
        bezier2Path.curve(to: NSPoint(x: 9.41, y: -12.23), controlPoint1: NSPoint(x: 9.36, y: -12.09), controlPoint2: NSPoint(x: 9.37, y: -12.16))
        bezier2Path.curve(to: NSPoint(x: 9.74, y: -12.43), controlPoint1: NSPoint(x: 9.47, y: -12.39), controlPoint2: NSPoint(x: 9.51, y: -12.41))
        bezier2Path.curve(to: NSPoint(x: 10.39, y: -12.64), controlPoint1: NSPoint(x: 10.04, y: -12.45), controlPoint2: NSPoint(x: 10.2, y: -12.49))
        bezier2Path.curve(to: NSPoint(x: 10.4, y: -12.65), controlPoint1: NSPoint(x: 10.4, y: -12.65), controlPoint2: NSPoint(x: 10.4, y: -12.65))
        bezier2Path.line(to: NSPoint(x: 10.46, y: -12.75))
        bezier2Path.curve(to: NSPoint(x: 10.47, y: -13.85), controlPoint1: NSPoint(x: 10.5, y: -13.08), controlPoint2: NSPoint(x: 10.5, y: -13.33))
        bezier2Path.curve(to: NSPoint(x: 10.46, y: -14.62), controlPoint1: NSPoint(x: 10.45, y: -14.25), controlPoint2: NSPoint(x: 10.44, y: -14.41))
        bezier2Path.curve(to: NSPoint(x: 10.81, y: -14.95), controlPoint1: NSPoint(x: 10.46, y: -14.61), controlPoint2: NSPoint(x: 10.61, y: -14.77))
        bezier2Path.line(to: NSPoint(x: 10.81, y: -14.95))
        bezier2Path.curve(to: NSPoint(x: 11.08, y: -15.22), controlPoint1: NSPoint(x: 10.96, y: -15.09), controlPoint2: NSPoint(x: 11.02, y: -15.15))
        bezier2Path.line(to: NSPoint(x: 11.13, y: -15.34))
        bezier2Path.curve(to: NSPoint(x: 11.1, y: -15.75), controlPoint1: NSPoint(x: 11.11, y: -15.55), controlPoint2: NSPoint(x: 11.11, y: -15.55))
        bezier2Path.curve(to: NSPoint(x: 11.08, y: -16.17), controlPoint1: NSPoint(x: 11.09, y: -15.96), controlPoint2: NSPoint(x: 11.09, y: -15.96))
        bezier2Path.line(to: NSPoint(x: 11.04, y: -16.26))
        bezier2Path.curve(to: NSPoint(x: 11.32, y: -16.82), controlPoint1: NSPoint(x: 10.92, y: -16.42), controlPoint2: NSPoint(x: 10.97, y: -16.52))
        bezier2Path.line(to: NSPoint(x: 11.32, y: -16.82))
        bezier2Path.curve(to: NSPoint(x: 11.7, y: -17.22), controlPoint1: NSPoint(x: 11.54, y: -17.01), controlPoint2: NSPoint(x: 11.63, y: -17.09))
        bezier2Path.curve(to: NSPoint(x: 11.69, y: -18.13), controlPoint1: NSPoint(x: 11.78, y: -17.58), controlPoint2: NSPoint(x: 11.77, y: -17.86))
        bezier2Path.line(to: NSPoint(x: 11.66, y: -18.19))
        bezier2Path.curve(to: NSPoint(x: 11.07, y: -18.84), controlPoint1: NSPoint(x: 11.37, y: -18.52), controlPoint2: NSPoint(x: 11.37, y: -18.52))
        bezier2Path.line(to: NSPoint(x: 11.09, y: -18.66))
        bezier2Path.curve(to: NSPoint(x: 11.19, y: -18.84), controlPoint1: NSPoint(x: 11.14, y: -18.75), controlPoint2: NSPoint(x: 11.14, y: -18.75))
        bezier2Path.curve(to: NSPoint(x: 11.42, y: -19.28), controlPoint1: NSPoint(x: 11.3, y: -19.06), controlPoint2: NSPoint(x: 11.3, y: -19.06))
        bezier2Path.line(to: NSPoint(x: 11.42, y: -19.28))
        bezier2Path.curve(to: NSPoint(x: 11.36, y: -20.1), controlPoint1: NSPoint(x: 11.49, y: -19.65), controlPoint2: NSPoint(x: 11.47, y: -19.91))
        bezier2Path.curve(to: NSPoint(x: 11.23, y: -20.28), controlPoint1: NSPoint(x: 11.29, y: -20.2), controlPoint2: NSPoint(x: 11.29, y: -20.2))
        bezier2Path.curve(to: NSPoint(x: 10.99, y: -20.58), controlPoint1: NSPoint(x: 11.11, y: -20.43), controlPoint2: NSPoint(x: 11.11, y: -20.43))
        bezier2Path.curve(to: NSPoint(x: 10.74, y: -20.88), controlPoint1: NSPoint(x: 10.86, y: -20.73), controlPoint2: NSPoint(x: 10.86, y: -20.73))
        bezier2Path.line(to: NSPoint(x: 10.75, y: -20.69))
        bezier2Path.curve(to: NSPoint(x: 11.12, y: -21.22), controlPoint1: NSPoint(x: 10.93, y: -20.96), controlPoint2: NSPoint(x: 10.93, y: -20.96))
        bezier2Path.line(to: NSPoint(x: 11.15, y: -21.29))
        bezier2Path.curve(to: NSPoint(x: 11.08, y: -22.18), controlPoint1: NSPoint(x: 11.19, y: -21.59), controlPoint2: NSPoint(x: 11.17, y: -21.89))
        bezier2Path.line(to: NSPoint(x: 11.04, y: -22.24))
        bezier2Path.curve(to: NSPoint(x: 10.8, y: -22.48), controlPoint1: NSPoint(x: 10.92, y: -22.36), controlPoint2: NSPoint(x: 10.92, y: -22.36))
        bezier2Path.curve(to: NSPoint(x: 10.56, y: -22.72), controlPoint1: NSPoint(x: 10.68, y: -22.6), controlPoint2: NSPoint(x: 10.68, y: -22.6))
        bezier2Path.line(to: NSPoint(x: 10.59, y: -22.54))
        bezier2Path.curve(to: NSPoint(x: 12.32, y: -24.42), controlPoint1: NSPoint(x: 11.01, y: -23.36), controlPoint2: NSPoint(x: 11.52, y: -23.94))
        bezier2Path.line(to: NSPoint(x: 12.14, y: -24.44))
        bezier2Path.curve(to: NSPoint(x: 13.35, y: -23.73), controlPoint1: NSPoint(x: 12.4, y: -24.18), controlPoint2: NSPoint(x: 12.73, y: -23.99))
        bezier2Path.curve(to: NSPoint(x: 13.54, y: -23.65), controlPoint1: NSPoint(x: 13.44, y: -23.69), controlPoint2: NSPoint(x: 13.44, y: -23.69))
        bezier2Path.line(to: NSPoint(x: 13.44, y: -23.8))
        bezier2Path.curve(to: NSPoint(x: 13.44, y: -12.08), controlPoint1: NSPoint(x: 13.44, y: -17.94), controlPoint2: NSPoint(x: 13.44, y: -17.94))
        bezier2Path.curve(to: NSPoint(x: 13.8, y: -10.93), controlPoint1: NSPoint(x: 13.49, y: -11.66), controlPoint2: NSPoint(x: 13.61, y: -11.28))
        bezier2Path.line(to: NSPoint(x: 13.93, y: -11.17))
        bezier2Path.curve(to: NSPoint(x: 9.14, y: -8.25), controlPoint1: NSPoint(x: 11.95, y: -11.16), controlPoint2: NSPoint(x: 10.1, y: -10.06))
        bezier2Path.curve(to: NSPoint(x: 11.36, y: -0.91), controlPoint1: NSPoint(x: 7.73, y: -5.59), controlPoint2: NSPoint(x: 8.73, y: -2.3))
        bezier2Path.curve(to: NSPoint(x: 13.08, y: -0.34), controlPoint1: NSPoint(x: 11.91, y: -0.62), controlPoint2: NSPoint(x: 12.49, y: -0.43))
        bezier2Path.line(to: NSPoint(x: 13.07, y: -0.65))
        bezier2Path.curve(to: NSPoint(x: 12.05, y: -0.54), controlPoint1: NSPoint(x: 12.74, y: -0.58), controlPoint2: NSPoint(x: 12.4, y: -0.54))
        bezier2Path.close()
        setupKeyFill.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = NSBezierPath()
        bezier3Path.move(to: NSPoint(x: 11.36, y: -0.91))
        bezier3Path.curve(to: NSPoint(x: 18.69, y: -3.2), controlPoint1: NSPoint(x: 14, y: 0.49), controlPoint2: NSPoint(x: 17.28, y: -0.54))
        bezier3Path.curve(to: NSPoint(x: 18.31, y: -8.94), controlPoint1: NSPoint(x: 19.67, y: -5.05), controlPoint2: NSPoint(x: 19.51, y: -7.27))
        bezier3Path.curve(to: NSPoint(x: 18.42, y: -10.59), controlPoint1: NSPoint(x: 18.17, y: -9.47), controlPoint2: NSPoint(x: 18.2, y: -10.04))
        bezier3Path.curve(to: NSPoint(x: 21.15, y: -15.76), controlPoint1: NSPoint(x: 19.78, y: -13.17), controlPoint2: NSPoint(x: 19.78, y: -13.17))
        bezier3Path.curve(to: NSPoint(x: 21.55, y: -16.5), controlPoint1: NSPoint(x: 21.35, y: -16.13), controlPoint2: NSPoint(x: 21.35, y: -16.13))
        bezier3Path.curve(to: NSPoint(x: 23.9, y: -20.93), controlPoint1: NSPoint(x: 22.72, y: -18.72), controlPoint2: NSPoint(x: 22.72, y: -18.72))
        bezier3Path.line(to: NSPoint(x: 23.88, y: -21.11))
        bezier3Path.curve(to: NSPoint(x: 23.34, y: -21.8), controlPoint1: NSPoint(x: 23.59, y: -21.46), controlPoint2: NSPoint(x: 23.47, y: -21.61))
        bezier3Path.curve(to: NSPoint(x: 23.07, y: -22.35), controlPoint1: NSPoint(x: 23.21, y: -22), controlPoint2: NSPoint(x: 23.12, y: -22.18))
        bezier3Path.line(to: NSPoint(x: 22.91, y: -22.46))
        bezier3Path.curve(to: NSPoint(x: 20.33, y: -21.56), controlPoint1: NSPoint(x: 21.91, y: -22.42), controlPoint2: NSPoint(x: 21.14, y: -22.12))
        bezier3Path.line(to: NSPoint(x: 20.27, y: -21.39))
        bezier3Path.curve(to: NSPoint(x: 20.41, y: -20.95), controlPoint1: NSPoint(x: 20.34, y: -21.17), controlPoint2: NSPoint(x: 20.34, y: -21.17))
        bezier3Path.curve(to: NSPoint(x: 20.47, y: -20.73), controlPoint1: NSPoint(x: 20.44, y: -20.84), controlPoint2: NSPoint(x: 20.44, y: -20.84))
        bezier3Path.line(to: NSPoint(x: 20.47, y: -20.81))
        bezier3Path.curve(to: NSPoint(x: 20.17, y: -20.12), controlPoint1: NSPoint(x: 20.43, y: -20.56), controlPoint2: NSPoint(x: 20.33, y: -20.33))
        bezier3Path.line(to: NSPoint(x: 20.22, y: -20.17))
        bezier3Path.curve(to: NSPoint(x: 19.93, y: -20.02), controlPoint1: NSPoint(x: 20.08, y: -20.09), controlPoint2: NSPoint(x: 20.08, y: -20.09))
        bezier3Path.curve(to: NSPoint(x: 19.65, y: -19.87), controlPoint1: NSPoint(x: 19.79, y: -19.95), controlPoint2: NSPoint(x: 19.79, y: -19.95))
        bezier3Path.line(to: NSPoint(x: 19.56, y: -19.7))
        bezier3Path.curve(to: NSPoint(x: 19.66, y: -19.23), controlPoint1: NSPoint(x: 19.61, y: -19.47), controlPoint2: NSPoint(x: 19.61, y: -19.47))
        bezier3Path.curve(to: NSPoint(x: 19.68, y: -19.14), controlPoint1: NSPoint(x: 19.67, y: -19.18), controlPoint2: NSPoint(x: 19.67, y: -19.18))
        bezier3Path.curve(to: NSPoint(x: 19.75, y: -18.76), controlPoint1: NSPoint(x: 19.71, y: -18.95), controlPoint2: NSPoint(x: 19.71, y: -18.95))
        bezier3Path.curve(to: NSPoint(x: 19.51, y: -18.25), controlPoint1: NSPoint(x: 19.75, y: -18.65), controlPoint2: NSPoint(x: 19.67, y: -18.47))
        bezier3Path.curve(to: NSPoint(x: 19.26, y: -18.1), controlPoint1: NSPoint(x: 19.4, y: -18.19), controlPoint2: NSPoint(x: 19.4, y: -18.19))
        bezier3Path.curve(to: NSPoint(x: 18.97, y: -17.9), controlPoint1: NSPoint(x: 19.11, y: -18), controlPoint2: NSPoint(x: 19.11, y: -18))
        bezier3Path.line(to: NSPoint(x: 18.9, y: -17.73))
        bezier3Path.curve(to: NSPoint(x: 19.12, y: -16.88), controlPoint1: NSPoint(x: 19.01, y: -17.31), controlPoint2: NSPoint(x: 19.01, y: -17.31))
        bezier3Path.line(to: NSPoint(x: 19.12, y: -16.95))
        bezier3Path.curve(to: NSPoint(x: 18.8, y: -16.32), controlPoint1: NSPoint(x: 19.08, y: -16.73), controlPoint2: NSPoint(x: 18.97, y: -16.52))
        bezier3Path.curve(to: NSPoint(x: 18.41, y: -16.21), controlPoint1: NSPoint(x: 18.75, y: -16.3), controlPoint2: NSPoint(x: 18.65, y: -16.27))
        bezier3Path.curve(to: NSPoint(x: 17.67, y: -15.48), controlPoint1: NSPoint(x: 17.8, y: -16.07), controlPoint2: NSPoint(x: 17.58, y: -15.92))
        bezier3Path.line(to: NSPoint(x: 17.68, y: -15.58))
        bezier3Path.curve(to: NSPoint(x: 17.6, y: -15.39), controlPoint1: NSPoint(x: 17.64, y: -15.48), controlPoint2: NSPoint(x: 17.64, y: -15.48))
        bezier3Path.curve(to: NSPoint(x: 17.33, y: -14.82), controlPoint1: NSPoint(x: 17.46, y: -15.1), controlPoint2: NSPoint(x: 17.46, y: -15.1))
        bezier3Path.line(to: NSPoint(x: 17.43, y: -14.9))
        bezier3Path.curve(to: NSPoint(x: 17.07, y: -14.8), controlPoint1: NSPoint(x: 17.34, y: -14.88), controlPoint2: NSPoint(x: 17.26, y: -14.85))
        bezier3Path.line(to: NSPoint(x: 17.07, y: -14.8))
        bezier3Path.curve(to: NSPoint(x: 16.42, y: -14.53), controlPoint1: NSPoint(x: 16.55, y: -14.66), controlPoint2: NSPoint(x: 16.48, y: -14.63))
        bezier3Path.curve(to: NSPoint(x: 16.09, y: -13.88), controlPoint1: NSPoint(x: 16.32, y: -14.36), controlPoint2: NSPoint(x: 16.23, y: -14.19))
        bezier3Path.curve(to: NSPoint(x: 15.79, y: -13.25), controlPoint1: NSPoint(x: 15.91, y: -13.49), controlPoint2: NSPoint(x: 15.88, y: -13.42))
        bezier3Path.curve(to: NSPoint(x: 15.56, y: -12.9), controlPoint1: NSPoint(x: 15.72, y: -13.13), controlPoint2: NSPoint(x: 15.64, y: -13.01))
        bezier3Path.line(to: NSPoint(x: 15.66, y: -12.96))
        bezier3Path.curve(to: NSPoint(x: 15.19, y: -13.03), controlPoint1: NSPoint(x: 15.5, y: -12.93), controlPoint2: NSPoint(x: 15.38, y: -12.95))
        bezier3Path.curve(to: NSPoint(x: 14.85, y: -13.14), controlPoint1: NSPoint(x: 14.98, y: -13.13), controlPoint2: NSPoint(x: 14.95, y: -13.14))
        bezier3Path.curve(to: NSPoint(x: 14.45, y: -12.98), controlPoint1: NSPoint(x: 14.71, y: -13.16), controlPoint2: NSPoint(x: 14.58, y: -13.11))
        bezier3Path.curve(to: NSPoint(x: 14.16, y: -12.1), controlPoint1: NSPoint(x: 14.2, y: -12.82), controlPoint2: NSPoint(x: 14.15, y: -12.62))
        bezier3Path.curve(to: NSPoint(x: 13.94, y: -11.11), controlPoint1: NSPoint(x: 14.17, y: -11.62), controlPoint2: NSPoint(x: 14.13, y: -11.39))
        bezier3Path.curve(to: NSPoint(x: 13.93, y: -11.1), controlPoint1: NSPoint(x: 13.94, y: -11.11), controlPoint2: NSPoint(x: 13.94, y: -11.11))
        bezier3Path.line(to: NSPoint(x: 14.06, y: -11.17))
        bezier3Path.curve(to: NSPoint(x: 9.14, y: -8.25), controlPoint1: NSPoint(x: 12.03, y: -11.21), controlPoint2: NSPoint(x: 10.12, y: -10.1))
        bezier3Path.curve(to: NSPoint(x: 11.36, y: -0.91), controlPoint1: NSPoint(x: 7.73, y: -5.59), controlPoint2: NSPoint(x: 8.73, y: -2.3))
        bezier3Path.close()
        bezier3Path.move(to: NSPoint(x: 11.51, y: -1.18))
        bezier3Path.curve(to: NSPoint(x: 9.42, y: -8.11), controlPoint1: NSPoint(x: 9.02, y: -2.5), controlPoint2: NSPoint(x: 8.09, y: -5.6))
        bezier3Path.curve(to: NSPoint(x: 14.06, y: -10.85), controlPoint1: NSPoint(x: 10.34, y: -9.85), controlPoint2: NSPoint(x: 12.14, y: -10.89))
        bezier3Path.line(to: NSPoint(x: 14.19, y: -10.92))
        bezier3Path.curve(to: NSPoint(x: 14.2, y: -10.94), controlPoint1: NSPoint(x: 14.2, y: -10.93), controlPoint2: NSPoint(x: 14.2, y: -10.93))
        bezier3Path.curve(to: NSPoint(x: 14.47, y: -12.11), controlPoint1: NSPoint(x: 14.43, y: -11.28), controlPoint2: NSPoint(x: 14.48, y: -11.57))
        bezier3Path.curve(to: NSPoint(x: 14.64, y: -12.74), controlPoint1: NSPoint(x: 14.46, y: -12.52), controlPoint2: NSPoint(x: 14.49, y: -12.64))
        bezier3Path.curve(to: NSPoint(x: 14.83, y: -12.83), controlPoint1: NSPoint(x: 14.73, y: -12.82), controlPoint2: NSPoint(x: 14.78, y: -12.84))
        bezier3Path.curve(to: NSPoint(x: 15.07, y: -12.75), controlPoint1: NSPoint(x: 14.88, y: -12.83), controlPoint2: NSPoint(x: 14.9, y: -12.82))
        bezier3Path.curve(to: NSPoint(x: 15.72, y: -12.65), controlPoint1: NSPoint(x: 15.31, y: -12.64), controlPoint2: NSPoint(x: 15.49, y: -12.61))
        bezier3Path.line(to: NSPoint(x: 15.81, y: -12.71))
        bezier3Path.curve(to: NSPoint(x: 16.06, y: -13.1), controlPoint1: NSPoint(x: 15.9, y: -12.84), controlPoint2: NSPoint(x: 15.98, y: -12.96))
        bezier3Path.curve(to: NSPoint(x: 16.37, y: -13.76), controlPoint1: NSPoint(x: 16.16, y: -13.28), controlPoint2: NSPoint(x: 16.19, y: -13.35))
        bezier3Path.curve(to: NSPoint(x: 16.69, y: -14.37), controlPoint1: NSPoint(x: 16.51, y: -14.04), controlPoint2: NSPoint(x: 16.59, y: -14.2))
        bezier3Path.curve(to: NSPoint(x: 17.15, y: -14.5), controlPoint1: NSPoint(x: 16.69, y: -14.36), controlPoint2: NSPoint(x: 16.89, y: -14.43))
        bezier3Path.line(to: NSPoint(x: 17.15, y: -14.5))
        bezier3Path.curve(to: NSPoint(x: 17.52, y: -14.61), controlPoint1: NSPoint(x: 17.35, y: -14.55), controlPoint2: NSPoint(x: 17.44, y: -14.58))
        bezier3Path.line(to: NSPoint(x: 17.62, y: -14.69))
        bezier3Path.curve(to: NSPoint(x: 17.88, y: -15.26), controlPoint1: NSPoint(x: 17.75, y: -14.97), controlPoint2: NSPoint(x: 17.75, y: -14.97))
        bezier3Path.curve(to: NSPoint(x: 17.97, y: -15.45), controlPoint1: NSPoint(x: 17.92, y: -15.35), controlPoint2: NSPoint(x: 17.92, y: -15.35))
        bezier3Path.line(to: NSPoint(x: 17.98, y: -15.54))
        bezier3Path.curve(to: NSPoint(x: 18.48, y: -15.91), controlPoint1: NSPoint(x: 17.94, y: -15.74), controlPoint2: NSPoint(x: 18.03, y: -15.8))
        bezier3Path.curve(to: NSPoint(x: 19, y: -16.09), controlPoint1: NSPoint(x: 18.76, y: -15.97), controlPoint2: NSPoint(x: 18.88, y: -16.01))
        bezier3Path.curve(to: NSPoint(x: 19.43, y: -16.89), controlPoint1: NSPoint(x: 19.24, y: -16.36), controlPoint2: NSPoint(x: 19.37, y: -16.62))
        bezier3Path.line(to: NSPoint(x: 19.42, y: -16.96))
        bezier3Path.curve(to: NSPoint(x: 19.21, y: -17.81), controlPoint1: NSPoint(x: 19.32, y: -17.38), controlPoint2: NSPoint(x: 19.32, y: -17.38))
        bezier3Path.line(to: NSPoint(x: 19.14, y: -17.64))
        bezier3Path.curve(to: NSPoint(x: 19.43, y: -17.84), controlPoint1: NSPoint(x: 19.29, y: -17.74), controlPoint2: NSPoint(x: 19.29, y: -17.74))
        bezier3Path.curve(to: NSPoint(x: 19.72, y: -18.03), controlPoint1: NSPoint(x: 19.57, y: -17.93), controlPoint2: NSPoint(x: 19.57, y: -17.93))
        bezier3Path.curve(to: NSPoint(x: 20.06, y: -18.79), controlPoint1: NSPoint(x: 19.95, y: -18.33), controlPoint2: NSPoint(x: 20.06, y: -18.57))
        bezier3Path.curve(to: NSPoint(x: 19.98, y: -19.2), controlPoint1: NSPoint(x: 20.02, y: -19.01), controlPoint2: NSPoint(x: 20.02, y: -19.01))
        bezier3Path.curve(to: NSPoint(x: 19.96, y: -19.29), controlPoint1: NSPoint(x: 19.97, y: -19.24), controlPoint2: NSPoint(x: 19.97, y: -19.24))
        bezier3Path.curve(to: NSPoint(x: 19.87, y: -19.76), controlPoint1: NSPoint(x: 19.92, y: -19.53), controlPoint2: NSPoint(x: 19.92, y: -19.53))
        bezier3Path.line(to: NSPoint(x: 19.79, y: -19.59))
        bezier3Path.curve(to: NSPoint(x: 20.08, y: -19.74), controlPoint1: NSPoint(x: 19.93, y: -19.67), controlPoint2: NSPoint(x: 19.93, y: -19.67))
        bezier3Path.curve(to: NSPoint(x: 20.36, y: -19.89), controlPoint1: NSPoint(x: 20.22, y: -19.82), controlPoint2: NSPoint(x: 20.22, y: -19.82))
        bezier3Path.line(to: NSPoint(x: 20.42, y: -19.94))
        bezier3Path.curve(to: NSPoint(x: 20.78, y: -20.75), controlPoint1: NSPoint(x: 20.6, y: -20.19), controlPoint2: NSPoint(x: 20.72, y: -20.46))
        bezier3Path.line(to: NSPoint(x: 20.77, y: -20.82))
        bezier3Path.curve(to: NSPoint(x: 20.7, y: -21.04), controlPoint1: NSPoint(x: 20.74, y: -20.93), controlPoint2: NSPoint(x: 20.74, y: -20.93))
        bezier3Path.curve(to: NSPoint(x: 20.57, y: -21.48), controlPoint1: NSPoint(x: 20.64, y: -21.26), controlPoint2: NSPoint(x: 20.64, y: -21.26))
        bezier3Path.line(to: NSPoint(x: 20.51, y: -21.31))
        bezier3Path.curve(to: NSPoint(x: 22.92, y: -22.15), controlPoint1: NSPoint(x: 21.27, y: -21.83), controlPoint2: NSPoint(x: 21.99, y: -22.11))
        bezier3Path.line(to: NSPoint(x: 22.77, y: -22.26))
        bezier3Path.curve(to: NSPoint(x: 23.08, y: -21.63), controlPoint1: NSPoint(x: 22.83, y: -22.06), controlPoint2: NSPoint(x: 22.94, y: -21.85))
        bezier3Path.curve(to: NSPoint(x: 23.64, y: -20.91), controlPoint1: NSPoint(x: 23.22, y: -21.43), controlPoint2: NSPoint(x: 23.34, y: -21.28))
        bezier3Path.line(to: NSPoint(x: 23.62, y: -21.08))
        bezier3Path.curve(to: NSPoint(x: 21.27, y: -16.64), controlPoint1: NSPoint(x: 22.45, y: -18.86), controlPoint2: NSPoint(x: 22.45, y: -18.86))
        bezier3Path.curve(to: NSPoint(x: 20.88, y: -15.9), controlPoint1: NSPoint(x: 21.07, y: -16.27), controlPoint2: NSPoint(x: 21.07, y: -16.27))
        bezier3Path.curve(to: NSPoint(x: 18.14, y: -10.72), controlPoint1: NSPoint(x: 19.51, y: -13.31), controlPoint2: NSPoint(x: 19.51, y: -13.31))
        bezier3Path.curve(to: NSPoint(x: 18.03, y: -8.8), controlPoint1: NSPoint(x: 17.89, y: -10.09), controlPoint2: NSPoint(x: 17.85, y: -9.45))
        bezier3Path.curve(to: NSPoint(x: 18.41, y: -3.34), controlPoint1: NSPoint(x: 19.18, y: -7.19), controlPoint2: NSPoint(x: 19.34, y: -5.09))
        bezier3Path.curve(to: NSPoint(x: 11.51, y: -1.18), controlPoint1: NSPoint(x: 17.08, y: -0.83), controlPoint2: NSPoint(x: 13.99, y: 0.13))
        bezier3Path.close()
        bezier3Path.move(to: NSPoint(x: 13.31, y: -2.09))
        bezier3Path.curve(to: NSPoint(x: 15, y: -3.78), controlPoint1: NSPoint(x: 14.25, y: -2.09), controlPoint2: NSPoint(x: 15, y: -2.85))
        bezier3Path.curve(to: NSPoint(x: 13.31, y: -5.47), controlPoint1: NSPoint(x: 15, y: -4.72), controlPoint2: NSPoint(x: 14.25, y: -5.47))
        bezier3Path.curve(to: NSPoint(x: 11.62, y: -3.78), controlPoint1: NSPoint(x: 12.38, y: -5.47), controlPoint2: NSPoint(x: 11.62, y: -4.72))
        bezier3Path.curve(to: NSPoint(x: 13.31, y: -2.09), controlPoint1: NSPoint(x: 11.62, y: -2.85), controlPoint2: NSPoint(x: 12.38, y: -2.09))
        bezier3Path.close()
        bezier3Path.move(to: NSPoint(x: 13.31, y: -2.41))
        bezier3Path.curve(to: NSPoint(x: 11.93, y: -3.78), controlPoint1: NSPoint(x: 12.55, y: -2.41), controlPoint2: NSPoint(x: 11.93, y: -3.02))
        bezier3Path.curve(to: NSPoint(x: 13.31, y: -5.16), controlPoint1: NSPoint(x: 11.93, y: -4.55), controlPoint2: NSPoint(x: 12.55, y: -5.16))
        bezier3Path.curve(to: NSPoint(x: 14.69, y: -3.78), controlPoint1: NSPoint(x: 14.07, y: -5.16), controlPoint2: NSPoint(x: 14.69, y: -4.55))
        bezier3Path.curve(to: NSPoint(x: 13.31, y: -2.41), controlPoint1: NSPoint(x: 14.69, y: -3.02), controlPoint2: NSPoint(x: 14.07, y: -2.41))
        bezier3Path.close()
        setupKeyFill.setFill()
        bezier3Path.fill()



        NSGraphicsContext.restoreGraphicsState()
    }

    @objc dynamic public class func drawSetupKeySelected(frame: NSRect = NSRect(x: 0, y: 0, width: 230, height: 230)) {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext

        //// Color Declarations
        let setupKeyFill = NSColor(red: 0, green: 0, blue: 0, alpha: 1)

        //// Group
        NSGraphicsContext.saveGraphicsState()
        context.translateBy(x: frame.minX + 0.00000 * frame.width, y: frame.minY + 1.00000 * frame.height)
        context.scaleBy(x: 9.2, y: 9.2)



        //// Bezier Drawing
        let bezierPath = NSBezierPath()
        bezierPath.move(to: NSPoint(x: 9.44, y: -11.47))
        bezierPath.curve(to: NSPoint(x: 8.84, y: -12.12), controlPoint1: NSPoint(x: 9.21, y: -11.66), controlPoint2: NSPoint(x: 9.01, y: -11.88))
        bezierPath.curve(to: NSPoint(x: 3.42, y: -22.51), controlPoint1: NSPoint(x: 7.04, y: -15.58), controlPoint2: NSPoint(x: 5.23, y: -19.05))
        bezierPath.curve(to: NSPoint(x: 1.88, y: -22.56), controlPoint1: NSPoint(x: 2.85, y: -22.46), controlPoint2: NSPoint(x: 2.32, y: -22.42))
        bezierPath.curve(to: NSPoint(x: 1.18, y: -20.01), controlPoint1: NSPoint(x: 1.3, y: -21.64), controlPoint2: NSPoint(x: 1.18, y: -20.81))
        bezierPath.curve(to: NSPoint(x: 1.83, y: -19.8), controlPoint1: NSPoint(x: 1.4, y: -19.94), controlPoint2: NSPoint(x: 1.62, y: -19.87))
        bezierPath.curve(to: NSPoint(x: 2.26, y: -19.1), controlPoint1: NSPoint(x: 2.03, y: -19.6), controlPoint2: NSPoint(x: 2.17, y: -19.37))
        bezierPath.curve(to: NSPoint(x: 2.18, y: -18.46), controlPoint1: NSPoint(x: 2.24, y: -18.89), controlPoint2: NSPoint(x: 2.21, y: -18.68))
        bezierPath.curve(to: NSPoint(x: 3.06, y: -18.08), controlPoint1: NSPoint(x: 2.48, y: -18.33), controlPoint2: NSPoint(x: 2.77, y: -18.21))
        bezierPath.curve(to: NSPoint(x: 3.43, y: -17.5), controlPoint1: NSPoint(x: 3.22, y: -17.97), controlPoint2: NSPoint(x: 3.33, y: -17.77))
        bezierPath.curve(to: NSPoint(x: 3.42, y: -16.8), controlPoint1: NSPoint(x: 3.42, y: -17.27), controlPoint2: NSPoint(x: 3.42, y: -17.03))
        bezierPath.curve(to: NSPoint(x: 4.25, y: -16.5), controlPoint1: NSPoint(x: 3.7, y: -16.7), controlPoint2: NSPoint(x: 3.97, y: -16.6))
        bezierPath.curve(to: NSPoint(x: 4.62, y: -15.81), controlPoint1: NSPoint(x: 4.43, y: -16.31), controlPoint2: NSPoint(x: 4.55, y: -16.08))
        bezierPath.curve(to: NSPoint(x: 4.58, y: -14.51), controlPoint1: NSPoint(x: 4.61, y: -15.37), controlPoint2: NSPoint(x: 4.04, y: -14.74))
        bezierPath.curve(to: NSPoint(x: 5.01, y: -13.79), controlPoint1: NSPoint(x: 4.73, y: -14.27), controlPoint2: NSPoint(x: 4.87, y: -14.03))
        bezierPath.curve(to: NSPoint(x: 4.74, y: -12.86), controlPoint1: NSPoint(x: 4.92, y: -13.48), controlPoint2: NSPoint(x: 4.7, y: -12.95))
        bezierPath.curve(to: NSPoint(x: 5.6, y: -11.21), controlPoint1: NSPoint(x: 4.97, y: -12.32), controlPoint2: NSPoint(x: 5.37, y: -11.86))
        bezierPath.curve(to: NSPoint(x: 4.91, y: -10.32), controlPoint1: NSPoint(x: 5.38, y: -10.7), controlPoint2: NSPoint(x: 4.83, y: -10.81))
        bezierPath.curve(to: NSPoint(x: 6.16, y: -8.86), controlPoint1: NSPoint(x: 4.89, y: -9.71), controlPoint2: NSPoint(x: 5.83, y: -9.72))
        bezierPath.curve(to: NSPoint(x: 5.77, y: -3.31), controlPoint1: NSPoint(x: 5.03, y: -7.29), controlPoint2: NSPoint(x: 4.82, y: -5.15))
        bezierPath.curve(to: NSPoint(x: 11.06, y: -0.48), controlPoint1: NSPoint(x: 6.82, y: -1.31), controlPoint2: NSPoint(x: 8.96, y: -0.25))
        bezierPath.curve(to: NSPoint(x: 12.05, y: -0.39), controlPoint1: NSPoint(x: 11.38, y: -0.42), controlPoint2: NSPoint(x: 11.71, y: -0.39))
        bezierPath.curve(to: NSPoint(x: 13.1, y: -0.5), controlPoint1: NSPoint(x: 12.41, y: -0.39), controlPoint2: NSPoint(x: 12.76, y: -0.42))
        bezierPath.curve(to: NSPoint(x: 18.55, y: -3.27), controlPoint1: NSPoint(x: 15.25, y: -0.18), controlPoint2: NSPoint(x: 17.47, y: -1.23))
        bezierPath.curve(to: NSPoint(x: 18.18, y: -8.85), controlPoint1: NSPoint(x: 19.53, y: -5.11), controlPoint2: NSPoint(x: 19.32, y: -7.27))
        bezierPath.curve(to: NSPoint(x: 18.27, y: -10.65), controlPoint1: NSPoint(x: 18, y: -9.48), controlPoint2: NSPoint(x: 18.05, y: -10.09))
        bezierPath.curve(to: NSPoint(x: 23.76, y: -21.01), controlPoint1: NSPoint(x: 20.1, y: -14.1), controlPoint2: NSPoint(x: 21.93, y: -17.56))
        bezierPath.curve(to: NSPoint(x: 22.92, y: -22.31), controlPoint1: NSPoint(x: 23.39, y: -21.45), controlPoint2: NSPoint(x: 23.06, y: -21.87))
        bezierPath.curve(to: NSPoint(x: 20.42, y: -21.43), controlPoint1: NSPoint(x: 21.83, y: -22.26), controlPoint2: NSPoint(x: 21.08, y: -21.89))
        bezierPath.curve(to: NSPoint(x: 20.62, y: -20.78), controlPoint1: NSPoint(x: 20.49, y: -21.22), controlPoint2: NSPoint(x: 20.56, y: -21))
        bezierPath.curve(to: NSPoint(x: 20.29, y: -20.03), controlPoint1: NSPoint(x: 20.57, y: -20.5), controlPoint2: NSPoint(x: 20.46, y: -20.26))
        bezierPath.curve(to: NSPoint(x: 19.72, y: -19.73), controlPoint1: NSPoint(x: 20.1, y: -19.93), controlPoint2: NSPoint(x: 19.91, y: -19.83))
        bezierPath.curve(to: NSPoint(x: 19.9, y: -18.79), controlPoint1: NSPoint(x: 19.78, y: -19.42), controlPoint2: NSPoint(x: 19.84, y: -19.1))
        bezierPath.curve(to: NSPoint(x: 19.63, y: -18.16), controlPoint1: NSPoint(x: 19.9, y: -18.6), controlPoint2: NSPoint(x: 19.8, y: -18.39))
        bezierPath.curve(to: NSPoint(x: 19.06, y: -17.77), controlPoint1: NSPoint(x: 19.44, y: -18.03), controlPoint2: NSPoint(x: 19.25, y: -17.9))
        bezierPath.curve(to: NSPoint(x: 19.27, y: -16.92), controlPoint1: NSPoint(x: 19.13, y: -17.49), controlPoint2: NSPoint(x: 19.2, y: -17.2))
        bezierPath.curve(to: NSPoint(x: 18.92, y: -16.22), controlPoint1: NSPoint(x: 19.22, y: -16.66), controlPoint2: NSPoint(x: 19.09, y: -16.43))
        bezierPath.curve(to: NSPoint(x: 17.82, y: -15.51), controlPoint1: NSPoint(x: 18.55, y: -15.98), controlPoint2: NSPoint(x: 17.7, y: -16.09))
        bezierPath.curve(to: NSPoint(x: 17.47, y: -14.75), controlPoint1: NSPoint(x: 17.71, y: -15.26), controlPoint2: NSPoint(x: 17.59, y: -15.01))
        bezierPath.curve(to: NSPoint(x: 16.56, y: -14.45), controlPoint1: NSPoint(x: 17.17, y: -14.65), controlPoint2: NSPoint(x: 16.61, y: -14.53))
        bezierPath.curve(to: NSPoint(x: 15.69, y: -12.8), controlPoint1: NSPoint(x: 16.24, y: -13.95), controlPoint2: NSPoint(x: 16.09, y: -13.37))
        bezierPath.curve(to: NSPoint(x: 14.56, y: -12.87), controlPoint1: NSPoint(x: 15.14, y: -12.7), controlPoint2: NSPoint(x: 14.91, y: -13.21))
        bezierPath.curve(to: NSPoint(x: 14.06, y: -11.01), controlPoint1: NSPoint(x: 14.04, y: -12.54), controlPoint2: NSPoint(x: 14.59, y: -11.77))
        bezierPath.curve(to: NSPoint(x: 13.93, y: -11.01), controlPoint1: NSPoint(x: 14.02, y: -11.01), controlPoint2: NSPoint(x: 13.98, y: -11.01))
        bezierPath.curve(to: NSPoint(x: 13.6, y: -12.08), controlPoint1: NSPoint(x: 13.75, y: -11.34), controlPoint2: NSPoint(x: 13.64, y: -11.7))
        bezierPath.curve(to: NSPoint(x: 13.6, y: -23.8), controlPoint1: NSPoint(x: 13.6, y: -15.98), controlPoint2: NSPoint(x: 13.6, y: -19.89))
        bezierPath.curve(to: NSPoint(x: 12.25, y: -24.55), controlPoint1: NSPoint(x: 13.07, y: -24.02), controlPoint2: NSPoint(x: 12.57, y: -24.23))
        bezierPath.curve(to: NSPoint(x: 10.45, y: -22.61), controlPoint1: NSPoint(x: 11.31, y: -24), controlPoint2: NSPoint(x: 10.82, y: -23.32))
        bezierPath.curve(to: NSPoint(x: 10.93, y: -22.13), controlPoint1: NSPoint(x: 10.61, y: -22.45), controlPoint2: NSPoint(x: 10.77, y: -22.29))
        bezierPath.curve(to: NSPoint(x: 10.99, y: -21.31), controlPoint1: NSPoint(x: 11.02, y: -21.86), controlPoint2: NSPoint(x: 11.03, y: -21.59))
        bezierPath.curve(to: NSPoint(x: 10.62, y: -20.78), controlPoint1: NSPoint(x: 10.87, y: -21.13), controlPoint2: NSPoint(x: 10.75, y: -20.96))
        bezierPath.curve(to: NSPoint(x: 11.23, y: -20.03), controlPoint1: NSPoint(x: 10.82, y: -20.53), controlPoint2: NSPoint(x: 11.03, y: -20.28))
        bezierPath.curve(to: NSPoint(x: 11.28, y: -19.35), controlPoint1: NSPoint(x: 11.31, y: -19.87), controlPoint2: NSPoint(x: 11.32, y: -19.63))
        bezierPath.curve(to: NSPoint(x: 10.95, y: -18.74), controlPoint1: NSPoint(x: 11.17, y: -19.15), controlPoint2: NSPoint(x: 11.06, y: -18.94))
        bezierPath.curve(to: NSPoint(x: 11.55, y: -18.09), controlPoint1: NSPoint(x: 11.15, y: -18.52), controlPoint2: NSPoint(x: 11.35, y: -18.3))
        bezierPath.curve(to: NSPoint(x: 11.56, y: -17.3), controlPoint1: NSPoint(x: 11.62, y: -17.83), controlPoint2: NSPoint(x: 11.62, y: -17.57))
        bezierPath.curve(to: NSPoint(x: 10.92, y: -16.16), controlPoint1: NSPoint(x: 11.35, y: -16.92), controlPoint2: NSPoint(x: 10.55, y: -16.62))
        bezierPath.curve(to: NSPoint(x: 10.97, y: -15.33), controlPoint1: NSPoint(x: 10.94, y: -15.88), controlPoint2: NSPoint(x: 10.95, y: -15.61))
        bezierPath.curve(to: NSPoint(x: 10.3, y: -14.63), controlPoint1: NSPoint(x: 10.75, y: -15.1), controlPoint2: NSPoint(x: 10.31, y: -14.73))
        bezierPath.curve(to: NSPoint(x: 10.3, y: -12.77), controlPoint1: NSPoint(x: 10.26, y: -14.04), controlPoint2: NSPoint(x: 10.4, y: -13.46))
        bezierPath.curve(to: NSPoint(x: 9.27, y: -12.3), controlPoint1: NSPoint(x: 9.87, y: -12.42), controlPoint2: NSPoint(x: 9.43, y: -12.77))
        bezierPath.curve(to: NSPoint(x: 9.44, y: -11.47), controlPoint1: NSPoint(x: 9.12, y: -12.02), controlPoint2: NSPoint(x: 9.27, y: -11.77))
        bezierPath.close()
        bezierPath.move(to: NSPoint(x: 13.31, y: -2.25))
        bezierPath.curve(to: NSPoint(x: 14.85, y: -3.78), controlPoint1: NSPoint(x: 14.16, y: -2.25), controlPoint2: NSPoint(x: 14.85, y: -2.94))
        bezierPath.curve(to: NSPoint(x: 13.31, y: -5.32), controlPoint1: NSPoint(x: 14.85, y: -4.63), controlPoint2: NSPoint(x: 14.16, y: -5.32))
        bezierPath.curve(to: NSPoint(x: 11.78, y: -3.78), controlPoint1: NSPoint(x: 12.46, y: -5.32), controlPoint2: NSPoint(x: 11.78, y: -4.63))
        bezierPath.curve(to: NSPoint(x: 13.31, y: -2.25), controlPoint1: NSPoint(x: 11.78, y: -2.94), controlPoint2: NSPoint(x: 12.46, y: -2.25))
        bezierPath.close()
        bezierPath.windingRule = .evenOdd
        setupKeyFill.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = NSBezierPath()
        bezier2Path.move(to: NSPoint(x: 9.5, y: -11.55))
        bezier2Path.curve(to: NSPoint(x: 8.93, y: -12.18), controlPoint1: NSPoint(x: 9.28, y: -11.73), controlPoint2: NSPoint(x: 9.09, y: -11.94))
        bezier2Path.curve(to: NSPoint(x: 3.52, y: -22.56), controlPoint1: NSPoint(x: 6.22, y: -17.36), controlPoint2: NSPoint(x: 6.22, y: -17.36))
        bezier2Path.line(to: NSPoint(x: 3.42, y: -22.62))
        bezier2Path.curve(to: NSPoint(x: 1.91, y: -22.65), controlPoint1: NSPoint(x: 2.59, y: -22.55), controlPoint2: NSPoint(x: 2.26, y: -22.55))
        bezier2Path.line(to: NSPoint(x: 1.79, y: -22.61))
        bezier2Path.curve(to: NSPoint(x: 1.08, y: -20.01), controlPoint1: NSPoint(x: 1.27, y: -21.77), controlPoint2: NSPoint(x: 1.07, y: -20.98))
        bezier2Path.line(to: NSPoint(x: 1.15, y: -19.91))
        bezier2Path.curve(to: NSPoint(x: 1.48, y: -19.8), controlPoint1: NSPoint(x: 1.31, y: -19.86), controlPoint2: NSPoint(x: 1.31, y: -19.86))
        bezier2Path.curve(to: NSPoint(x: 1.8, y: -19.7), controlPoint1: NSPoint(x: 1.64, y: -19.75), controlPoint2: NSPoint(x: 1.64, y: -19.75))
        bezier2Path.curve(to: NSPoint(x: 2.17, y: -19.07), controlPoint1: NSPoint(x: 1.94, y: -19.55), controlPoint2: NSPoint(x: 2.08, y: -19.33))
        bezier2Path.curve(to: NSPoint(x: 2.14, y: -18.96), controlPoint1: NSPoint(x: 2.15, y: -19.04), controlPoint2: NSPoint(x: 2.15, y: -19.04))
        bezier2Path.curve(to: NSPoint(x: 2.12, y: -18.78), controlPoint1: NSPoint(x: 2.13, y: -18.87), controlPoint2: NSPoint(x: 2.13, y: -18.87))
        bezier2Path.curve(to: NSPoint(x: 2.08, y: -18.48), controlPoint1: NSPoint(x: 2.1, y: -18.63), controlPoint2: NSPoint(x: 2.1, y: -18.63))
        bezier2Path.line(to: NSPoint(x: 2.14, y: -18.37))
        bezier2Path.line(to: NSPoint(x: 2.14, y: -18.37))
        bezier2Path.curve(to: NSPoint(x: 3.02, y: -17.98), controlPoint1: NSPoint(x: 2.58, y: -18.17), controlPoint2: NSPoint(x: 2.58, y: -18.17))
        bezier2Path.curve(to: NSPoint(x: 3.33, y: -17.46), controlPoint1: NSPoint(x: 3.13, y: -17.91), controlPoint2: NSPoint(x: 3.24, y: -17.73))
        bezier2Path.line(to: NSPoint(x: 3.32, y: -17.5))
        bezier2Path.curve(to: NSPoint(x: 3.32, y: -16.94), controlPoint1: NSPoint(x: 3.32, y: -17.22), controlPoint2: NSPoint(x: 3.32, y: -17.22))
        bezier2Path.curve(to: NSPoint(x: 3.32, y: -16.8), controlPoint1: NSPoint(x: 3.32, y: -16.87), controlPoint2: NSPoint(x: 3.32, y: -16.87))
        bezier2Path.line(to: NSPoint(x: 3.39, y: -16.71))
        bezier2Path.curve(to: NSPoint(x: 4.21, y: -16.4), controlPoint1: NSPoint(x: 3.8, y: -16.55), controlPoint2: NSPoint(x: 3.8, y: -16.55))
        bezier2Path.curve(to: NSPoint(x: 4.52, y: -15.78), controlPoint1: NSPoint(x: 4.33, y: -16.26), controlPoint2: NSPoint(x: 4.45, y: -16.05))
        bezier2Path.curve(to: NSPoint(x: 4.39, y: -15.37), controlPoint1: NSPoint(x: 4.52, y: -15.71), controlPoint2: NSPoint(x: 4.48, y: -15.61))
        bezier2Path.line(to: NSPoint(x: 4.39, y: -15.37))
        bezier2Path.curve(to: NSPoint(x: 4.54, y: -14.41), controlPoint1: NSPoint(x: 4.17, y: -14.81), controlPoint2: NSPoint(x: 4.16, y: -14.57))
        bezier2Path.line(to: NSPoint(x: 4.49, y: -14.45))
        bezier2Path.curve(to: NSPoint(x: 4.6, y: -14.27), controlPoint1: NSPoint(x: 4.55, y: -14.36), controlPoint2: NSPoint(x: 4.55, y: -14.36))
        bezier2Path.curve(to: NSPoint(x: 4.62, y: -14.25), controlPoint1: NSPoint(x: 4.61, y: -14.26), controlPoint2: NSPoint(x: 4.61, y: -14.26))
        bezier2Path.curve(to: NSPoint(x: 4.92, y: -13.74), controlPoint1: NSPoint(x: 4.77, y: -13.99), controlPoint2: NSPoint(x: 4.77, y: -13.99))
        bezier2Path.line(to: NSPoint(x: 4.91, y: -13.82))
        bezier2Path.curve(to: NSPoint(x: 4.79, y: -13.47), controlPoint1: NSPoint(x: 4.89, y: -13.74), controlPoint2: NSPoint(x: 4.86, y: -13.66))
        bezier2Path.line(to: NSPoint(x: 4.79, y: -13.47))
        bezier2Path.curve(to: NSPoint(x: 4.65, y: -12.82), controlPoint1: NSPoint(x: 4.63, y: -13), controlPoint2: NSPoint(x: 4.6, y: -12.91))
        bezier2Path.curve(to: NSPoint(x: 4.9, y: -12.32), controlPoint1: NSPoint(x: 4.71, y: -12.67), controlPoint2: NSPoint(x: 4.79, y: -12.51))
        bezier2Path.curve(to: NSPoint(x: 5.09, y: -12.01), controlPoint1: NSPoint(x: 4.95, y: -12.25), controlPoint2: NSPoint(x: 4.99, y: -12.17))
        bezier2Path.curve(to: NSPoint(x: 5.5, y: -11.18), controlPoint1: NSPoint(x: 5.29, y: -11.67), controlPoint2: NSPoint(x: 5.41, y: -11.45))
        bezier2Path.line(to: NSPoint(x: 5.51, y: -11.25))
        bezier2Path.curve(to: NSPoint(x: 5.24, y: -10.94), controlPoint1: NSPoint(x: 5.45, y: -11.12), controlPoint2: NSPoint(x: 5.36, y: -11.03))
        bezier2Path.curve(to: NSPoint(x: 5.07, y: -10.84), controlPoint1: NSPoint(x: 5.2, y: -10.91), controlPoint2: NSPoint(x: 5.04, y: -10.82))
        bezier2Path.curve(to: NSPoint(x: 4.8, y: -10.3), controlPoint1: NSPoint(x: 4.85, y: -10.69), controlPoint2: NSPoint(x: 4.76, y: -10.56))
        bezier2Path.curve(to: NSPoint(x: 5.21, y: -9.68), controlPoint1: NSPoint(x: 4.79, y: -10.05), controlPoint2: NSPoint(x: 4.92, y: -9.89))
        bezier2Path.curve(to: NSPoint(x: 5.53, y: -9.47), controlPoint1: NSPoint(x: 5.23, y: -9.67), controlPoint2: NSPoint(x: 5.46, y: -9.52))
        bezier2Path.curve(to: NSPoint(x: 6.06, y: -8.82), controlPoint1: NSPoint(x: 5.79, y: -9.28), controlPoint2: NSPoint(x: 5.96, y: -9.09))
        bezier2Path.line(to: NSPoint(x: 6.07, y: -8.92))
        bezier2Path.curve(to: NSPoint(x: 5.68, y: -3.26), controlPoint1: NSPoint(x: 4.9, y: -7.28), controlPoint2: NSPoint(x: 4.73, y: -5.1))
        bezier2Path.curve(to: NSPoint(x: 11.07, y: -0.38), controlPoint1: NSPoint(x: 6.73, y: -1.26), controlPoint2: NSPoint(x: 8.88, y: -0.13))
        bezier2Path.curve(to: NSPoint(x: 12.05, y: -0.28), controlPoint1: NSPoint(x: 11.37, y: -0.32), controlPoint2: NSPoint(x: 11.71, y: -0.28))
        bezier2Path.curve(to: NSPoint(x: 13.13, y: -0.39), controlPoint1: NSPoint(x: 12.42, y: -0.28), controlPoint2: NSPoint(x: 12.77, y: -0.32))
        bezier2Path.curve(to: NSPoint(x: 18.64, y: -3.22), controlPoint1: NSPoint(x: 15.32, y: -0.06), controlPoint2: NSPoint(x: 17.56, y: -1.18))
        bezier2Path.curve(to: NSPoint(x: 18.27, y: -8.91), controlPoint1: NSPoint(x: 19.62, y: -5.06), controlPoint2: NSPoint(x: 19.45, y: -7.26))
        bezier2Path.curve(to: NSPoint(x: 18.37, y: -10.61), controlPoint1: NSPoint(x: 18.11, y: -9.46), controlPoint2: NSPoint(x: 18.15, y: -10.05))
        bezier2Path.curve(to: NSPoint(x: 21.11, y: -15.78), controlPoint1: NSPoint(x: 19.74, y: -13.19), controlPoint2: NSPoint(x: 19.74, y: -13.19))
        bezier2Path.curve(to: NSPoint(x: 21.5, y: -16.52), controlPoint1: NSPoint(x: 21.3, y: -16.15), controlPoint2: NSPoint(x: 21.3, y: -16.15))
        bezier2Path.curve(to: NSPoint(x: 23.85, y: -20.96), controlPoint1: NSPoint(x: 22.68, y: -18.74), controlPoint2: NSPoint(x: 22.68, y: -18.74))
        bezier2Path.line(to: NSPoint(x: 23.84, y: -21.07))
        bezier2Path.curve(to: NSPoint(x: 23.3, y: -21.78), controlPoint1: NSPoint(x: 23.54, y: -21.43), controlPoint2: NSPoint(x: 23.43, y: -21.58))
        bezier2Path.curve(to: NSPoint(x: 23.02, y: -22.34), controlPoint1: NSPoint(x: 23.17, y: -21.98), controlPoint2: NSPoint(x: 23.07, y: -22.16))
        bezier2Path.line(to: NSPoint(x: 22.91, y: -22.41))
        bezier2Path.curve(to: NSPoint(x: 20.36, y: -21.52), controlPoint1: NSPoint(x: 21.93, y: -22.36), controlPoint2: NSPoint(x: 21.16, y: -22.07))
        bezier2Path.line(to: NSPoint(x: 20.32, y: -21.4))
        bezier2Path.curve(to: NSPoint(x: 20.39, y: -21.19), controlPoint1: NSPoint(x: 20.36, y: -21.29), controlPoint2: NSPoint(x: 20.36, y: -21.29))
        bezier2Path.curve(to: NSPoint(x: 20.43, y: -21.05), controlPoint1: NSPoint(x: 20.41, y: -21.12), controlPoint2: NSPoint(x: 20.41, y: -21.12))
        bezier2Path.curve(to: NSPoint(x: 20.52, y: -20.75), controlPoint1: NSPoint(x: 20.48, y: -20.9), controlPoint2: NSPoint(x: 20.48, y: -20.9))
        bezier2Path.curve(to: NSPoint(x: 20.21, y: -20.09), controlPoint1: NSPoint(x: 20.48, y: -20.54), controlPoint2: NSPoint(x: 20.37, y: -20.31))
        bezier2Path.curve(to: NSPoint(x: 19.96, y: -19.97), controlPoint1: NSPoint(x: 20.1, y: -20.05), controlPoint2: NSPoint(x: 20.1, y: -20.05))
        bezier2Path.curve(to: NSPoint(x: 19.93, y: -19.96), controlPoint1: NSPoint(x: 19.95, y: -19.97), controlPoint2: NSPoint(x: 19.95, y: -19.97))
        bezier2Path.curve(to: NSPoint(x: 19.67, y: -19.83), controlPoint1: NSPoint(x: 19.8, y: -19.89), controlPoint2: NSPoint(x: 19.8, y: -19.89))
        bezier2Path.line(to: NSPoint(x: 19.62, y: -19.71))
        bezier2Path.curve(to: NSPoint(x: 19.71, y: -19.24), controlPoint1: NSPoint(x: 19.66, y: -19.48), controlPoint2: NSPoint(x: 19.66, y: -19.48))
        bezier2Path.curve(to: NSPoint(x: 19.76, y: -18.96), controlPoint1: NSPoint(x: 19.74, y: -19.1), controlPoint2: NSPoint(x: 19.74, y: -19.1))
        bezier2Path.curve(to: NSPoint(x: 19.8, y: -18.77), controlPoint1: NSPoint(x: 19.78, y: -18.86), controlPoint2: NSPoint(x: 19.78, y: -18.86))
        bezier2Path.curve(to: NSPoint(x: 19.55, y: -18.22), controlPoint1: NSPoint(x: 19.8, y: -18.64), controlPoint2: NSPoint(x: 19.71, y: -18.45))
        bezier2Path.curve(to: NSPoint(x: 19.28, y: -18.05), controlPoint1: NSPoint(x: 19.43, y: -18.15), controlPoint2: NSPoint(x: 19.43, y: -18.15))
        bezier2Path.curve(to: NSPoint(x: 19, y: -17.86), controlPoint1: NSPoint(x: 19.14, y: -17.95), controlPoint2: NSPoint(x: 19.14, y: -17.95))
        bezier2Path.line(to: NSPoint(x: 18.95, y: -17.75))
        bezier2Path.curve(to: NSPoint(x: 19.04, y: -17.41), controlPoint1: NSPoint(x: 19, y: -17.58), controlPoint2: NSPoint(x: 19, y: -17.58))
        bezier2Path.curve(to: NSPoint(x: 19.06, y: -17.32), controlPoint1: NSPoint(x: 19.05, y: -17.36), controlPoint2: NSPoint(x: 19.05, y: -17.36))
        bezier2Path.curve(to: NSPoint(x: 19.17, y: -16.89), controlPoint1: NSPoint(x: 19.12, y: -17.11), controlPoint2: NSPoint(x: 19.12, y: -17.11))
        bezier2Path.curve(to: NSPoint(x: 18.84, y: -16.28), controlPoint1: NSPoint(x: 19.13, y: -16.71), controlPoint2: NSPoint(x: 19.01, y: -16.5))
        bezier2Path.curve(to: NSPoint(x: 18.42, y: -16.16), controlPoint1: NSPoint(x: 18.77, y: -16.25), controlPoint2: NSPoint(x: 18.67, y: -16.22))
        bezier2Path.line(to: NSPoint(x: 18.42, y: -16.16))
        bezier2Path.curve(to: NSPoint(x: 17.72, y: -15.49), controlPoint1: NSPoint(x: 17.84, y: -16.03), controlPoint2: NSPoint(x: 17.64, y: -15.89))
        bezier2Path.line(to: NSPoint(x: 17.73, y: -15.55))
        bezier2Path.curve(to: NSPoint(x: 17.38, y: -14.8), controlPoint1: NSPoint(x: 17.55, y: -15.18), controlPoint2: NSPoint(x: 17.55, y: -15.18))
        bezier2Path.line(to: NSPoint(x: 17.44, y: -14.85))
        bezier2Path.curve(to: NSPoint(x: 17.08, y: -14.75), controlPoint1: NSPoint(x: 17.36, y: -14.83), controlPoint2: NSPoint(x: 17.28, y: -14.8))
        bezier2Path.line(to: NSPoint(x: 17.08, y: -14.75))
        bezier2Path.curve(to: NSPoint(x: 16.47, y: -14.5), controlPoint1: NSPoint(x: 16.61, y: -14.62), controlPoint2: NSPoint(x: 16.52, y: -14.59))
        bezier2Path.curve(to: NSPoint(x: 16.14, y: -13.86), controlPoint1: NSPoint(x: 16.36, y: -14.33), controlPoint2: NSPoint(x: 16.27, y: -14.16))
        bezier2Path.curve(to: NSPoint(x: 15.83, y: -13.23), controlPoint1: NSPoint(x: 15.96, y: -13.46), controlPoint2: NSPoint(x: 15.93, y: -13.4))
        bezier2Path.curve(to: NSPoint(x: 15.6, y: -12.87), controlPoint1: NSPoint(x: 15.76, y: -13.1), controlPoint2: NSPoint(x: 15.69, y: -12.98))
        bezier2Path.line(to: NSPoint(x: 15.67, y: -12.91))
        bezier2Path.curve(to: NSPoint(x: 15.17, y: -12.99), controlPoint1: NSPoint(x: 15.5, y: -12.87), controlPoint2: NSPoint(x: 15.37, y: -12.9))
        bezier2Path.curve(to: NSPoint(x: 14.85, y: -13.09), controlPoint1: NSPoint(x: 14.96, y: -13.08), controlPoint2: NSPoint(x: 14.94, y: -13.08))
        bezier2Path.curve(to: NSPoint(x: 14.49, y: -12.95), controlPoint1: NSPoint(x: 14.72, y: -13.1), controlPoint2: NSPoint(x: 14.6, y: -13.06))
        bezier2Path.curve(to: NSPoint(x: 14.21, y: -12.1), controlPoint1: NSPoint(x: 14.24, y: -12.79), controlPoint2: NSPoint(x: 14.2, y: -12.6))
        bezier2Path.curve(to: NSPoint(x: 13.99, y: -11.08), controlPoint1: NSPoint(x: 14.22, y: -11.61), controlPoint2: NSPoint(x: 14.18, y: -11.37))
        bezier2Path.curve(to: NSPoint(x: 13.98, y: -11.07), controlPoint1: NSPoint(x: 13.98, y: -11.08), controlPoint2: NSPoint(x: 13.98, y: -11.08))
        bezier2Path.line(to: NSPoint(x: 14.06, y: -11.01))
        bezier2Path.line(to: NSPoint(x: 14.06, y: -11.11))
        bezier2Path.curve(to: NSPoint(x: 13.93, y: -11.12), controlPoint1: NSPoint(x: 14, y: -11.12), controlPoint2: NSPoint(x: 14, y: -11.12))
        bezier2Path.line(to: NSPoint(x: 13.93, y: -11.01))
        bezier2Path.line(to: NSPoint(x: 14.03, y: -11.06))
        bezier2Path.curve(to: NSPoint(x: 13.7, y: -12.09), controlPoint1: NSPoint(x: 13.85, y: -11.37), controlPoint2: NSPoint(x: 13.74, y: -11.72))
        bezier2Path.curve(to: NSPoint(x: 13.7, y: -17.94), controlPoint1: NSPoint(x: 13.7, y: -15.01), controlPoint2: NSPoint(x: 13.7, y: -15.01))
        bezier2Path.curve(to: NSPoint(x: 13.7, y: -23.8), controlPoint1: NSPoint(x: 13.7, y: -20.87), controlPoint2: NSPoint(x: 13.7, y: -20.87))
        bezier2Path.line(to: NSPoint(x: 13.64, y: -23.89))
        bezier2Path.curve(to: NSPoint(x: 13.45, y: -23.97), controlPoint1: NSPoint(x: 13.54, y: -23.93), controlPoint2: NSPoint(x: 13.54, y: -23.93))
        bezier2Path.curve(to: NSPoint(x: 12.32, y: -24.62), controlPoint1: NSPoint(x: 12.86, y: -24.22), controlPoint2: NSPoint(x: 12.55, y: -24.39))
        bezier2Path.line(to: NSPoint(x: 12.19, y: -24.64))
        bezier2Path.curve(to: NSPoint(x: 10.36, y: -22.66), controlPoint1: NSPoint(x: 11.34, y: -24.14), controlPoint2: NSPoint(x: 10.8, y: -23.52))
        bezier2Path.line(to: NSPoint(x: 10.37, y: -22.54))
        bezier2Path.curve(to: NSPoint(x: 10.54, y: -22.38), controlPoint1: NSPoint(x: 10.45, y: -22.46), controlPoint2: NSPoint(x: 10.45, y: -22.46))
        bezier2Path.curve(to: NSPoint(x: 10.62, y: -22.3), controlPoint1: NSPoint(x: 10.58, y: -22.34), controlPoint2: NSPoint(x: 10.58, y: -22.34))
        bezier2Path.curve(to: NSPoint(x: 10.86, y: -22.05), controlPoint1: NSPoint(x: 10.74, y: -22.18), controlPoint2: NSPoint(x: 10.74, y: -22.18))
        bezier2Path.curve(to: NSPoint(x: 10.89, y: -21.33), controlPoint1: NSPoint(x: 10.91, y: -21.85), controlPoint2: NSPoint(x: 10.93, y: -21.59))
        bezier2Path.curve(to: NSPoint(x: 10.72, y: -21.1), controlPoint1: NSPoint(x: 10.81, y: -21.24), controlPoint2: NSPoint(x: 10.81, y: -21.24))
        bezier2Path.curve(to: NSPoint(x: 10.54, y: -20.84), controlPoint1: NSPoint(x: 10.63, y: -20.97), controlPoint2: NSPoint(x: 10.63, y: -20.97))
        bezier2Path.line(to: NSPoint(x: 10.54, y: -20.71))
        bezier2Path.curve(to: NSPoint(x: 10.78, y: -20.42), controlPoint1: NSPoint(x: 10.66, y: -20.57), controlPoint2: NSPoint(x: 10.66, y: -20.57))
        bezier2Path.curve(to: NSPoint(x: 10.84, y: -20.34), controlPoint1: NSPoint(x: 10.81, y: -20.38), controlPoint2: NSPoint(x: 10.81, y: -20.38))
        bezier2Path.curve(to: NSPoint(x: 11.15, y: -19.97), controlPoint1: NSPoint(x: 11, y: -20.15), controlPoint2: NSPoint(x: 11, y: -20.15))
        bezier2Path.curve(to: NSPoint(x: 11.18, y: -19.37), controlPoint1: NSPoint(x: 11.21, y: -19.85), controlPoint2: NSPoint(x: 11.22, y: -19.64))
        bezier2Path.line(to: NSPoint(x: 11.19, y: -19.4))
        bezier2Path.curve(to: NSPoint(x: 10.86, y: -18.79), controlPoint1: NSPoint(x: 11.03, y: -19.09), controlPoint2: NSPoint(x: 11.03, y: -19.09))
        bezier2Path.line(to: NSPoint(x: 10.86, y: -18.79))
        bezier2Path.line(to: NSPoint(x: 10.88, y: -18.67))
        bezier2Path.line(to: NSPoint(x: 10.88, y: -18.67))
        bezier2Path.curve(to: NSPoint(x: 11.47, y: -18.02), controlPoint1: NSPoint(x: 11.17, y: -18.34), controlPoint2: NSPoint(x: 11.17, y: -18.34))
        bezier2Path.line(to: NSPoint(x: 11.47, y: -18.02))
        bezier2Path.curve(to: NSPoint(x: 11.46, y: -17.32), controlPoint1: NSPoint(x: 11.51, y: -17.83), controlPoint2: NSPoint(x: 11.51, y: -17.59))
        bezier2Path.curve(to: NSPoint(x: 11.15, y: -17.01), controlPoint1: NSPoint(x: 11.42, y: -17.26), controlPoint2: NSPoint(x: 11.34, y: -17.18))
        bezier2Path.line(to: NSPoint(x: 11.15, y: -17.01))
        bezier2Path.curve(to: NSPoint(x: 10.84, y: -16.1), controlPoint1: NSPoint(x: 10.7, y: -16.63), controlPoint2: NSPoint(x: 10.58, y: -16.41))
        bezier2Path.line(to: NSPoint(x: 10.82, y: -16.16))
        bezier2Path.curve(to: NSPoint(x: 10.85, y: -15.56), controlPoint1: NSPoint(x: 10.84, y: -15.86), controlPoint2: NSPoint(x: 10.84, y: -15.86))
        bezier2Path.curve(to: NSPoint(x: 10.87, y: -15.32), controlPoint1: NSPoint(x: 10.86, y: -15.44), controlPoint2: NSPoint(x: 10.86, y: -15.44))
        bezier2Path.line(to: NSPoint(x: 10.89, y: -15.4))
        bezier2Path.curve(to: NSPoint(x: 10.63, y: -15.14), controlPoint1: NSPoint(x: 10.84, y: -15.34), controlPoint2: NSPoint(x: 10.77, y: -15.28))
        bezier2Path.line(to: NSPoint(x: 10.63, y: -15.14))
        bezier2Path.curve(to: NSPoint(x: 10.2, y: -14.64), controlPoint1: NSPoint(x: 10.27, y: -14.81), controlPoint2: NSPoint(x: 10.2, y: -14.74))
        bezier2Path.curve(to: NSPoint(x: 10.21, y: -13.83), controlPoint1: NSPoint(x: 10.18, y: -14.42), controlPoint2: NSPoint(x: 10.19, y: -14.25))
        bezier2Path.curve(to: NSPoint(x: 10.2, y: -12.79), controlPoint1: NSPoint(x: 10.24, y: -13.33), controlPoint2: NSPoint(x: 10.24, y: -13.09))
        bezier2Path.line(to: NSPoint(x: 10.24, y: -12.85))
        bezier2Path.curve(to: NSPoint(x: 10.23, y: -12.85), controlPoint1: NSPoint(x: 10.24, y: -12.85), controlPoint2: NSPoint(x: 10.24, y: -12.85))
        bezier2Path.curve(to: NSPoint(x: 9.72, y: -12.69), controlPoint1: NSPoint(x: 10.09, y: -12.73), controlPoint2: NSPoint(x: 9.98, y: -12.7))
        bezier2Path.curve(to: NSPoint(x: 9.18, y: -12.33), controlPoint1: NSPoint(x: 9.4, y: -12.66), controlPoint2: NSPoint(x: 9.26, y: -12.6))
        bezier2Path.curve(to: NSPoint(x: 9.11, y: -11.99), controlPoint1: NSPoint(x: 9.12, y: -12.24), controlPoint2: NSPoint(x: 9.1, y: -12.12))
        bezier2Path.curve(to: NSPoint(x: 9.35, y: -11.42), controlPoint1: NSPoint(x: 9.13, y: -11.83), controlPoint2: NSPoint(x: 9.17, y: -11.75))
        bezier2Path.line(to: NSPoint(x: 9.5, y: -11.55))
        bezier2Path.close()
        bezier2Path.move(to: NSPoint(x: 9.37, y: -11.39))
        bezier2Path.line(to: NSPoint(x: 9.53, y: -11.52))
        bezier2Path.curve(to: NSPoint(x: 9.32, y: -12.01), controlPoint1: NSPoint(x: 9.37, y: -11.82), controlPoint2: NSPoint(x: 9.33, y: -11.89))
        bezier2Path.curve(to: NSPoint(x: 9.37, y: -12.25), controlPoint1: NSPoint(x: 9.31, y: -12.1), controlPoint2: NSPoint(x: 9.32, y: -12.17))
        bezier2Path.curve(to: NSPoint(x: 9.73, y: -12.48), controlPoint1: NSPoint(x: 9.43, y: -12.43), controlPoint2: NSPoint(x: 9.49, y: -12.46))
        bezier2Path.curve(to: NSPoint(x: 10.36, y: -12.69), controlPoint1: NSPoint(x: 10.03, y: -12.5), controlPoint2: NSPoint(x: 10.18, y: -12.54))
        bezier2Path.curve(to: NSPoint(x: 10.37, y: -12.69), controlPoint1: NSPoint(x: 10.37, y: -12.69), controlPoint2: NSPoint(x: 10.37, y: -12.69))
        bezier2Path.line(to: NSPoint(x: 10.41, y: -12.76))
        bezier2Path.curve(to: NSPoint(x: 10.42, y: -13.84), controlPoint1: NSPoint(x: 10.45, y: -13.08), controlPoint2: NSPoint(x: 10.45, y: -13.33))
        bezier2Path.curve(to: NSPoint(x: 10.41, y: -14.62), controlPoint1: NSPoint(x: 10.39, y: -14.25), controlPoint2: NSPoint(x: 10.39, y: -14.41))
        bezier2Path.curve(to: NSPoint(x: 10.77, y: -14.99), controlPoint1: NSPoint(x: 10.41, y: -14.64), controlPoint2: NSPoint(x: 10.54, y: -14.77))
        bezier2Path.line(to: NSPoint(x: 10.77, y: -14.99))
        bezier2Path.curve(to: NSPoint(x: 11.05, y: -15.26), controlPoint1: NSPoint(x: 10.92, y: -15.13), controlPoint2: NSPoint(x: 10.98, y: -15.19))
        bezier2Path.line(to: NSPoint(x: 11.07, y: -15.34))
        bezier2Path.curve(to: NSPoint(x: 11.06, y: -15.57), controlPoint1: NSPoint(x: 11.07, y: -15.45), controlPoint2: NSPoint(x: 11.07, y: -15.45))
        bezier2Path.curve(to: NSPoint(x: 11.03, y: -16.17), controlPoint1: NSPoint(x: 11.04, y: -15.87), controlPoint2: NSPoint(x: 11.04, y: -15.87))
        bezier2Path.line(to: NSPoint(x: 11, y: -16.23))
        bezier2Path.curve(to: NSPoint(x: 11.29, y: -16.86), controlPoint1: NSPoint(x: 10.85, y: -16.42), controlPoint2: NSPoint(x: 10.92, y: -16.54))
        bezier2Path.line(to: NSPoint(x: 11.29, y: -16.86))
        bezier2Path.curve(to: NSPoint(x: 11.65, y: -17.25), controlPoint1: NSPoint(x: 11.5, y: -17.04), controlPoint2: NSPoint(x: 11.58, y: -17.13))
        bezier2Path.curve(to: NSPoint(x: 11.64, y: -18.12), controlPoint1: NSPoint(x: 11.72, y: -17.58), controlPoint2: NSPoint(x: 11.72, y: -17.86))
        bezier2Path.line(to: NSPoint(x: 11.62, y: -18.16))
        bezier2Path.curve(to: NSPoint(x: 11.03, y: -18.81), controlPoint1: NSPoint(x: 11.33, y: -18.48), controlPoint2: NSPoint(x: 11.33, y: -18.48))
        bezier2Path.line(to: NSPoint(x: 11.03, y: -18.81))
        bezier2Path.line(to: NSPoint(x: 11.05, y: -18.69))
        bezier2Path.line(to: NSPoint(x: 11.05, y: -18.69))
        bezier2Path.curve(to: NSPoint(x: 11.37, y: -19.3), controlPoint1: NSPoint(x: 11.21, y: -18.99), controlPoint2: NSPoint(x: 11.21, y: -18.99))
        bezier2Path.line(to: NSPoint(x: 11.37, y: -19.3))
        bezier2Path.curve(to: NSPoint(x: 11.32, y: -20.08), controlPoint1: NSPoint(x: 11.43, y: -19.65), controlPoint2: NSPoint(x: 11.42, y: -19.9))
        bezier2Path.curve(to: NSPoint(x: 11.01, y: -20.47), controlPoint1: NSPoint(x: 11.16, y: -20.28), controlPoint2: NSPoint(x: 11.16, y: -20.28))
        bezier2Path.curve(to: NSPoint(x: 10.94, y: -20.55), controlPoint1: NSPoint(x: 10.98, y: -20.51), controlPoint2: NSPoint(x: 10.98, y: -20.51))
        bezier2Path.curve(to: NSPoint(x: 10.7, y: -20.85), controlPoint1: NSPoint(x: 10.82, y: -20.7), controlPoint2: NSPoint(x: 10.82, y: -20.7))
        bezier2Path.line(to: NSPoint(x: 10.71, y: -20.72))
        bezier2Path.curve(to: NSPoint(x: 10.89, y: -20.99), controlPoint1: NSPoint(x: 10.8, y: -20.85), controlPoint2: NSPoint(x: 10.8, y: -20.85))
        bezier2Path.curve(to: NSPoint(x: 11.08, y: -21.25), controlPoint1: NSPoint(x: 10.99, y: -21.12), controlPoint2: NSPoint(x: 10.99, y: -21.12))
        bezier2Path.curve(to: NSPoint(x: 11.03, y: -22.16), controlPoint1: NSPoint(x: 11.14, y: -21.59), controlPoint2: NSPoint(x: 11.12, y: -21.88))
        bezier2Path.curve(to: NSPoint(x: 10.76, y: -22.44), controlPoint1: NSPoint(x: 10.88, y: -22.32), controlPoint2: NSPoint(x: 10.88, y: -22.32))
        bezier2Path.curve(to: NSPoint(x: 10.68, y: -22.52), controlPoint1: NSPoint(x: 10.72, y: -22.48), controlPoint2: NSPoint(x: 10.72, y: -22.48))
        bezier2Path.curve(to: NSPoint(x: 10.52, y: -22.69), controlPoint1: NSPoint(x: 10.6, y: -22.6), controlPoint2: NSPoint(x: 10.6, y: -22.6))
        bezier2Path.line(to: NSPoint(x: 10.54, y: -22.56))
        bezier2Path.curve(to: NSPoint(x: 12.3, y: -24.46), controlPoint1: NSPoint(x: 10.97, y: -23.4), controlPoint2: NSPoint(x: 11.48, y: -23.98))
        bezier2Path.line(to: NSPoint(x: 12.17, y: -24.48))
        bezier2Path.curve(to: NSPoint(x: 13.37, y: -23.78), controlPoint1: NSPoint(x: 12.43, y: -24.22), controlPoint2: NSPoint(x: 12.76, y: -24.04))
        bezier2Path.curve(to: NSPoint(x: 13.56, y: -23.7), controlPoint1: NSPoint(x: 13.46, y: -23.74), controlPoint2: NSPoint(x: 13.46, y: -23.74))
        bezier2Path.line(to: NSPoint(x: 13.49, y: -23.8))
        bezier2Path.curve(to: NSPoint(x: 13.49, y: -17.94), controlPoint1: NSPoint(x: 13.49, y: -20.87), controlPoint2: NSPoint(x: 13.49, y: -20.87))
        bezier2Path.curve(to: NSPoint(x: 13.49, y: -12.08), controlPoint1: NSPoint(x: 13.49, y: -15.01), controlPoint2: NSPoint(x: 13.49, y: -15.01))
        bezier2Path.curve(to: NSPoint(x: 13.84, y: -10.96), controlPoint1: NSPoint(x: 13.54, y: -11.67), controlPoint2: NSPoint(x: 13.65, y: -11.3))
        bezier2Path.line(to: NSPoint(x: 13.93, y: -10.91))
        bezier2Path.curve(to: NSPoint(x: 14.06, y: -10.91), controlPoint1: NSPoint(x: 14, y: -10.91), controlPoint2: NSPoint(x: 14, y: -10.91))
        bezier2Path.line(to: NSPoint(x: 14.15, y: -10.95))
        bezier2Path.curve(to: NSPoint(x: 14.16, y: -10.97), controlPoint1: NSPoint(x: 14.15, y: -10.96), controlPoint2: NSPoint(x: 14.15, y: -10.96))
        bezier2Path.curve(to: NSPoint(x: 14.42, y: -12.11), controlPoint1: NSPoint(x: 14.38, y: -11.3), controlPoint2: NSPoint(x: 14.43, y: -11.58))
        bezier2Path.curve(to: NSPoint(x: 14.62, y: -12.79), controlPoint1: NSPoint(x: 14.41, y: -12.54), controlPoint2: NSPoint(x: 14.44, y: -12.67))
        bezier2Path.curve(to: NSPoint(x: 14.83, y: -12.89), controlPoint1: NSPoint(x: 14.7, y: -12.87), controlPoint2: NSPoint(x: 14.76, y: -12.89))
        bezier2Path.curve(to: NSPoint(x: 15.09, y: -12.79), controlPoint1: NSPoint(x: 14.89, y: -12.88), controlPoint2: NSPoint(x: 14.91, y: -12.87))
        bezier2Path.curve(to: NSPoint(x: 15.71, y: -12.7), controlPoint1: NSPoint(x: 15.32, y: -12.69), controlPoint2: NSPoint(x: 15.49, y: -12.66))
        bezier2Path.line(to: NSPoint(x: 15.77, y: -12.74))
        bezier2Path.curve(to: NSPoint(x: 16.01, y: -13.13), controlPoint1: NSPoint(x: 15.86, y: -12.86), controlPoint2: NSPoint(x: 15.94, y: -12.99))
        bezier2Path.curve(to: NSPoint(x: 16.33, y: -13.78), controlPoint1: NSPoint(x: 16.11, y: -13.31), controlPoint2: NSPoint(x: 16.14, y: -13.37))
        bezier2Path.curve(to: NSPoint(x: 16.65, y: -14.39), controlPoint1: NSPoint(x: 16.46, y: -14.07), controlPoint2: NSPoint(x: 16.54, y: -14.23))
        bezier2Path.curve(to: NSPoint(x: 17.14, y: -14.55), controlPoint1: NSPoint(x: 16.65, y: -14.41), controlPoint2: NSPoint(x: 16.83, y: -14.47))
        bezier2Path.line(to: NSPoint(x: 17.14, y: -14.55))
        bezier2Path.curve(to: NSPoint(x: 17.51, y: -14.66), controlPoint1: NSPoint(x: 17.34, y: -14.6), controlPoint2: NSPoint(x: 17.42, y: -14.63))
        bezier2Path.line(to: NSPoint(x: 17.57, y: -14.71))
        bezier2Path.curve(to: NSPoint(x: 17.92, y: -15.47), controlPoint1: NSPoint(x: 17.74, y: -15.09), controlPoint2: NSPoint(x: 17.74, y: -15.09))
        bezier2Path.line(to: NSPoint(x: 17.93, y: -15.53))
        bezier2Path.curve(to: NSPoint(x: 18.47, y: -15.96), controlPoint1: NSPoint(x: 17.88, y: -15.77), controlPoint2: NSPoint(x: 17.99, y: -15.85))
        bezier2Path.line(to: NSPoint(x: 18.47, y: -15.96))
        bezier2Path.curve(to: NSPoint(x: 18.97, y: -16.13), controlPoint1: NSPoint(x: 18.74, y: -16.02), controlPoint2: NSPoint(x: 18.86, y: -16.06))
        bezier2Path.curve(to: NSPoint(x: 19.37, y: -16.9), controlPoint1: NSPoint(x: 19.19, y: -16.39), controlPoint2: NSPoint(x: 19.32, y: -16.64))
        bezier2Path.curve(to: NSPoint(x: 19.26, y: -17.37), controlPoint1: NSPoint(x: 19.32, y: -17.16), controlPoint2: NSPoint(x: 19.32, y: -17.16))
        bezier2Path.curve(to: NSPoint(x: 19.24, y: -17.46), controlPoint1: NSPoint(x: 19.25, y: -17.41), controlPoint2: NSPoint(x: 19.25, y: -17.41))
        bezier2Path.curve(to: NSPoint(x: 19.16, y: -17.8), controlPoint1: NSPoint(x: 19.2, y: -17.63), controlPoint2: NSPoint(x: 19.2, y: -17.63))
        bezier2Path.line(to: NSPoint(x: 19.11, y: -17.69))
        bezier2Path.curve(to: NSPoint(x: 19.4, y: -17.88), controlPoint1: NSPoint(x: 19.26, y: -17.78), controlPoint2: NSPoint(x: 19.26, y: -17.78))
        bezier2Path.curve(to: NSPoint(x: 19.69, y: -18.08), controlPoint1: NSPoint(x: 19.54, y: -17.98), controlPoint2: NSPoint(x: 19.54, y: -17.98))
        bezier2Path.curve(to: NSPoint(x: 20.01, y: -18.79), controlPoint1: NSPoint(x: 19.91, y: -18.36), controlPoint2: NSPoint(x: 20.01, y: -18.58))
        bezier2Path.curve(to: NSPoint(x: 19.97, y: -19), controlPoint1: NSPoint(x: 19.99, y: -18.9), controlPoint2: NSPoint(x: 19.99, y: -18.9))
        bezier2Path.curve(to: NSPoint(x: 19.91, y: -19.28), controlPoint1: NSPoint(x: 19.94, y: -19.14), controlPoint2: NSPoint(x: 19.94, y: -19.14))
        bezier2Path.curve(to: NSPoint(x: 19.82, y: -19.75), controlPoint1: NSPoint(x: 19.87, y: -19.52), controlPoint2: NSPoint(x: 19.87, y: -19.52))
        bezier2Path.line(to: NSPoint(x: 19.77, y: -19.64))
        bezier2Path.curve(to: NSPoint(x: 20.03, y: -19.78), controlPoint1: NSPoint(x: 19.9, y: -19.71), controlPoint2: NSPoint(x: 19.9, y: -19.71))
        bezier2Path.curve(to: NSPoint(x: 20.05, y: -19.79), controlPoint1: NSPoint(x: 20.04, y: -19.78), controlPoint2: NSPoint(x: 20.04, y: -19.78))
        bezier2Path.curve(to: NSPoint(x: 20.34, y: -19.94), controlPoint1: NSPoint(x: 20.2, y: -19.86), controlPoint2: NSPoint(x: 20.2, y: -19.86))
        bezier2Path.curve(to: NSPoint(x: 20.73, y: -20.76), controlPoint1: NSPoint(x: 20.56, y: -20.21), controlPoint2: NSPoint(x: 20.67, y: -20.48))
        bezier2Path.curve(to: NSPoint(x: 20.63, y: -21.12), controlPoint1: NSPoint(x: 20.68, y: -20.96), controlPoint2: NSPoint(x: 20.68, y: -20.96))
        bezier2Path.curve(to: NSPoint(x: 20.59, y: -21.25), controlPoint1: NSPoint(x: 20.61, y: -21.18), controlPoint2: NSPoint(x: 20.61, y: -21.18))
        bezier2Path.curve(to: NSPoint(x: 20.52, y: -21.46), controlPoint1: NSPoint(x: 20.55, y: -21.36), controlPoint2: NSPoint(x: 20.55, y: -21.36))
        bezier2Path.line(to: NSPoint(x: 20.48, y: -21.35))
        bezier2Path.curve(to: NSPoint(x: 22.92, y: -22.2), controlPoint1: NSPoint(x: 21.25, y: -21.88), controlPoint2: NSPoint(x: 21.98, y: -22.16))
        bezier2Path.line(to: NSPoint(x: 22.82, y: -22.27))
        bezier2Path.curve(to: NSPoint(x: 23.13, y: -21.66), controlPoint1: NSPoint(x: 22.88, y: -22.08), controlPoint2: NSPoint(x: 22.98, y: -21.88))
        bezier2Path.curve(to: NSPoint(x: 23.68, y: -20.94), controlPoint1: NSPoint(x: 23.26, y: -21.46), controlPoint2: NSPoint(x: 23.38, y: -21.31))
        bezier2Path.line(to: NSPoint(x: 23.67, y: -21.06))
        bezier2Path.curve(to: NSPoint(x: 21.32, y: -16.62), controlPoint1: NSPoint(x: 22.49, y: -18.84), controlPoint2: NSPoint(x: 22.49, y: -18.84))
        bezier2Path.curve(to: NSPoint(x: 20.92, y: -15.88), controlPoint1: NSPoint(x: 21.12, y: -16.25), controlPoint2: NSPoint(x: 21.12, y: -16.25))
        bezier2Path.curve(to: NSPoint(x: 18.18, y: -10.7), controlPoint1: NSPoint(x: 19.55, y: -13.29), controlPoint2: NSPoint(x: 19.55, y: -13.29))
        bezier2Path.curve(to: NSPoint(x: 18.08, y: -8.82), controlPoint1: NSPoint(x: 17.94, y: -10.08), controlPoint2: NSPoint(x: 17.9, y: -9.45))
        bezier2Path.curve(to: NSPoint(x: 18.46, y: -3.32), controlPoint1: NSPoint(x: 19.24, y: -7.2), controlPoint2: NSPoint(x: 19.4, y: -5.09))
        bezier2Path.curve(to: NSPoint(x: 13.12, y: -0.6), controlPoint1: NSPoint(x: 17.42, y: -1.35), controlPoint2: NSPoint(x: 15.27, y: -0.28))
        bezier2Path.curve(to: NSPoint(x: 12.05, y: -0.49), controlPoint1: NSPoint(x: 12.75, y: -0.53), controlPoint2: NSPoint(x: 12.4, y: -0.49))
        bezier2Path.curve(to: NSPoint(x: 11.08, y: -0.59), controlPoint1: NSPoint(x: 11.72, y: -0.49), controlPoint2: NSPoint(x: 11.4, y: -0.52))
        bezier2Path.curve(to: NSPoint(x: 5.87, y: -3.36), controlPoint1: NSPoint(x: 8.94, y: -0.35), controlPoint2: NSPoint(x: 6.87, y: -1.43))
        bezier2Path.curve(to: NSPoint(x: 6.24, y: -8.79), controlPoint1: NSPoint(x: 4.95, y: -5.12), controlPoint2: NSPoint(x: 5.11, y: -7.22))
        bezier2Path.line(to: NSPoint(x: 6.25, y: -8.89))
        bezier2Path.curve(to: NSPoint(x: 5.65, y: -9.64), controlPoint1: NSPoint(x: 6.13, y: -9.21), controlPoint2: NSPoint(x: 5.94, y: -9.43))
        bezier2Path.curve(to: NSPoint(x: 5.33, y: -9.86), controlPoint1: NSPoint(x: 5.58, y: -9.69), controlPoint2: NSPoint(x: 5.35, y: -9.84))
        bezier2Path.curve(to: NSPoint(x: 5.01, y: -10.32), controlPoint1: NSPoint(x: 5.09, y: -10.02), controlPoint2: NSPoint(x: 5, y: -10.14))
        bezier2Path.curve(to: NSPoint(x: 5.18, y: -10.66), controlPoint1: NSPoint(x: 4.98, y: -10.5), controlPoint2: NSPoint(x: 5.02, y: -10.56))
        bezier2Path.curve(to: NSPoint(x: 5.35, y: -10.77), controlPoint1: NSPoint(x: 5.15, y: -10.64), controlPoint2: NSPoint(x: 5.31, y: -10.74))
        bezier2Path.curve(to: NSPoint(x: 5.7, y: -11.17), controlPoint1: NSPoint(x: 5.51, y: -10.88), controlPoint2: NSPoint(x: 5.62, y: -11))
        bezier2Path.line(to: NSPoint(x: 5.7, y: -11.25))
        bezier2Path.curve(to: NSPoint(x: 5.26, y: -12.12), controlPoint1: NSPoint(x: 5.6, y: -11.53), controlPoint2: NSPoint(x: 5.48, y: -11.77))
        bezier2Path.curve(to: NSPoint(x: 5.08, y: -12.43), controlPoint1: NSPoint(x: 5.17, y: -12.28), controlPoint2: NSPoint(x: 5.12, y: -12.36))
        bezier2Path.curve(to: NSPoint(x: 4.84, y: -12.9), controlPoint1: NSPoint(x: 4.97, y: -12.61), controlPoint2: NSPoint(x: 4.9, y: -12.76))
        bezier2Path.curve(to: NSPoint(x: 4.99, y: -13.4), controlPoint1: NSPoint(x: 4.83, y: -12.92), controlPoint2: NSPoint(x: 4.88, y: -13.1))
        bezier2Path.line(to: NSPoint(x: 4.99, y: -13.4))
        bezier2Path.curve(to: NSPoint(x: 5.11, y: -13.76), controlPoint1: NSPoint(x: 5.06, y: -13.59), controlPoint2: NSPoint(x: 5.08, y: -13.67))
        bezier2Path.line(to: NSPoint(x: 5.1, y: -13.84))
        bezier2Path.curve(to: NSPoint(x: 4.79, y: -14.36), controlPoint1: NSPoint(x: 4.95, y: -14.1), controlPoint2: NSPoint(x: 4.95, y: -14.1))
        bezier2Path.curve(to: NSPoint(x: 4.78, y: -14.38), controlPoint1: NSPoint(x: 4.79, y: -14.37), controlPoint2: NSPoint(x: 4.79, y: -14.37))
        bezier2Path.curve(to: NSPoint(x: 4.67, y: -14.56), controlPoint1: NSPoint(x: 4.73, y: -14.47), controlPoint2: NSPoint(x: 4.73, y: -14.47))
        bezier2Path.line(to: NSPoint(x: 4.62, y: -14.6))
        bezier2Path.curve(to: NSPoint(x: 4.58, y: -15.29), controlPoint1: NSPoint(x: 4.4, y: -14.7), controlPoint2: NSPoint(x: 4.4, y: -14.84))
        bezier2Path.line(to: NSPoint(x: 4.58, y: -15.29))
        bezier2Path.curve(to: NSPoint(x: 4.73, y: -15.8), controlPoint1: NSPoint(x: 4.69, y: -15.55), controlPoint2: NSPoint(x: 4.72, y: -15.67))
        bezier2Path.curve(to: NSPoint(x: 4.32, y: -16.57), controlPoint1: NSPoint(x: 4.64, y: -16.13), controlPoint2: NSPoint(x: 4.51, y: -16.38))
        bezier2Path.curve(to: NSPoint(x: 3.46, y: -16.9), controlPoint1: NSPoint(x: 3.87, y: -16.75), controlPoint2: NSPoint(x: 3.87, y: -16.75))
        bezier2Path.line(to: NSPoint(x: 3.52, y: -16.8))
        bezier2Path.curve(to: NSPoint(x: 3.53, y: -16.94), controlPoint1: NSPoint(x: 3.53, y: -16.87), controlPoint2: NSPoint(x: 3.53, y: -16.87))
        bezier2Path.curve(to: NSPoint(x: 3.53, y: -17.5), controlPoint1: NSPoint(x: 3.53, y: -17.22), controlPoint2: NSPoint(x: 3.53, y: -17.22))
        bezier2Path.line(to: NSPoint(x: 3.53, y: -17.5))
        bezier2Path.curve(to: NSPoint(x: 3.12, y: -18.16), controlPoint1: NSPoint(x: 3.42, y: -17.84), controlPoint2: NSPoint(x: 3.29, y: -18.05))
        bezier2Path.curve(to: NSPoint(x: 2.22, y: -18.56), controlPoint1: NSPoint(x: 2.66, y: -18.36), controlPoint2: NSPoint(x: 2.66, y: -18.36))
        bezier2Path.line(to: NSPoint(x: 2.22, y: -18.56))
        bezier2Path.line(to: NSPoint(x: 2.28, y: -18.45))
        bezier2Path.curve(to: NSPoint(x: 2.32, y: -18.76), controlPoint1: NSPoint(x: 2.3, y: -18.6), controlPoint2: NSPoint(x: 2.3, y: -18.6))
        bezier2Path.curve(to: NSPoint(x: 2.35, y: -18.93), controlPoint1: NSPoint(x: 2.34, y: -18.84), controlPoint2: NSPoint(x: 2.34, y: -18.84))
        bezier2Path.curve(to: NSPoint(x: 2.37, y: -19.09), controlPoint1: NSPoint(x: 2.36, y: -19.01), controlPoint2: NSPoint(x: 2.36, y: -19.01))
        bezier2Path.curve(to: NSPoint(x: 1.91, y: -19.87), controlPoint1: NSPoint(x: 2.26, y: -19.42), controlPoint2: NSPoint(x: 2.11, y: -19.67))
        bezier2Path.curve(to: NSPoint(x: 1.54, y: -20), controlPoint1: NSPoint(x: 1.7, y: -19.95), controlPoint2: NSPoint(x: 1.7, y: -19.95))
        bezier2Path.curve(to: NSPoint(x: 1.21, y: -20.1), controlPoint1: NSPoint(x: 1.37, y: -20.05), controlPoint2: NSPoint(x: 1.37, y: -20.05))
        bezier2Path.line(to: NSPoint(x: 1.28, y: -20.01))
        bezier2Path.curve(to: NSPoint(x: 1.97, y: -22.5), controlPoint1: NSPoint(x: 1.28, y: -20.94), controlPoint2: NSPoint(x: 1.47, y: -21.7))
        bezier2Path.line(to: NSPoint(x: 1.85, y: -22.46))
        bezier2Path.curve(to: NSPoint(x: 3.43, y: -22.41), controlPoint1: NSPoint(x: 2.23, y: -22.34), controlPoint2: NSPoint(x: 2.57, y: -22.34))
        bezier2Path.line(to: NSPoint(x: 3.33, y: -22.46))
        bezier2Path.curve(to: NSPoint(x: 8.75, y: -12.07), controlPoint1: NSPoint(x: 6.04, y: -17.27), controlPoint2: NSPoint(x: 6.04, y: -17.27))
        bezier2Path.curve(to: NSPoint(x: 9.37, y: -11.39), controlPoint1: NSPoint(x: 8.93, y: -11.8), controlPoint2: NSPoint(x: 9.14, y: -11.58))
        bezier2Path.close()
        bezier2Path.move(to: NSPoint(x: 13.31, y: -2.15))
        bezier2Path.curve(to: NSPoint(x: 14.95, y: -3.78), controlPoint1: NSPoint(x: 14.22, y: -2.15), controlPoint2: NSPoint(x: 14.95, y: -2.88))
        bezier2Path.curve(to: NSPoint(x: 13.31, y: -5.42), controlPoint1: NSPoint(x: 14.95, y: -4.69), controlPoint2: NSPoint(x: 14.22, y: -5.42))
        bezier2Path.curve(to: NSPoint(x: 11.67, y: -3.78), controlPoint1: NSPoint(x: 12.41, y: -5.42), controlPoint2: NSPoint(x: 11.67, y: -4.69))
        bezier2Path.curve(to: NSPoint(x: 13.31, y: -2.15), controlPoint1: NSPoint(x: 11.67, y: -2.88), controlPoint2: NSPoint(x: 12.41, y: -2.15))
        bezier2Path.close()
        bezier2Path.move(to: NSPoint(x: 13.31, y: -2.35))
        bezier2Path.curve(to: NSPoint(x: 11.88, y: -3.78), controlPoint1: NSPoint(x: 12.52, y: -2.35), controlPoint2: NSPoint(x: 11.88, y: -2.99))
        bezier2Path.curve(to: NSPoint(x: 13.31, y: -5.22), controlPoint1: NSPoint(x: 11.88, y: -4.57), controlPoint2: NSPoint(x: 12.52, y: -5.22))
        bezier2Path.curve(to: NSPoint(x: 14.74, y: -3.78), controlPoint1: NSPoint(x: 14.1, y: -5.22), controlPoint2: NSPoint(x: 14.74, y: -4.57))
        bezier2Path.curve(to: NSPoint(x: 13.31, y: -2.35), controlPoint1: NSPoint(x: 14.74, y: -2.99), controlPoint2: NSPoint(x: 14.1, y: -2.35))
        bezier2Path.close()
        setupKeyFill.setFill()
        bezier2Path.fill()



        NSGraphicsContext.restoreGraphicsState()
    }

    @objc dynamic public class func drawUnlockButton(frame: NSRect = NSRect(x: 0, y: 0, width: 230, height: 230)) {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext

        //// Color Declarations
        let unlockColor = NSColor(red: 0, green: 0, blue: 0, alpha: 1)

        //// Group
        NSGraphicsContext.saveGraphicsState()
        context.translateBy(x: frame.minX + 0.14000 * frame.width, y: frame.minY + 0.02000 * frame.height)
        context.scaleBy(x: 4.6, y: 4.6)



        //// Rectangle Drawing
        let rectanglePath = NSBezierPath(roundedRect: NSRect(x: 0, y: -0, width: 36, height: 28), xRadius: 2, yRadius: 2)
        unlockColor.setStroke()
        rectanglePath.lineWidth = 2
        rectanglePath.stroke()


        //// Bezier Drawing
        let bezierPath = NSBezierPath()
        bezierPath.move(to: NSPoint(x: 29, y: 28))
        bezierPath.curve(to: NSPoint(x: 29, y: 34), controlPoint1: NSPoint(x: 29, y: 28), controlPoint2: NSPoint(x: 29, y: 32.9))
        bezierPath.curve(to: NSPoint(x: 18, y: 45), controlPoint1: NSPoint(x: 29, y: 40.1), controlPoint2: NSPoint(x: 24.1, y: 45))
        bezierPath.curve(to: NSPoint(x: 7, y: 34), controlPoint1: NSPoint(x: 11.9, y: 45), controlPoint2: NSPoint(x: 7, y: 40.1))
        bezierPath.curve(to: NSPoint(x: 7, y: 28), controlPoint1: NSPoint(x: 7, y: 32.9), controlPoint2: NSPoint(x: 7, y: 28))
        unlockColor.setStroke()
        bezierPath.lineWidth = 2
        bezierPath.lineCapStyle = .round
        bezierPath.stroke()


        //// Bezier 2 Drawing
        let bezier2Path = NSBezierPath()
        bezier2Path.move(to: NSPoint(x: 21, y: 16))
        bezier2Path.curve(to: NSPoint(x: 18, y: 19), controlPoint1: NSPoint(x: 21, y: 17.7), controlPoint2: NSPoint(x: 19.7, y: 19))
        bezier2Path.curve(to: NSPoint(x: 15, y: 16), controlPoint1: NSPoint(x: 16.3, y: 19), controlPoint2: NSPoint(x: 15, y: 17.7))
        bezier2Path.curve(to: NSPoint(x: 16, y: 13.8), controlPoint1: NSPoint(x: 15, y: 15.1), controlPoint2: NSPoint(x: 15.4, y: 14.3))
        bezier2Path.line(to: NSPoint(x: 16, y: 11))
        bezier2Path.curve(to: NSPoint(x: 18, y: 9), controlPoint1: NSPoint(x: 16, y: 9.9), controlPoint2: NSPoint(x: 16.9, y: 9))
        bezier2Path.curve(to: NSPoint(x: 20, y: 11), controlPoint1: NSPoint(x: 19.1, y: 9), controlPoint2: NSPoint(x: 20, y: 9.9))
        bezier2Path.line(to: NSPoint(x: 20, y: 13.8))
        bezier2Path.curve(to: NSPoint(x: 21, y: 16), controlPoint1: NSPoint(x: 20.6, y: 14.3), controlPoint2: NSPoint(x: 21, y: 15.1))
        bezier2Path.close()
        unlockColor.setFill()
        bezier2Path.fill()



        NSGraphicsContext.restoreGraphicsState()
    }

    @objc dynamic public class func drawUnlockButtonSelected(frame: NSRect = NSRect(x: 0, y: 0, width: 230, height: 230)) {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext

        //// Color Declarations
        let unlockColor = NSColor(red: 0, green: 0, blue: 0, alpha: 1)

        //// Group 2
        NSGraphicsContext.saveGraphicsState()
        context.translateBy(x: frame.minX + 0.00000 * frame.width, y: frame.minY + 1.00000 * frame.height)
        context.scaleBy(x: 4.6, y: 4.6)



        //// Group
        //// Rectangle Drawing
        let rectanglePath = NSBezierPath(roundedRect: NSRect(x: 7, y: -48.99, width: 36, height: 28), xRadius: 2, yRadius: 2)
        unlockColor.setStroke()
        rectanglePath.lineWidth = 2
        rectanglePath.stroke()


        //// Bezier Drawing
        let bezierPath = NSBezierPath()
        bezierPath.move(to: NSPoint(x: 34.6, y: -13.09))
        bezierPath.curve(to: NSPoint(x: 33.3, y: -8.79), controlPoint1: NSPoint(x: 34.6, y: -13.09), controlPoint2: NSPoint(x: 33.5, y: -9.49))
        bezierPath.curve(to: NSPoint(x: 19.5, y: -1.49), controlPoint1: NSPoint(x: 31.5, y: -2.99), controlPoint2: NSPoint(x: 25.3, y: 0.31))
        bezierPath.curve(to: NSPoint(x: 12.2, y: -15.29), controlPoint1: NSPoint(x: 13.7, y: -3.29), controlPoint2: NSPoint(x: 10.4, y: -9.49))
        bezierPath.curve(to: NSPoint(x: 14, y: -20.99), controlPoint1: NSPoint(x: 12.6, y: -16.39), controlPoint2: NSPoint(x: 14, y: -20.99))
        unlockColor.setStroke()
        bezierPath.lineWidth = 2
        bezierPath.lineCapStyle = .round
        bezierPath.stroke()


        //// Bezier 2 Drawing
        let bezier2Path = NSBezierPath()
        bezier2Path.move(to: NSPoint(x: 28, y: -32.99))
        bezier2Path.curve(to: NSPoint(x: 25, y: -29.99), controlPoint1: NSPoint(x: 28, y: -31.29), controlPoint2: NSPoint(x: 26.7, y: -29.99))
        bezier2Path.curve(to: NSPoint(x: 22, y: -32.99), controlPoint1: NSPoint(x: 23.3, y: -29.99), controlPoint2: NSPoint(x: 22, y: -31.29))
        bezier2Path.curve(to: NSPoint(x: 23, y: -35.19), controlPoint1: NSPoint(x: 22, y: -33.89), controlPoint2: NSPoint(x: 22.4, y: -34.69))
        bezier2Path.line(to: NSPoint(x: 23, y: -37.99))
        bezier2Path.curve(to: NSPoint(x: 25, y: -39.99), controlPoint1: NSPoint(x: 23, y: -39.09), controlPoint2: NSPoint(x: 23.9, y: -39.99))
        bezier2Path.curve(to: NSPoint(x: 27, y: -37.99), controlPoint1: NSPoint(x: 26.1, y: -39.99), controlPoint2: NSPoint(x: 27, y: -39.09))
        bezier2Path.line(to: NSPoint(x: 27, y: -35.19))
        bezier2Path.curve(to: NSPoint(x: 28, y: -32.99), controlPoint1: NSPoint(x: 27.6, y: -34.69), controlPoint2: NSPoint(x: 28, y: -33.89))
        bezier2Path.close()
        unlockColor.setFill()
        bezier2Path.fill()





        NSGraphicsContext.restoreGraphicsState()
    }

    @objc dynamic public class func drawPermissionBadgeOwner(frame: NSRect = NSRect(x: 0, y: 0, width: 51, height: 51)) {

        //// Bezier Drawing
        let bezierPath = NSBezierPath()
        bezierPath.move(to: NSPoint(x: frame.minX + 0.49750 * frame.width, y: frame.minY + 0.99749 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.99751 * frame.width, y: frame.minY + 0.49749 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.77365 * frame.width, y: frame.minY + 0.99749 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.99751 * frame.width, y: frame.minY + 0.77363 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.50001 * frame.width, y: frame.minY + 0.00250 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.99751 * frame.width, y: frame.minY + 0.22135 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.77478 * frame.width, y: frame.minY + 0.00250 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.00251 * frame.width, y: frame.minY + 0.49749 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.22525 * frame.width, y: frame.minY + 0.00250 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.00251 * frame.width, y: frame.minY + 0.22135 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.49750 * frame.width, y: frame.minY + 0.99749 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.00251 * frame.width, y: frame.minY + 0.77363 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.22135 * frame.width, y: frame.minY + 0.99749 * frame.height))
        bezierPath.close()
        bezierPath.move(to: NSPoint(x: frame.minX + 0.58089 * frame.width, y: frame.minY + 0.80390 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.57086 * frame.width, y: frame.minY + 0.74047 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.57754 * frame.width, y: frame.minY + 0.78276 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.57420 * frame.width, y: frame.minY + 0.76162 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.63183 * frame.width, y: frame.minY + 0.71281 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.59227 * frame.width, y: frame.minY + 0.73637 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.61306 * frame.width, y: frame.minY + 0.72598 * frame.height))
        bezierPath.line(to: NSPoint(x: frame.minX + 0.59036 * frame.width, y: frame.minY + 0.65504 * frame.height))
        bezierPath.line(to: NSPoint(x: frame.minX + 0.63938 * frame.width, y: frame.minY + 0.61460 * frame.height))
        bezierPath.line(to: NSPoint(x: frame.minX + 0.68279 * frame.width, y: frame.minY + 0.67087 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.72865 * frame.width, y: frame.minY + 0.60644 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.70229 * frame.width, y: frame.minY + 0.65313 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.71961 * frame.width, y: frame.minY + 0.62781 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.78109 * frame.width, y: frame.minY + 0.64054 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.72877 * frame.width, y: frame.minY + 0.60618 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.77331 * frame.width, y: frame.minY + 0.63548 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.72915 * frame.width, y: frame.minY + 0.71280 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.77096 * frame.width, y: frame.minY + 0.66543 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.75222 * frame.width, y: frame.minY + 0.68953 * frame.height))
        bezierPath.line(to: NSPoint(x: frame.minX + 0.80054 * frame.width, y: frame.minY + 0.72858 * frame.height))
        bezierPath.line(to: NSPoint(x: frame.minX + 0.79038 * frame.width, y: frame.minY + 0.78205 * frame.height))
        bezierPath.line(to: NSPoint(x: frame.minX + 0.71567 * frame.width, y: frame.minY + 0.76458 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.71721 * frame.width, y: frame.minY + 0.85113 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.71567 * frame.width, y: frame.minY + 0.79052 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.71721 * frame.width, y: frame.minY + 0.82519 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.65838 * frame.width, y: frame.minY + 0.85297 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.69760 * frame.width, y: frame.minY + 0.85174 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.67799 * frame.width, y: frame.minY + 0.85236 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.65823 * frame.width, y: frame.minY + 0.76836 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.65950 * frame.width, y: frame.minY + 0.82507 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.65802 * frame.width, y: frame.minY + 0.79627 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.58285 * frame.width, y: frame.minY + 0.80338 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.63199 * frame.width, y: frame.minY + 0.78449 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.60920 * frame.width, y: frame.minY + 0.79734 * frame.height))
        bezierPath.line(to: NSPoint(x: frame.minX + 0.58285 * frame.width, y: frame.minY + 0.80336 * frame.height))
        bezierPath.line(to: NSPoint(x: frame.minX + 0.58089 * frame.width, y: frame.minY + 0.80390 * frame.height))
        bezierPath.close()
        bezierPath.move(to: NSPoint(x: frame.minX + 0.79977 * frame.width, y: frame.minY + 0.59489 * frame.height))
        bezierPath.line(to: NSPoint(x: frame.minX + 0.74253 * frame.width, y: frame.minY + 0.56373 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.75127 * frame.width, y: frame.minY + 0.49749 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.74823 * frame.width, y: frame.minY + 0.54262 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.75127 * frame.width, y: frame.minY + 0.52041 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.49750 * frame.width, y: frame.minY + 0.24372 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.75127 * frame.width, y: frame.minY + 0.35733 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.63766 * frame.width, y: frame.minY + 0.24372 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.24372 * frame.width, y: frame.minY + 0.49749 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.35734 * frame.width, y: frame.minY + 0.24372 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.24372 * frame.width, y: frame.minY + 0.35733 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.49750 * frame.width, y: frame.minY + 0.75126 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.24372 * frame.width, y: frame.minY + 0.63764 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.35734 * frame.width, y: frame.minY + 0.75126 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.52614 * frame.width, y: frame.minY + 0.74965 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.50718 * frame.width, y: frame.minY + 0.75126 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.51674 * frame.width, y: frame.minY + 0.75071 * frame.height))
        bezierPath.line(to: NSPoint(x: frame.minX + 0.53047 * frame.width, y: frame.minY + 0.81329 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.49750 * frame.width, y: frame.minY + 0.81499 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.51963 * frame.width, y: frame.minY + 0.81441 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.50863 * frame.width, y: frame.minY + 0.81499 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.17999 * frame.width, y: frame.minY + 0.49749 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.32215 * frame.width, y: frame.minY + 0.81499 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.17999 * frame.width, y: frame.minY + 0.67284 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.49750 * frame.width, y: frame.minY + 0.17999 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.17999 * frame.width, y: frame.minY + 0.32214 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.32215 * frame.width, y: frame.minY + 0.17999 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.81501 * frame.width, y: frame.minY + 0.49749 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.67285 * frame.width, y: frame.minY + 0.17999 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.81501 * frame.width, y: frame.minY + 0.32214 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.79977 * frame.width, y: frame.minY + 0.59489 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.81501 * frame.width, y: frame.minY + 0.53147 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.80966 * frame.width, y: frame.minY + 0.56420 * frame.height))
        bezierPath.close()
        bezierPath.move(to: NSPoint(x: frame.minX + 0.49968 * frame.width, y: frame.minY + 0.63779 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.57106 * frame.width, y: frame.minY + 0.56641 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.53910 * frame.width, y: frame.minY + 0.63779 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.57106 * frame.width, y: frame.minY + 0.60583 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.53407 * frame.width, y: frame.minY + 0.50386 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.57106 * frame.width, y: frame.minY + 0.53946 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.55612 * frame.width, y: frame.minY + 0.51601 * frame.height))
        bezierPath.line(to: NSPoint(x: frame.minX + 0.56925 * frame.width, y: frame.minY + 0.35776 * frame.height))
        bezierPath.line(to: NSPoint(x: frame.minX + 0.42279 * frame.width, y: frame.minY + 0.35776 * frame.height))
        bezierPath.line(to: NSPoint(x: frame.minX + 0.46477 * frame.width, y: frame.minY + 0.50415 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.42830 * frame.width, y: frame.minY + 0.56641 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.44301 * frame.width, y: frame.minY + 0.51638 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.42830 * frame.width, y: frame.minY + 0.53968 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.49968 * frame.width, y: frame.minY + 0.63779 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.42830 * frame.width, y: frame.minY + 0.60583 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.46027 * frame.width, y: frame.minY + 0.63779 * frame.height))
        bezierPath.close()
        bezierPath.windingRule = .evenOdd
        StyleKit.wirelessBlue.setFill()
        bezierPath.fill()
    }

    @objc dynamic public class func drawPermissionBadgeScheduled(frame: NSRect = NSRect(x: 0, y: 0, width: 51, height: 51)) {

        //// Beizer Drawing
        let beizerPath = NSBezierPath()
        beizerPath.move(to: NSPoint(x: frame.minX + 0.49749 * frame.width, y: frame.minY + 0.99750 * frame.height))
        beizerPath.curve(to: NSPoint(x: frame.minX + 0.99750 * frame.width, y: frame.minY + 0.50000 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.77364 * frame.width, y: frame.minY + 0.99750 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.99750 * frame.width, y: frame.minY + 0.77476 * frame.height))
        beizerPath.curve(to: NSPoint(x: frame.minX + 0.50251 * frame.width, y: frame.minY + 0.00250 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.99750 * frame.width, y: frame.minY + 0.22524 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.77866 * frame.width, y: frame.minY + 0.00250 * frame.height))
        beizerPath.curve(to: NSPoint(x: frame.minX + 0.00250 * frame.width, y: frame.minY + 0.50000 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.22636 * frame.width, y: frame.minY + 0.00250 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.00250 * frame.width, y: frame.minY + 0.22524 * frame.height))
        beizerPath.curve(to: NSPoint(x: frame.minX + 0.49749 * frame.width, y: frame.minY + 0.99750 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.00250 * frame.width, y: frame.minY + 0.77476 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.22134 * frame.width, y: frame.minY + 0.99750 * frame.height))
        beizerPath.close()
        beizerPath.move(to: NSPoint(x: frame.minX + 0.50313 * frame.width, y: frame.minY + 0.75005 * frame.height))
        beizerPath.curve(to: NSPoint(x: frame.minX + 0.76008 * frame.width, y: frame.minY + 0.49439 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.64504 * frame.width, y: frame.minY + 0.75005 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.76008 * frame.width, y: frame.minY + 0.63558 * frame.height))
        beizerPath.curve(to: NSPoint(x: frame.minX + 0.50313 * frame.width, y: frame.minY + 0.23873 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.76008 * frame.width, y: frame.minY + 0.35319 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.64504 * frame.width, y: frame.minY + 0.23873 * frame.height))
        beizerPath.curve(to: NSPoint(x: frame.minX + 0.24618 * frame.width, y: frame.minY + 0.49439 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.36122 * frame.width, y: frame.minY + 0.23873 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.24618 * frame.width, y: frame.minY + 0.35319 * frame.height))
        beizerPath.curve(to: NSPoint(x: frame.minX + 0.50313 * frame.width, y: frame.minY + 0.75005 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.24618 * frame.width, y: frame.minY + 0.63558 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.36122 * frame.width, y: frame.minY + 0.75005 * frame.height))
        beizerPath.close()
        beizerPath.move(to: NSPoint(x: frame.minX + 0.47356 * frame.width, y: frame.minY + 0.68359 * frame.height))
        beizerPath.line(to: NSPoint(x: frame.minX + 0.53326 * frame.width, y: frame.minY + 0.68359 * frame.height))
        beizerPath.line(to: NSPoint(x: frame.minX + 0.53326 * frame.width, y: frame.minY + 0.45340 * frame.height))
        beizerPath.line(to: NSPoint(x: frame.minX + 0.51949 * frame.width, y: frame.minY + 0.45340 * frame.height))
        beizerPath.line(to: NSPoint(x: frame.minX + 0.33517 * frame.width, y: frame.minY + 0.45264 * frame.height))
        beizerPath.line(to: NSPoint(x: frame.minX + 0.33500 * frame.width, y: frame.minY + 0.51205 * frame.height))
        beizerPath.line(to: NSPoint(x: frame.minX + 0.47356 * frame.width, y: frame.minY + 0.51262 * frame.height))
        beizerPath.line(to: NSPoint(x: frame.minX + 0.47356 * frame.width, y: frame.minY + 0.68359 * frame.height))
        beizerPath.close()
        beizerPath.move(to: NSPoint(x: frame.minX + 0.49749 * frame.width, y: frame.minY + 0.82286 * frame.height))
        beizerPath.curve(to: NSPoint(x: frame.minX + 0.82198 * frame.width, y: frame.minY + 0.50000 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.67670 * frame.width, y: frame.minY + 0.82286 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.82198 * frame.width, y: frame.minY + 0.67831 * frame.height))
        beizerPath.curve(to: NSPoint(x: frame.minX + 0.49749 * frame.width, y: frame.minY + 0.17714 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.82198 * frame.width, y: frame.minY + 0.32169 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.67670 * frame.width, y: frame.minY + 0.17714 * frame.height))
        beizerPath.curve(to: NSPoint(x: frame.minX + 0.17299 * frame.width, y: frame.minY + 0.50000 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.31828 * frame.width, y: frame.minY + 0.17714 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.17299 * frame.width, y: frame.minY + 0.32169 * frame.height))
        beizerPath.curve(to: NSPoint(x: frame.minX + 0.49749 * frame.width, y: frame.minY + 0.82286 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.17299 * frame.width, y: frame.minY + 0.67831 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.31828 * frame.width, y: frame.minY + 0.82286 * frame.height))
        beizerPath.close()
        beizerPath.windingRule = .evenOdd
        StyleKit.wirelessBlue.setFill()
        beizerPath.fill()
    }

    @objc dynamic public class func drawPermissionBadgeAnytime(frame: NSRect = NSRect(x: 0, y: 0, width: 51, height: 51)) {

        //// Bezier Drawing
        let bezierPath = NSBezierPath()
        bezierPath.move(to: NSPoint(x: frame.minX + 0.49750 * frame.width, y: frame.minY + 0.99749 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.99751 * frame.width, y: frame.minY + 0.49749 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.77365 * frame.width, y: frame.minY + 0.99749 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.99751 * frame.width, y: frame.minY + 0.77363 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.50001 * frame.width, y: frame.minY + 0.00250 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.99751 * frame.width, y: frame.minY + 0.22135 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.77478 * frame.width, y: frame.minY + 0.00250 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.00251 * frame.width, y: frame.minY + 0.49749 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.22525 * frame.width, y: frame.minY + 0.00250 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.00251 * frame.width, y: frame.minY + 0.22135 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.49750 * frame.width, y: frame.minY + 0.99749 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.00251 * frame.width, y: frame.minY + 0.77363 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.22135 * frame.width, y: frame.minY + 0.99749 * frame.height))
        bezierPath.close()
        bezierPath.move(to: NSPoint(x: frame.minX + 0.50314 * frame.width, y: frame.minY + 0.74969 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.76099 * frame.width, y: frame.minY + 0.49185 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.64555 * frame.width, y: frame.minY + 0.74969 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.76099 * frame.width, y: frame.minY + 0.63425 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.50314 * frame.width, y: frame.minY + 0.23401 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.76099 * frame.width, y: frame.minY + 0.34944 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.64555 * frame.width, y: frame.minY + 0.23401 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.24529 * frame.width, y: frame.minY + 0.49185 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.36073 * frame.width, y: frame.minY + 0.23401 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.24529 * frame.width, y: frame.minY + 0.34944 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.50314 * frame.width, y: frame.minY + 0.74969 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.24529 * frame.width, y: frame.minY + 0.63425 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.36073 * frame.width, y: frame.minY + 0.74969 * frame.height))
        bezierPath.close()
        bezierPath.move(to: NSPoint(x: frame.minX + 0.53087 * frame.width, y: frame.minY + 0.53749 * frame.height))
        bezierPath.line(to: NSPoint(x: frame.minX + 0.63468 * frame.width, y: frame.minY + 0.43537 * frame.height))
        bezierPath.line(to: NSPoint(x: frame.minX + 0.63468 * frame.width, y: frame.minY + 0.36634 * frame.height))
        bezierPath.line(to: NSPoint(x: frame.minX + 0.57560 * frame.width, y: frame.minY + 0.36758 * frame.height))
        bezierPath.line(to: NSPoint(x: frame.minX + 0.57684 * frame.width, y: frame.minY + 0.41236 * frame.height))
        bezierPath.line(to: NSPoint(x: frame.minX + 0.52958 * frame.width, y: frame.minY + 0.41360 * frame.height))
        bezierPath.line(to: NSPoint(x: frame.minX + 0.53082 * frame.width, y: frame.minY + 0.45714 * frame.height))
        bezierPath.line(to: NSPoint(x: frame.minX + 0.48729 * frame.width, y: frame.minY + 0.45590 * frame.height))
        bezierPath.line(to: NSPoint(x: frame.minX + 0.47026 * frame.width, y: frame.minY + 0.47293 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.44380 * frame.width, y: frame.minY + 0.46895 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.46190 * frame.width, y: frame.minY + 0.47034 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.45301 * frame.width, y: frame.minY + 0.46895 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.35425 * frame.width, y: frame.minY + 0.55850 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.39434 * frame.width, y: frame.minY + 0.46895 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.35425 * frame.width, y: frame.minY + 0.50904 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.44380 * frame.width, y: frame.minY + 0.64805 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.35425 * frame.width, y: frame.minY + 0.60796 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.39434 * frame.width, y: frame.minY + 0.64805 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.53336 * frame.width, y: frame.minY + 0.55850 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.49326 * frame.width, y: frame.minY + 0.64805 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.53336 * frame.width, y: frame.minY + 0.60796 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.53087 * frame.width, y: frame.minY + 0.53749 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.53336 * frame.width, y: frame.minY + 0.55126 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.53250 * frame.width, y: frame.minY + 0.54422 * frame.height))
        bezierPath.close()
        bezierPath.move(to: NSPoint(x: frame.minX + 0.42851 * frame.width, y: frame.minY + 0.60577 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.45743 * frame.width, y: frame.minY + 0.57623 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.44448 * frame.width, y: frame.minY + 0.60577 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.45743 * frame.width, y: frame.minY + 0.59254 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.42851 * frame.width, y: frame.minY + 0.54669 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.45743 * frame.width, y: frame.minY + 0.55992 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.44448 * frame.width, y: frame.minY + 0.54669 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.39960 * frame.width, y: frame.minY + 0.57623 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.41254 * frame.width, y: frame.minY + 0.54669 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.39960 * frame.width, y: frame.minY + 0.55992 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.42851 * frame.width, y: frame.minY + 0.60577 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.39960 * frame.width, y: frame.minY + 0.59254 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.41254 * frame.width, y: frame.minY + 0.60577 * frame.height))
        bezierPath.close()
        bezierPath.move(to: NSPoint(x: frame.minX + 0.49750 * frame.width, y: frame.minY + 0.82197 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.82199 * frame.width, y: frame.minY + 0.49749 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.67671 * frame.width, y: frame.minY + 0.82197 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.82199 * frame.width, y: frame.minY + 0.67669 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.49750 * frame.width, y: frame.minY + 0.17300 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.82199 * frame.width, y: frame.minY + 0.31828 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.67671 * frame.width, y: frame.minY + 0.17300 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.17301 * frame.width, y: frame.minY + 0.49749 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.31829 * frame.width, y: frame.minY + 0.17300 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.17301 * frame.width, y: frame.minY + 0.31828 * frame.height))
        bezierPath.curve(to: NSPoint(x: frame.minX + 0.49750 * frame.width, y: frame.minY + 0.82197 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.17301 * frame.width, y: frame.minY + 0.67669 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.31829 * frame.width, y: frame.minY + 0.82197 * frame.height))
        bezierPath.close()
        bezierPath.windingRule = .evenOdd
        StyleKit.wirelessBlue.setFill()
        bezierPath.fill()
    }

    @objc dynamic public class func drawPermissionBadgeAdmin(frame: NSRect = NSRect(x: 0, y: 0, width: 51, height: 51)) {

        //// Bezier 2 Drawing
        let bezier2Path = NSBezierPath()
        bezier2Path.move(to: NSPoint(x: frame.minX + 0.49750 * frame.width, y: frame.minY + 0.99749 * frame.height))
        bezier2Path.curve(to: NSPoint(x: frame.minX + 0.99751 * frame.width, y: frame.minY + 0.49749 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.77365 * frame.width, y: frame.minY + 0.99749 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.99751 * frame.width, y: frame.minY + 0.77363 * frame.height))
        bezier2Path.curve(to: NSPoint(x: frame.minX + 0.50001 * frame.width, y: frame.minY + 0.00250 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.99751 * frame.width, y: frame.minY + 0.22135 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.77478 * frame.width, y: frame.minY + 0.00250 * frame.height))
        bezier2Path.curve(to: NSPoint(x: frame.minX + 0.00251 * frame.width, y: frame.minY + 0.49749 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.22525 * frame.width, y: frame.minY + 0.00250 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.00251 * frame.width, y: frame.minY + 0.22135 * frame.height))
        bezier2Path.curve(to: NSPoint(x: frame.minX + 0.49750 * frame.width, y: frame.minY + 0.99749 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.00251 * frame.width, y: frame.minY + 0.77363 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.22135 * frame.width, y: frame.minY + 0.99749 * frame.height))
        bezier2Path.close()
        bezier2Path.move(to: NSPoint(x: frame.minX + 0.49186 * frame.width, y: frame.minY + 0.75730 * frame.height))
        bezier2Path.curve(to: NSPoint(x: frame.minX + 0.75168 * frame.width, y: frame.minY + 0.49749 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.63535 * frame.width, y: frame.minY + 0.75730 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.75168 * frame.width, y: frame.minY + 0.64097 * frame.height))
        bezier2Path.curve(to: NSPoint(x: frame.minX + 0.49186 * frame.width, y: frame.minY + 0.23768 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.75168 * frame.width, y: frame.minY + 0.35400 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.63535 * frame.width, y: frame.minY + 0.23768 * frame.height))
        bezier2Path.curve(to: NSPoint(x: frame.minX + 0.23204 * frame.width, y: frame.minY + 0.49749 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.34837 * frame.width, y: frame.minY + 0.23768 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.23204 * frame.width, y: frame.minY + 0.35400 * frame.height))
        bezier2Path.curve(to: NSPoint(x: frame.minX + 0.49186 * frame.width, y: frame.minY + 0.75730 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.23204 * frame.width, y: frame.minY + 0.64097 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.34837 * frame.width, y: frame.minY + 0.75730 * frame.height))
        bezier2Path.close()
        bezier2Path.move(to: NSPoint(x: frame.minX + 0.49435 * frame.width, y: frame.minY + 0.63320 * frame.height))
        bezier2Path.curve(to: NSPoint(x: frame.minX + 0.56414 * frame.width, y: frame.minY + 0.56341 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.53289 * frame.width, y: frame.minY + 0.63320 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.56414 * frame.width, y: frame.minY + 0.60195 * frame.height))
        bezier2Path.curve(to: NSPoint(x: frame.minX + 0.53079 * frame.width, y: frame.minY + 0.50388 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.56414 * frame.width, y: frame.minY + 0.53822 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.55079 * frame.width, y: frame.minY + 0.51615 * frame.height))
        bezier2Path.line(to: NSPoint(x: frame.minX + 0.56372 * frame.width, y: frame.minY + 0.35680 * frame.height))
        bezier2Path.line(to: NSPoint(x: frame.minX + 0.42566 * frame.width, y: frame.minY + 0.35680 * frame.height))
        bezier2Path.line(to: NSPoint(x: frame.minX + 0.45925 * frame.width, y: frame.minY + 0.50308 * frame.height))
        bezier2Path.curve(to: NSPoint(x: frame.minX + 0.42455 * frame.width, y: frame.minY + 0.56341 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.43850 * frame.width, y: frame.minY + 0.51517 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.42455 * frame.width, y: frame.minY + 0.53766 * frame.height))
        bezier2Path.curve(to: NSPoint(x: frame.minX + 0.49435 * frame.width, y: frame.minY + 0.63320 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.42455 * frame.width, y: frame.minY + 0.60195 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.45580 * frame.width, y: frame.minY + 0.63320 * frame.height))
        bezier2Path.close()
        bezier2Path.move(to: NSPoint(x: frame.minX + 0.49750 * frame.width, y: frame.minY + 0.82197 * frame.height))
        bezier2Path.curve(to: NSPoint(x: frame.minX + 0.82199 * frame.width, y: frame.minY + 0.49749 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.67671 * frame.width, y: frame.minY + 0.82197 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.82199 * frame.width, y: frame.minY + 0.67669 * frame.height))
        bezier2Path.curve(to: NSPoint(x: frame.minX + 0.49750 * frame.width, y: frame.minY + 0.17300 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.82199 * frame.width, y: frame.minY + 0.31828 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.67671 * frame.width, y: frame.minY + 0.17300 * frame.height))
        bezier2Path.curve(to: NSPoint(x: frame.minX + 0.17301 * frame.width, y: frame.minY + 0.49749 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.31829 * frame.width, y: frame.minY + 0.17300 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.17301 * frame.width, y: frame.minY + 0.31828 * frame.height))
        bezier2Path.curve(to: NSPoint(x: frame.minX + 0.49750 * frame.width, y: frame.minY + 0.82197 * frame.height), controlPoint1: NSPoint(x: frame.minX + 0.17301 * frame.width, y: frame.minY + 0.67669 * frame.height), controlPoint2: NSPoint(x: frame.minX + 0.31829 * frame.width, y: frame.minY + 0.82197 * frame.height))
        bezier2Path.close()
        bezier2Path.windingRule = .evenOdd
        StyleKit.wirelessBlue.setFill()
        bezier2Path.fill()
    }

    @objc dynamic public class func drawWatchScan2() {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext

        //// Symbol Drawing
        let symbolRect = NSRect(x: 0, y: 0, width: 130, height: 130)
        NSGraphicsContext.saveGraphicsState()
        symbolRect.clip()
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        StyleKit.drawScan2(frame: NSRect(x: 0, y: 0, width: symbolRect.width, height: symbolRect.height))
        NSGraphicsContext.restoreGraphicsState()
    }

    @objc dynamic public class func drawWatchScan3() {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext

        //// Symbol Drawing
        let symbolRect = NSRect(x: 0, y: 0, width: 130, height: 130)
        NSGraphicsContext.saveGraphicsState()
        symbolRect.clip()
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        StyleKit.drawScan3(frame: NSRect(x: 0, y: 0, width: symbolRect.width, height: symbolRect.height))
        NSGraphicsContext.restoreGraphicsState()
    }

    @objc dynamic public class func drawWatchScan1() {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext

        //// Symbol Drawing
        let symbolRect = NSRect(x: 0, y: 0, width: 130, height: 130)
        NSGraphicsContext.saveGraphicsState()
        symbolRect.clip()
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        StyleKit.drawScan1(frame: NSRect(x: 0, y: 0, width: symbolRect.width, height: symbolRect.height))
        NSGraphicsContext.restoreGraphicsState()
    }

    @objc dynamic public class func drawWatchScan4() {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext

        //// Symbol Drawing
        let symbolRect = NSRect(x: 0, y: 0, width: 130, height: 130)
        NSGraphicsContext.saveGraphicsState()
        symbolRect.clip()
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        StyleKit.drawScan4(frame: NSRect(x: 0, y: 0, width: symbolRect.width, height: symbolRect.height))
        NSGraphicsContext.restoreGraphicsState()
    }

    @objc dynamic public class func drawWatchOwner() {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext

        //// Symbol Drawing
        let symbolRect = NSRect(x: 0, y: 0, width: 130, height: 130)
        NSGraphicsContext.saveGraphicsState()
        symbolRect.clip()
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        StyleKit.drawPermissionBadgeOwner(frame: NSRect(x: 0, y: 0, width: symbolRect.width, height: symbolRect.height))
        NSGraphicsContext.restoreGraphicsState()
    }

    @objc dynamic public class func drawWatchScheduled() {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext

        //// Symbol Drawing
        let symbolRect = NSRect(x: 0, y: 0, width: 130, height: 130)
        NSGraphicsContext.saveGraphicsState()
        symbolRect.clip()
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        StyleKit.drawPermissionBadgeScheduled(frame: NSRect(x: 0, y: 0, width: symbolRect.width, height: symbolRect.height))
        NSGraphicsContext.restoreGraphicsState()
    }

    @objc dynamic public class func drawWatchAdmin() {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext

        //// Symbol Drawing
        let symbolRect = NSRect(x: 0, y: 0, width: 130, height: 130)
        NSGraphicsContext.saveGraphicsState()
        symbolRect.clip()
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        StyleKit.drawPermissionBadgeAdmin(frame: NSRect(x: 0, y: 0, width: symbolRect.width, height: symbolRect.height))
        NSGraphicsContext.restoreGraphicsState()
    }

    @objc dynamic public class func drawWatchAnytime() {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext

        //// Symbol Drawing
        let symbolRect = NSRect(x: 0, y: 0, width: 130, height: 130)
        NSGraphicsContext.saveGraphicsState()
        symbolRect.clip()
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        StyleKit.drawPermissionBadgeAnytime(frame: NSRect(x: 0, y: 0, width: symbolRect.width, height: symbolRect.height))
        NSGraphicsContext.restoreGraphicsState()
    }

    @objc dynamic public class func drawModularComplicationPlaceholder38mm() {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext

        //// Symbol Drawing
        let symbolRect = NSRect(x: 0, y: 0, width: 52, height: 52)
        NSGraphicsContext.saveGraphicsState()
        symbolRect.clip()
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        StyleKit.drawPermissionBadgeAdmin(frame: NSRect(x: 0, y: 0, width: symbolRect.width, height: symbolRect.height))
        NSGraphicsContext.restoreGraphicsState()
    }

    @objc dynamic public class func drawWatchScheduled2() {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext

        //// Symbol Drawing
        let symbolRect = NSRect(x: 0, y: 0, width: 130, height: 130)
        NSGraphicsContext.saveGraphicsState()
        symbolRect.clip()
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        StyleKit.drawPermissionBadgeScheduled(frame: NSRect(x: 0, y: 0, width: symbolRect.width, height: symbolRect.height))
        NSGraphicsContext.restoreGraphicsState()
    }

    @objc dynamic public class func drawModularComplicationPlaceholder42mm() {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext

        //// Symbol Drawing
        let symbolRect = NSRect(x: 0, y: 0, width: 58, height: 58)
        NSGraphicsContext.saveGraphicsState()
        symbolRect.clip()
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        StyleKit.drawPermissionBadgeAdmin(frame: NSRect(x: 0, y: 0, width: symbolRect.width, height: symbolRect.height))
        NSGraphicsContext.restoreGraphicsState()
    }

    @objc dynamic public class func drawWatchAnytime2() {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext

        //// Symbol Drawing
        let symbolRect = NSRect(x: 0, y: 0, width: 130, height: 130)
        NSGraphicsContext.saveGraphicsState()
        symbolRect.clip()
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        StyleKit.drawPermissionBadgeAnytime(frame: NSRect(x: 0, y: 0, width: symbolRect.width, height: symbolRect.height))
        NSGraphicsContext.restoreGraphicsState()
    }

    @objc dynamic public class func drawModularSmallAdmin38() {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext

        //// Symbol Drawing
        let symbolRect = NSRect(x: 0, y: 0, width: 28, height: 28)
        NSGraphicsContext.saveGraphicsState()
        symbolRect.clip()
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        StyleKit.drawPermissionBadgeAdmin(frame: NSRect(x: 0, y: 0, width: symbolRect.width, height: symbolRect.height))
        NSGraphicsContext.restoreGraphicsState()
    }

    @objc dynamic public class func drawModularSmallAdmin42() {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext

        //// Symbol Drawing
        let symbolRect = NSRect(x: 0, y: 0, width: 30, height: 30)
        NSGraphicsContext.saveGraphicsState()
        symbolRect.clip()
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        StyleKit.drawPermissionBadgeAdmin(frame: NSRect(x: 0, y: 0, width: symbolRect.width, height: symbolRect.height))
        NSGraphicsContext.restoreGraphicsState()
    }

    @objc dynamic public class func drawModularSmallAnytime38() {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext

        //// Symbol Drawing
        let symbolRect = NSRect(x: 0, y: 0, width: 28, height: 28)
        NSGraphicsContext.saveGraphicsState()
        symbolRect.clip()
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        StyleKit.drawPermissionBadgeAnytime(frame: NSRect(x: 0, y: 0, width: symbolRect.width, height: symbolRect.height))
        NSGraphicsContext.restoreGraphicsState()
    }

    @objc dynamic public class func drawModularSmallAnytime42() {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext

        //// Symbol Drawing
        let symbolRect = NSRect(x: 0, y: 0, width: 30, height: 30)
        NSGraphicsContext.saveGraphicsState()
        symbolRect.clip()
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        StyleKit.drawPermissionBadgeAnytime(frame: NSRect(x: 0, y: 0, width: symbolRect.width, height: symbolRect.height))
        NSGraphicsContext.restoreGraphicsState()
    }

    @objc dynamic public class func drawModularSmallOwner38() {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext

        //// Symbol Drawing
        let symbolRect = NSRect(x: 0, y: 0, width: 28, height: 28)
        NSGraphicsContext.saveGraphicsState()
        symbolRect.clip()
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        StyleKit.drawPermissionBadgeOwner(frame: NSRect(x: 0, y: 0, width: symbolRect.width, height: symbolRect.height))
        NSGraphicsContext.restoreGraphicsState()
    }

    @objc dynamic public class func drawModularSmallOwner42() {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext

        //// Symbol Drawing
        let symbolRect = NSRect(x: 0, y: 0, width: 30, height: 30)
        NSGraphicsContext.saveGraphicsState()
        symbolRect.clip()
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        StyleKit.drawPermissionBadgeOwner(frame: NSRect(x: 0, y: 0, width: symbolRect.width, height: symbolRect.height))
        NSGraphicsContext.restoreGraphicsState()
    }

    @objc dynamic public class func drawModularSmallScheduled38() {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext

        //// Symbol Drawing
        let symbolRect = NSRect(x: 0, y: 0, width: 28, height: 28)
        NSGraphicsContext.saveGraphicsState()
        symbolRect.clip()
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        StyleKit.drawPermissionBadgeScheduled(frame: NSRect(x: 0, y: 0, width: symbolRect.width, height: symbolRect.height))
        NSGraphicsContext.restoreGraphicsState()
    }

    @objc dynamic public class func drawModularSmallScheduled42() {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext

        //// Symbol Drawing
        let symbolRect = NSRect(x: 0, y: 0, width: 30, height: 30)
        NSGraphicsContext.saveGraphicsState()
        symbolRect.clip()
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        StyleKit.drawPermissionBadgeScheduled(frame: NSRect(x: 0, y: 0, width: symbolRect.width, height: symbolRect.height))
        NSGraphicsContext.restoreGraphicsState()
    }

    @objc dynamic public class func drawModularSmallScan38() {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext

        //// Symbol Drawing
        let symbolRect = NSRect(x: 0, y: 0, width: 28, height: 28)
        NSGraphicsContext.saveGraphicsState()
        symbolRect.clip()
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        StyleKit.drawScan4(frame: NSRect(x: 0, y: 0, width: symbolRect.width, height: symbolRect.height))
        NSGraphicsContext.restoreGraphicsState()
    }

    @objc dynamic public class func drawModularSmallScan42() {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext

        //// Symbol Drawing
        let symbolRect = NSRect(x: 0, y: 0, width: 30, height: 30)
        NSGraphicsContext.saveGraphicsState()
        symbolRect.clip()
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        StyleKit.drawScan4(frame: NSRect(x: 0, y: 0, width: symbolRect.width, height: symbolRect.height))
        NSGraphicsContext.restoreGraphicsState()
    }

    @objc dynamic public class func drawModularSmallKey42() {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext

        //// Symbol Drawing
        let symbolRect = NSRect(x: 0, y: 0, width: 30, height: 30)
        NSGraphicsContext.saveGraphicsState()
        symbolRect.clip()
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        StyleKit.drawModularSmallKey38(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        NSGraphicsContext.restoreGraphicsState()
    }

    @objc dynamic public class func drawModularSmallKey38(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 28, height: 28), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 28, height: 28), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 28, y: resizedFrame.height / 28)


        //// Color Declarations
        let black = NSColor(red: 0, green: 0, blue: 0, alpha: 1)

        //// Symbol Drawing
        let symbolRect = NSRect(x: 0, y: 0, width: 28, height: 28)
        NSGraphicsContext.saveGraphicsState()
        symbolRect.clip()
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        StyleKit.drawUnlockButtonSelected(frame: NSRect(x: 0, y: 0, width: symbolRect.width, height: symbolRect.height))
        NSGraphicsContext.restoreGraphicsState()


        //// key.svg Group
        //// Group
        //// Bezier Drawing
        let bezierPath = NSBezierPath()
        bezierPath.move(to: NSPoint(x: 10.25, y: 26.5))
        bezierPath.curve(to: NSPoint(x: 1.5, y: 17.75), controlPoint1: NSPoint(x: 5.38, y: 26.5), controlPoint2: NSPoint(x: 1.5, y: 22.62))
        bezierPath.curve(to: NSPoint(x: 10.25, y: 9), controlPoint1: NSPoint(x: 1.5, y: 12.88), controlPoint2: NSPoint(x: 5.38, y: 9))
        bezierPath.curve(to: NSPoint(x: 19, y: 17.75), controlPoint1: NSPoint(x: 15.12, y: 9), controlPoint2: NSPoint(x: 19, y: 12.88))
        bezierPath.curve(to: NSPoint(x: 10.25, y: 26.5), controlPoint1: NSPoint(x: 19, y: 22.62), controlPoint2: NSPoint(x: 15.12, y: 26.5))
        bezierPath.close()
        bezierPath.move(to: NSPoint(x: 8.38, y: 16.5))
        bezierPath.curve(to: NSPoint(x: 5.25, y: 19.62), controlPoint1: NSPoint(x: 6.62, y: 16.5), controlPoint2: NSPoint(x: 5.25, y: 17.88))
        bezierPath.curve(to: NSPoint(x: 8.38, y: 22.75), controlPoint1: NSPoint(x: 5.25, y: 21.38), controlPoint2: NSPoint(x: 6.62, y: 22.75))
        bezierPath.curve(to: NSPoint(x: 11.5, y: 19.62), controlPoint1: NSPoint(x: 10.12, y: 22.75), controlPoint2: NSPoint(x: 11.5, y: 21.38))
        bezierPath.curve(to: NSPoint(x: 8.38, y: 16.5), controlPoint1: NSPoint(x: 11.5, y: 17.88), controlPoint2: NSPoint(x: 10.12, y: 16.5))
        bezierPath.close()
        black.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = NSBezierPath()
        bezier2Path.move(to: NSPoint(x: 17.75, y: 15.25))
        bezier2Path.line(to: NSPoint(x: 12.75, y: 10.25))
        bezier2Path.line(to: NSPoint(x: 15.25, y: 7.75))
        bezier2Path.line(to: NSPoint(x: 15.25, y: 7.75))
        bezier2Path.line(to: NSPoint(x: 17.75, y: 7.75))
        bezier2Path.line(to: NSPoint(x: 17.75, y: 5.25))
        bezier2Path.line(to: NSPoint(x: 17.75, y: 5.25))
        bezier2Path.line(to: NSPoint(x: 20.25, y: 5.25))
        bezier2Path.line(to: NSPoint(x: 20.25, y: 2.75))
        bezier2Path.line(to: NSPoint(x: 21.12, y: 1.87))
        bezier2Path.curve(to: NSPoint(x: 22, y: 1.5), controlPoint1: NSPoint(x: 21.38, y: 1.62), controlPoint2: NSPoint(x: 21.62, y: 1.5))
        bezier2Path.line(to: NSPoint(x: 25.25, y: 1.5))
        bezier2Path.curve(to: NSPoint(x: 26.5, y: 2.75), controlPoint1: NSPoint(x: 26, y: 1.5), controlPoint2: NSPoint(x: 26.5, y: 2))
        bezier2Path.line(to: NSPoint(x: 26.5, y: 6))
        bezier2Path.curve(to: NSPoint(x: 26.12, y: 6.87), controlPoint1: NSPoint(x: 26.5, y: 6.37), controlPoint2: NSPoint(x: 26.38, y: 6.62))
        bezier2Path.line(to: NSPoint(x: 17.75, y: 15.25))
        bezier2Path.close()
        black.setFill()
        bezier2Path.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    @objc dynamic public class func drawActivityNewKey() {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext

        //// Color Declarations
        let setupKeyFill = NSColor(red: 0, green: 0, blue: 0, alpha: 1)

        //// Bezier Drawing
        NSGraphicsContext.saveGraphicsState()
        context.translateBy(x: 34.82, y: 34.64)
        context.scaleBy(x: 2.3, y: 2.3)

        let bezierPath = NSBezierPath()
        bezierPath.move(to: NSPoint(x: -3.03, y: 1))
        bezierPath.curve(to: NSPoint(x: -3.63, y: 0.35), controlPoint1: NSPoint(x: -3.26, y: 0.81), controlPoint2: NSPoint(x: -3.46, y: 0.59))
        bezierPath.curve(to: NSPoint(x: -9.05, y: -10.04), controlPoint1: NSPoint(x: -5.43, y: -3.12), controlPoint2: NSPoint(x: -7.24, y: -6.58))
        bezierPath.curve(to: NSPoint(x: -10.59, y: -10.09), controlPoint1: NSPoint(x: -9.62, y: -10), controlPoint2: NSPoint(x: -10.15, y: -9.95))
        bezierPath.curve(to: NSPoint(x: -11.29, y: -7.54), controlPoint1: NSPoint(x: -11.17, y: -9.17), controlPoint2: NSPoint(x: -11.29, y: -8.34))
        bezierPath.curve(to: NSPoint(x: -10.64, y: -7.33), controlPoint1: NSPoint(x: -11.07, y: -7.47), controlPoint2: NSPoint(x: -10.85, y: -7.4))
        bezierPath.curve(to: NSPoint(x: -10.2, y: -6.63), controlPoint1: NSPoint(x: -10.44, y: -7.14), controlPoint2: NSPoint(x: -10.3, y: -6.9))
        bezierPath.curve(to: NSPoint(x: -10.29, y: -5.99), controlPoint1: NSPoint(x: -10.23, y: -6.42), controlPoint2: NSPoint(x: -10.26, y: -6.21))
        bezierPath.curve(to: NSPoint(x: -9.4, y: -5.61), controlPoint1: NSPoint(x: -9.99, y: -5.86), controlPoint2: NSPoint(x: -9.7, y: -5.74))
        bezierPath.curve(to: NSPoint(x: -9.04, y: -5.03), controlPoint1: NSPoint(x: -9.25, y: -5.5), controlPoint2: NSPoint(x: -9.14, y: -5.3))
        bezierPath.curve(to: NSPoint(x: -9.05, y: -4.33), controlPoint1: NSPoint(x: -9.04, y: -4.8), controlPoint2: NSPoint(x: -9.05, y: -4.57))
        bezierPath.curve(to: NSPoint(x: -8.22, y: -4.03), controlPoint1: NSPoint(x: -8.77, y: -4.23), controlPoint2: NSPoint(x: -8.5, y: -4.13))
        bezierPath.curve(to: NSPoint(x: -7.85, y: -3.34), controlPoint1: NSPoint(x: -8.04, y: -3.84), controlPoint2: NSPoint(x: -7.92, y: -3.61))
        bezierPath.curve(to: NSPoint(x: -7.89, y: -2.04), controlPoint1: NSPoint(x: -7.86, y: -2.91), controlPoint2: NSPoint(x: -8.43, y: -2.27))
        bezierPath.curve(to: NSPoint(x: -7.46, y: -1.32), controlPoint1: NSPoint(x: -7.74, y: -1.8), controlPoint2: NSPoint(x: -7.6, y: -1.56))
        bezierPath.curve(to: NSPoint(x: -7.73, y: -0.4), controlPoint1: NSPoint(x: -7.55, y: -1.01), controlPoint2: NSPoint(x: -7.77, y: -0.48))
        bezierPath.curve(to: NSPoint(x: -6.87, y: 1.26), controlPoint1: NSPoint(x: -7.5, y: 0.15), controlPoint2: NSPoint(x: -7.1, y: 0.61))
        bezierPath.curve(to: NSPoint(x: -7.56, y: 2.15), controlPoint1: NSPoint(x: -7.09, y: 1.77), controlPoint2: NSPoint(x: -7.64, y: 1.66))
        bezierPath.curve(to: NSPoint(x: -6.31, y: 3.61), controlPoint1: NSPoint(x: -7.58, y: 2.76), controlPoint2: NSPoint(x: -6.64, y: 2.75))
        bezierPath.curve(to: NSPoint(x: -6.69, y: 9.16), controlPoint1: NSPoint(x: -7.44, y: 5.18), controlPoint2: NSPoint(x: -7.65, y: 7.32))
        bezierPath.curve(to: NSPoint(x: -1.41, y: 11.99), controlPoint1: NSPoint(x: -5.65, y: 11.16), controlPoint2: NSPoint(x: -3.51, y: 12.22))
        bezierPath.curve(to: NSPoint(x: -0.42, y: 12.08), controlPoint1: NSPoint(x: -1.09, y: 12.05), controlPoint2: NSPoint(x: -0.76, y: 12.08))
        bezierPath.curve(to: NSPoint(x: 0.64, y: 11.97), controlPoint1: NSPoint(x: -0.06, y: 12.08), controlPoint2: NSPoint(x: 0.3, y: 12.04))
        bezierPath.curve(to: NSPoint(x: 6.08, y: 9.2), controlPoint1: NSPoint(x: 2.78, y: 12.29), controlPoint2: NSPoint(x: 5, y: 11.24))
        bezierPath.curve(to: NSPoint(x: 5.71, y: 3.62), controlPoint1: NSPoint(x: 7.06, y: 7.35), controlPoint2: NSPoint(x: 6.85, y: 5.2))
        bezierPath.curve(to: NSPoint(x: 5.8, y: 1.82), controlPoint1: NSPoint(x: 5.53, y: 2.99), controlPoint2: NSPoint(x: 5.58, y: 2.38))
        bezierPath.curve(to: NSPoint(x: 11.29, y: -8.54), controlPoint1: NSPoint(x: 7.63, y: -1.63), controlPoint2: NSPoint(x: 9.46, y: -5.09))
        bezierPath.curve(to: NSPoint(x: 10.45, y: -9.84), controlPoint1: NSPoint(x: 10.93, y: -8.98), controlPoint2: NSPoint(x: 10.59, y: -9.4))
        bezierPath.curve(to: NSPoint(x: 7.95, y: -8.96), controlPoint1: NSPoint(x: 9.36, y: -9.79), controlPoint2: NSPoint(x: 8.61, y: -9.42))
        bezierPath.curve(to: NSPoint(x: 8.15, y: -8.31), controlPoint1: NSPoint(x: 8.02, y: -8.75), controlPoint2: NSPoint(x: 8.09, y: -8.53))
        bezierPath.curve(to: NSPoint(x: 7.82, y: -7.56), controlPoint1: NSPoint(x: 8.11, y: -8.04), controlPoint2: NSPoint(x: 7.99, y: -7.79))
        bezierPath.curve(to: NSPoint(x: 7.25, y: -7.26), controlPoint1: NSPoint(x: 7.63, y: -7.46), controlPoint2: NSPoint(x: 7.44, y: -7.36))
        bezierPath.curve(to: NSPoint(x: 7.43, y: -6.32), controlPoint1: NSPoint(x: 7.31, y: -6.95), controlPoint2: NSPoint(x: 7.37, y: -6.63))
        bezierPath.curve(to: NSPoint(x: 7.16, y: -5.69), controlPoint1: NSPoint(x: 7.43, y: -6.13), controlPoint2: NSPoint(x: 7.33, y: -5.92))
        bezierPath.curve(to: NSPoint(x: 6.59, y: -5.3), controlPoint1: NSPoint(x: 6.97, y: -5.56), controlPoint2: NSPoint(x: 6.78, y: -5.43))
        bezierPath.curve(to: NSPoint(x: 6.8, y: -4.45), controlPoint1: NSPoint(x: 6.66, y: -5.02), controlPoint2: NSPoint(x: 6.73, y: -4.73))
        bezierPath.curve(to: NSPoint(x: 6.45, y: -3.75), controlPoint1: NSPoint(x: 6.75, y: -4.19), controlPoint2: NSPoint(x: 6.63, y: -3.96))
        bezierPath.curve(to: NSPoint(x: 5.36, y: -3.04), controlPoint1: NSPoint(x: 6.08, y: -3.51), controlPoint2: NSPoint(x: 5.23, y: -3.62))
        bezierPath.curve(to: NSPoint(x: 5.01, y: -2.29), controlPoint1: NSPoint(x: 5.24, y: -2.79), controlPoint2: NSPoint(x: 5.12, y: -2.54))
        bezierPath.curve(to: NSPoint(x: 4.09, y: -1.98), controlPoint1: NSPoint(x: 4.7, y: -2.18), controlPoint2: NSPoint(x: 4.14, y: -2.07))
        bezierPath.curve(to: NSPoint(x: 3.22, y: -0.34), controlPoint1: NSPoint(x: 3.77, y: -1.48), controlPoint2: NSPoint(x: 3.62, y: -0.9))
        bezierPath.curve(to: NSPoint(x: 2.09, y: -0.4), controlPoint1: NSPoint(x: 2.67, y: -0.23), controlPoint2: NSPoint(x: 2.44, y: -0.74))
        bezierPath.curve(to: NSPoint(x: 1.59, y: 1.46), controlPoint1: NSPoint(x: 1.57, y: -0.07), controlPoint2: NSPoint(x: 2.12, y: 0.7))
        bezierPath.curve(to: NSPoint(x: 1.47, y: 1.46), controlPoint1: NSPoint(x: 1.55, y: 1.46), controlPoint2: NSPoint(x: 1.51, y: 1.46))
        bezierPath.curve(to: NSPoint(x: 1.13, y: 0.39), controlPoint1: NSPoint(x: 1.28, y: 1.13), controlPoint2: NSPoint(x: 1.17, y: 0.77))
        bezierPath.curve(to: NSPoint(x: 1.13, y: -11.33), controlPoint1: NSPoint(x: 1.13, y: -3.52), controlPoint2: NSPoint(x: 1.13, y: -7.42))
        bezierPath.curve(to: NSPoint(x: -0.22, y: -12.08), controlPoint1: NSPoint(x: 0.6, y: -11.55), controlPoint2: NSPoint(x: 0.1, y: -11.76))
        bezierPath.curve(to: NSPoint(x: -2.02, y: -10.14), controlPoint1: NSPoint(x: -1.16, y: -11.53), controlPoint2: NSPoint(x: -1.65, y: -10.85))
        bezierPath.curve(to: NSPoint(x: -1.54, y: -9.66), controlPoint1: NSPoint(x: -1.86, y: -9.98), controlPoint2: NSPoint(x: -1.7, y: -9.82))
        bezierPath.curve(to: NSPoint(x: -1.48, y: -8.84), controlPoint1: NSPoint(x: -1.45, y: -9.39), controlPoint2: NSPoint(x: -1.43, y: -9.12))
        bezierPath.curve(to: NSPoint(x: -1.85, y: -8.31), controlPoint1: NSPoint(x: -1.6, y: -8.66), controlPoint2: NSPoint(x: -1.72, y: -8.49))
        bezierPath.curve(to: NSPoint(x: -1.24, y: -7.56), controlPoint1: NSPoint(x: -1.65, y: -8.06), controlPoint2: NSPoint(x: -1.44, y: -7.81))
        bezierPath.curve(to: NSPoint(x: -1.19, y: -6.88), controlPoint1: NSPoint(x: -1.15, y: -7.4), controlPoint2: NSPoint(x: -1.14, y: -7.16))
        bezierPath.curve(to: NSPoint(x: -1.51, y: -6.27), controlPoint1: NSPoint(x: -1.3, y: -6.68), controlPoint2: NSPoint(x: -1.41, y: -6.47))
        bezierPath.curve(to: NSPoint(x: -0.92, y: -5.62), controlPoint1: NSPoint(x: -1.32, y: -6.05), controlPoint2: NSPoint(x: -1.12, y: -5.83))
        bezierPath.curve(to: NSPoint(x: -0.91, y: -4.83), controlPoint1: NSPoint(x: -0.85, y: -5.36), controlPoint2: NSPoint(x: -0.85, y: -5.1))
        bezierPath.curve(to: NSPoint(x: -1.54, y: -3.69), controlPoint1: NSPoint(x: -1.12, y: -4.45), controlPoint2: NSPoint(x: -1.92, y: -4.15))
        bezierPath.curve(to: NSPoint(x: -1.5, y: -2.86), controlPoint1: NSPoint(x: -1.53, y: -3.42), controlPoint2: NSPoint(x: -1.51, y: -3.14))
        bezierPath.curve(to: NSPoint(x: -2.17, y: -2.16), controlPoint1: NSPoint(x: -1.72, y: -2.63), controlPoint2: NSPoint(x: -2.16, y: -2.26))
        bezierPath.curve(to: NSPoint(x: -2.17, y: -0.3), controlPoint1: NSPoint(x: -2.21, y: -1.58), controlPoint2: NSPoint(x: -2.07, y: -0.99))
        bezierPath.curve(to: NSPoint(x: -3.19, y: 0.17), controlPoint1: NSPoint(x: -2.6, y: 0.05), controlPoint2: NSPoint(x: -3.04, y: -0.3))
        bezierPath.curve(to: NSPoint(x: -3.03, y: 1), controlPoint1: NSPoint(x: -3.35, y: 0.45), controlPoint2: NSPoint(x: -3.2, y: 0.69))
        bezierPath.close()
        bezierPath.move(to: NSPoint(x: 0.84, y: 10.22))
        bezierPath.curve(to: NSPoint(x: 2.38, y: 8.68), controlPoint1: NSPoint(x: 1.69, y: 10.22), controlPoint2: NSPoint(x: 2.38, y: 9.53))
        bezierPath.curve(to: NSPoint(x: 0.84, y: 7.15), controlPoint1: NSPoint(x: 2.38, y: 7.84), controlPoint2: NSPoint(x: 1.69, y: 7.15))
        bezierPath.curve(to: NSPoint(x: -0.69, y: 8.68), controlPoint1: NSPoint(x: -0, y: 7.15), controlPoint2: NSPoint(x: -0.69, y: 7.84))
        bezierPath.curve(to: NSPoint(x: 0.84, y: 10.22), controlPoint1: NSPoint(x: -0.69, y: 9.53), controlPoint2: NSPoint(x: -0, y: 10.22))
        bezierPath.close()
        bezierPath.windingRule = .evenOdd
        setupKeyFill.setFill()
        bezierPath.fill()

        NSGraphicsContext.restoreGraphicsState()
    }

    @objc dynamic public class func drawActivitySiri(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 60, height: 60), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 60, height: 60), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 60, y: resizedFrame.height / 60)


        //// Color Declarations
        let black = NSColor(red: 0, green: 0, blue: 0, alpha: 1)

        //// Microphone
        //// Group
        NSGraphicsContext.saveGraphicsState()
        context.translateBy(x: 31.01, y: 32.52)
        context.scaleBy(x: 0.1, y: 0.1)



        //// Rectangle 2 Drawing
        let rectangle2Path = NSBezierPath(roundedRect: NSRect(x: -101.03, y: -255.2, width: 172.05, height: 26.7), xRadius: 13.35, yRadius: 13.35)
        black.setFill()
        rectangle2Path.fill()


        //// Rectangle 3 Drawing
        let rectangle3Path = NSBezierPath(roundedRect: NSRect(x: -27.36, y: -255.23, width: 24.7, height: 138.95), xRadius: 12.35, yRadius: 12.35)
        black.setFill()
        rectangle3Path.fill()


        //// Rectangle 4 Drawing
        let rectangle4Path = NSBezierPath(roundedRect: NSRect(x: -87.16, y: -81.42, width: 144.3, height: 276.65), xRadius: 72.15, yRadius: 72.15)
        black.setFill()
        rectangle4Path.fill()


        //// Bezier 2 Drawing
        let bezier2Path = NSBezierPath()
        bezier2Path.move(to: NSPoint(x: -14.28, y: -135.52))
        bezier2Path.line(to: NSPoint(x: -15.72, y: -135.52))
        bezier2Path.curve(to: NSPoint(x: -103.66, y: -98.14), controlPoint1: NSPoint(x: -48.94, y: -135.52), controlPoint2: NSPoint(x: -80.17, y: -122.25))
        bezier2Path.curve(to: NSPoint(x: -140.08, y: -7.9), controlPoint1: NSPoint(x: -127.14, y: -74.04), controlPoint2: NSPoint(x: -140.08, y: -41.99))
        bezier2Path.curve(to: NSPoint(x: -126.81, y: 5.71), controlPoint1: NSPoint(x: -140.08, y: -0.38), controlPoint2: NSPoint(x: -134.14, y: 5.71))
        bezier2Path.curve(to: NSPoint(x: -113.54, y: -7.9), controlPoint1: NSPoint(x: -119.48, y: 5.71), controlPoint2: NSPoint(x: -113.54, y: -0.38))
        bezier2Path.curve(to: NSPoint(x: -84.89, y: -78.88), controlPoint1: NSPoint(x: -113.54, y: -34.72), controlPoint2: NSPoint(x: -103.36, y: -59.92))
        bezier2Path.curve(to: NSPoint(x: -15.72, y: -108.29), controlPoint1: NSPoint(x: -66.41, y: -97.84), controlPoint2: NSPoint(x: -41.85, y: -108.29))
        bezier2Path.line(to: NSPoint(x: -14.28, y: -108.29))
        bezier2Path.curve(to: NSPoint(x: 54.89, y: -78.88), controlPoint1: NSPoint(x: 11.85, y: -108.29), controlPoint2: NSPoint(x: 36.41, y: -97.84))
        bezier2Path.curve(to: NSPoint(x: 83.54, y: -7.9), controlPoint1: NSPoint(x: 73.36, y: -59.92), controlPoint2: NSPoint(x: 83.54, y: -34.72))
        bezier2Path.curve(to: NSPoint(x: 96.81, y: 5.71), controlPoint1: NSPoint(x: 83.54, y: -0.38), controlPoint2: NSPoint(x: 89.48, y: 5.71))
        bezier2Path.curve(to: NSPoint(x: 110.08, y: -7.9), controlPoint1: NSPoint(x: 104.14, y: 5.71), controlPoint2: NSPoint(x: 110.08, y: -0.38))
        bezier2Path.curve(to: NSPoint(x: 73.65, y: -98.14), controlPoint1: NSPoint(x: 110.08, y: -41.99), controlPoint2: NSPoint(x: 97.14, y: -74.04))
        bezier2Path.curve(to: NSPoint(x: -14.28, y: -135.52), controlPoint1: NSPoint(x: 50.17, y: -122.25), controlPoint2: NSPoint(x: 18.94, y: -135.52))
        bezier2Path.close()
        black.setFill()
        bezier2Path.fill()



        NSGraphicsContext.restoreGraphicsState()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    @objc dynamic public class func drawSettingsReportIcon(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 100, height: 100), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 100, height: 100), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 100, y: resizedFrame.height / 100)


        //// Color Declarations
        let background = NSColor(red: 1, green: 0.666, blue: 0.206, alpha: 1)
        let fillColor5 = NSColor(red: 1, green: 1, blue: 1, alpha: 1)

        //// Rectangle Drawing
        let rectanglePath = NSBezierPath(roundedRect: NSRect(x: 0, y: 0, width: 100, height: 100), xRadius: 25, yRadius: 25)
        background.setFill()
        rectanglePath.fill()


        //// Group 19
        //// Group 18
        NSGraphicsContext.saveGraphicsState()
        context.translateBy(x: 13, y: 13)
        context.scaleBy(x: 0.15, y: 0.15)



        //// Group
        //// Group 2
        //// Bezier Drawing
        let bezierPath = NSBezierPath()
        bezierPath.move(to: NSPoint(x: 304, y: 512))
        bezierPath.line(to: NSPoint(x: 208, y: 512))
        bezierPath.curve(to: NSPoint(x: 61.06, y: 451.04), controlPoint1: NSPoint(x: 152.19, y: 512), controlPoint2: NSPoint(x: 99.97, y: 490.3))
        bezierPath.curve(to: NSPoint(x: 0, y: 304), controlPoint1: NSPoint(x: 21.7, y: 412.03), controlPoint2: NSPoint(x: 0, y: 359.81))
        bezierPath.curve(to: NSPoint(x: 192, y: 96.61), controlPoint1: NSPoint(x: 0, y: 194.69), controlPoint2: NSPoint(x: 84.74, y: 104.8))
        bezierPath.line(to: NSPoint(x: 192, y: 16))
        bezierPath.curve(to: NSPoint(x: 202.18, y: 1.09), controlPoint1: NSPoint(x: 192, y: 9.41), controlPoint2: NSPoint(x: 196.06, y: 3.49))
        bezierPath.curve(to: NSPoint(x: 208, y: 0), controlPoint1: NSPoint(x: 204.1, y: 0.35), controlPoint2: NSPoint(x: 206.05, y: 0))
        bezierPath.curve(to: NSPoint(x: 219.78, y: 5.18), controlPoint1: NSPoint(x: 212.42, y: 0), controlPoint2: NSPoint(x: 216.7, y: 1.82))
        bezierPath.line(to: NSPoint(x: 303.04, y: 96))
        bezierPath.line(to: NSPoint(x: 304, y: 96))
        bezierPath.curve(to: NSPoint(x: 450.94, y: 156.96), controlPoint1: NSPoint(x: 359.81, y: 96), controlPoint2: NSPoint(x: 412.03, y: 117.7))
        bezierPath.curve(to: NSPoint(x: 512, y: 304), controlPoint1: NSPoint(x: 490.3, y: 195.97), controlPoint2: NSPoint(x: 512, y: 248.19))
        bezierPath.curve(to: NSPoint(x: 304, y: 512), controlPoint1: NSPoint(x: 512, y: 418.69), controlPoint2: NSPoint(x: 418.69, y: 512))
        bezierPath.close()
        fillColor5.setFill()
        bezierPath.fill()






        //// Group 3


        //// Group 4


        //// Group 5


        //// Group 6


        //// Group 7


        //// Group 8


        //// Group 9


        //// Group 10


        //// Group 11


        //// Group 12


        //// Group 13


        //// Group 14


        //// Group 15


        //// Group 16


        //// Group 17



        NSGraphicsContext.restoreGraphicsState()


        //// Text Drawing
        let textRect = NSRect(x: 29, y: 38, width: 44, height: 43)
        let textStyle = NSMutableParagraphStyle()
        textStyle.alignment = .center
        let textFontAttributes = [
            .font: NSFont(name: "ArialRoundedMTBold", size: 42)!,
            .foregroundColor: background,
            .paragraphStyle: textStyle,
        ] as [NSAttributedString.Key: Any]

        "!\n".draw(in: textRect.offsetBy(dx: 0, dy: 11), withAttributes: textFontAttributes)
        
        NSGraphicsContext.restoreGraphicsState()

    }

    @objc dynamic public class func drawSettingsLogsIcon(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 100, height: 100), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 100, height: 100), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 100, y: resizedFrame.height / 100)


        //// Color Declarations
        let fillColor5 = NSColor(red: 1, green: 1, blue: 1, alpha: 1)
        let color = NSColor(red: 0.52, green: 0.557, blue: 0.577, alpha: 1)

        //// Rectangle Drawing
        let rectanglePath = NSBezierPath(roundedRect: NSRect(x: 0, y: 0, width: 100, height: 100), xRadius: 25, yRadius: 25)
        color.setFill()
        rectanglePath.fill()


        //// Group 17
        NSGraphicsContext.saveGraphicsState()
        context.translateBy(x: 13, y: 87)
        context.scaleBy(x: 0.15, y: 0.15)



        //// Group
        //// Bezier Drawing
        let bezierPath = NSBezierPath()
        bezierPath.move(to: NSPoint(x: 437.31, y: -57.96))
        bezierPath.line(to: NSPoint(x: 422.34, y: -57.96))
        bezierPath.line(to: NSPoint(x: 422.34, y: -425.76))
        bezierPath.curve(to: NSPoint(x: 378.01, y: -470.08), controlPoint1: NSPoint(x: 422.34, y: -450.19), controlPoint2: NSPoint(x: 402.45, y: -470.08))
        bezierPath.line(to: NSPoint(x: 226.33, y: -470.08))
        bezierPath.line(to: NSPoint(x: 105.7, y: -470.08))
        bezierPath.line(to: NSPoint(x: 105.7, y: -483.72))
        bezierPath.curve(to: NSPoint(x: 133.99, y: -512), controlPoint1: NSPoint(x: 105.7, y: -499.33), controlPoint2: NSPoint(x: 118.38, y: -512))
        bezierPath.line(to: NSPoint(x: 285.62, y: -512))
        bezierPath.line(to: NSPoint(x: 437.25, y: -512))
        bezierPath.curve(to: NSPoint(x: 465.54, y: -483.72), controlPoint1: NSPoint(x: 452.87, y: -512), controlPoint2: NSPoint(x: 465.54, y: -499.33))
        bezierPath.line(to: NSPoint(x: 465.54, y: -86.24))
        bezierPath.curve(to: NSPoint(x: 437.31, y: -57.96), controlPoint1: NSPoint(x: 465.54, y: -70.63), controlPoint2: NSPoint(x: 452.92, y: -57.96))
        bezierPath.close()
        fillColor5.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = NSBezierPath()
        bezier2Path.move(to: NSPoint(x: 226.33, y: -454.04))
        bezier2Path.line(to: NSPoint(x: 377.96, y: -454.04))
        bezier2Path.curve(to: NSPoint(x: 406.24, y: -425.76), controlPoint1: NSPoint(x: 393.57, y: -454.04), controlPoint2: NSPoint(x: 406.24, y: -441.37))
        bezier2Path.line(to: NSPoint(x: 406.24, y: -57.96))
        bezier2Path.line(to: NSPoint(x: 406.24, y: -28.28))
        bezier2Path.curve(to: NSPoint(x: 377.96, y: 0), controlPoint1: NSPoint(x: 406.24, y: -12.67), controlPoint2: NSPoint(x: 393.57, y: 0))
        bezier2Path.line(to: NSPoint(x: 226.33, y: 0))
        bezier2Path.line(to: NSPoint(x: 175.91, y: 0))
        bezier2Path.line(to: NSPoint(x: 175.91, y: -9.36))
        bezier2Path.curve(to: NSPoint(x: 176.07, y: -12.35), controlPoint1: NSPoint(x: 176.01, y: -10.32), controlPoint2: NSPoint(x: 176.07, y: -11.34))
        bezier2Path.line(to: NSPoint(x: 176.07, y: -74))
        bezier2Path.line(to: NSPoint(x: 176.07, y: -89.82))
        bezier2Path.curve(to: NSPoint(x: 136.23, y: -129.66), controlPoint1: NSPoint(x: 176.07, y: -111.8), controlPoint2: NSPoint(x: 158.21, y: -129.66))
        bezier2Path.line(to: NSPoint(x: 120.41, y: -129.66))
        bezier2Path.line(to: NSPoint(x: 58.76, y: -129.66))
        bezier2Path.curve(to: NSPoint(x: 56.3, y: -129.55), controlPoint1: NSPoint(x: 57.96, y: -129.66), controlPoint2: NSPoint(x: 57.1, y: -129.6))
        bezier2Path.line(to: NSPoint(x: 46.46, y: -129.55))
        bezier2Path.line(to: NSPoint(x: 46.46, y: -425.76))
        bezier2Path.curve(to: NSPoint(x: 74.75, y: -454.04), controlPoint1: NSPoint(x: 46.46, y: -441.37), controlPoint2: NSPoint(x: 59.13, y: -454.04))
        bezier2Path.line(to: NSPoint(x: 105.76, y: -454.04))
        bezier2Path.line(to: NSPoint(x: 226.33, y: -454.04))
        bezier2Path.line(to: NSPoint(x: 226.33, y: -454.04))
        bezier2Path.close()
        bezier2Path.move(to: NSPoint(x: 232.05, y: -357.91))
        bezier2Path.line(to: NSPoint(x: 133.19, y: -357.91))
        bezier2Path.curve(to: NSPoint(x: 119.82, y: -344.54), controlPoint1: NSPoint(x: 125.81, y: -357.91), controlPoint2: NSPoint(x: 119.82, y: -351.92))
        bezier2Path.curve(to: NSPoint(x: 133.19, y: -331.17), controlPoint1: NSPoint(x: 119.82, y: -337.16), controlPoint2: NSPoint(x: 125.81, y: -331.17))
        bezier2Path.line(to: NSPoint(x: 232.1, y: -331.17))
        bezier2Path.curve(to: NSPoint(x: 245.47, y: -344.54), controlPoint1: NSPoint(x: 239.48, y: -331.17), controlPoint2: NSPoint(x: 245.47, y: -337.16))
        bezier2Path.curve(to: NSPoint(x: 232.05, y: -357.91), controlPoint1: NSPoint(x: 245.47, y: -351.92), controlPoint2: NSPoint(x: 239.43, y: -357.91))
        bezier2Path.close()
        bezier2Path.move(to: NSPoint(x: 330.96, y: -289.68))
        bezier2Path.line(to: NSPoint(x: 133.19, y: -289.68))
        bezier2Path.curve(to: NSPoint(x: 119.82, y: -276.32), controlPoint1: NSPoint(x: 125.81, y: -289.68), controlPoint2: NSPoint(x: 119.82, y: -283.7))
        bezier2Path.curve(to: NSPoint(x: 133.19, y: -262.95), controlPoint1: NSPoint(x: 119.82, y: -268.94), controlPoint2: NSPoint(x: 125.81, y: -262.95))
        bezier2Path.line(to: NSPoint(x: 330.96, y: -262.95))
        bezier2Path.curve(to: NSPoint(x: 344.33, y: -276.32), controlPoint1: NSPoint(x: 338.34, y: -262.95), controlPoint2: NSPoint(x: 344.33, y: -268.94))
        bezier2Path.curve(to: NSPoint(x: 330.96, y: -289.68), controlPoint1: NSPoint(x: 344.33, y: -283.7), controlPoint2: NSPoint(x: 338.34, y: -289.68))
        bezier2Path.close()
        bezier2Path.move(to: NSPoint(x: 133.19, y: -190.5))
        bezier2Path.line(to: NSPoint(x: 330.96, y: -190.5))
        bezier2Path.curve(to: NSPoint(x: 344.33, y: -203.87), controlPoint1: NSPoint(x: 338.34, y: -190.5), controlPoint2: NSPoint(x: 344.33, y: -196.49))
        bezier2Path.curve(to: NSPoint(x: 330.96, y: -217.24), controlPoint1: NSPoint(x: 344.33, y: -211.25), controlPoint2: NSPoint(x: 338.34, y: -217.24))
        bezier2Path.line(to: NSPoint(x: 133.19, y: -217.24))
        bezier2Path.curve(to: NSPoint(x: 119.82, y: -203.87), controlPoint1: NSPoint(x: 125.81, y: -217.24), controlPoint2: NSPoint(x: 119.82, y: -211.25))
        bezier2Path.curve(to: NSPoint(x: 133.19, y: -190.5), controlPoint1: NSPoint(x: 119.82, y: -196.49), controlPoint2: NSPoint(x: 125.81, y: -190.5))
        bezier2Path.close()
        fillColor5.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = NSBezierPath()
        bezier3Path.move(to: NSPoint(x: 58.76, y: -113.62))
        bezier3Path.line(to: NSPoint(x: 136.23, y: -113.62))
        bezier3Path.curve(to: NSPoint(x: 136.45, y: -113.62), controlPoint1: NSPoint(x: 136.29, y: -113.62), controlPoint2: NSPoint(x: 136.39, y: -113.62))
        bezier3Path.curve(to: NSPoint(x: 159.97, y: -90.09), controlPoint1: NSPoint(x: 149.39, y: -113.51), controlPoint2: NSPoint(x: 159.87, y: -103.03))
        bezier3Path.curve(to: NSPoint(x: 159.97, y: -89.88), controlPoint1: NSPoint(x: 159.97, y: -90.04), controlPoint2: NSPoint(x: 159.97, y: -89.93))
        bezier3Path.line(to: NSPoint(x: 159.97, y: -12.35))
        bezier3Path.curve(to: NSPoint(x: 148, y: -0.43), controlPoint1: NSPoint(x: 159.97, y: -5.19), controlPoint2: NSPoint(x: 154.09, y: -0.43))
        bezier3Path.curve(to: NSPoint(x: 139.66, y: -3.96), controlPoint1: NSPoint(x: 145.06, y: -0.43), controlPoint2: NSPoint(x: 142.12, y: -1.5))
        bezier3Path.line(to: NSPoint(x: 50.31, y: -93.3))
        bezier3Path.curve(to: NSPoint(x: 58.76, y: -113.62), controlPoint1: NSPoint(x: 42.83, y: -100.79), controlPoint2: NSPoint(x: 48.12, y: -113.62))
        bezier3Path.close()
        fillColor5.setFill()
        bezier3Path.fill()




        //// Group 2


        //// Group 3


        //// Group 4


        //// Group 5


        //// Group 6


        //// Group 7


        //// Group 8


        //// Group 9


        //// Group 10


        //// Group 11


        //// Group 12


        //// Group 13


        //// Group 14


        //// Group 15


        //// Group 16



        NSGraphicsContext.restoreGraphicsState()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    @objc dynamic public class func drawSettingsBluetoothIcon(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 100, height: 100), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 100, height: 100), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 100, y: resizedFrame.height / 100)


        //// Color Declarations
        let fillColor5 = NSColor(red: 1, green: 1, blue: 1, alpha: 1)

        //// Rectangle Drawing
        let rectanglePath = NSBezierPath(roundedRect: NSRect(x: 0, y: 0, width: 100, height: 100), xRadius: 25, yRadius: 25)
        StyleKit.bluetoothBlue.setFill()
        rectanglePath.fill()


        //// Shape Drawing
        NSGraphicsContext.saveGraphicsState()
        context.translateBy(x: 23, y: 12.49)
        context.scaleBy(x: 1.5, y: 1.5)

        let shapePath = NSBezierPath()
        shapePath.move(to: NSPoint(x: 20, y: 37.91))
        shapePath.line(to: NSPoint(x: 24.05, y: 33.74))
        shapePath.line(to: NSPoint(x: 20.01, y: 29.58))
        shapePath.line(to: NSPoint(x: 20, y: 37.91))
        shapePath.line(to: NSPoint(x: 20, y: 37.91))
        shapePath.close()
        shapePath.move(to: NSPoint(x: 20, y: 12.43))
        shapePath.line(to: NSPoint(x: 24.05, y: 16.6))
        shapePath.line(to: NSPoint(x: 20.01, y: 20.75))
        shapePath.line(to: NSPoint(x: 20, y: 12.43))
        shapePath.line(to: NSPoint(x: 20, y: 12.43))
        shapePath.close()
        shapePath.move(to: NSPoint(x: 15.69, y: 25.16))
        shapePath.line(to: NSPoint(x: 6.96, y: 34.19))
        shapePath.line(to: NSPoint(x: 9.49, y: 36.79))
        shapePath.line(to: NSPoint(x: 16.45, y: 29.63))
        shapePath.line(to: NSPoint(x: 16.45, y: 46.81))
        shapePath.line(to: NSPoint(x: 29.1, y: 33.77))
        shapePath.line(to: NSPoint(x: 20.74, y: 25.16))
        shapePath.line(to: NSPoint(x: 29.1, y: 16.57))
        shapePath.line(to: NSPoint(x: 16.45, y: 3.53))
        shapePath.line(to: NSPoint(x: 16.45, y: 20.71))
        shapePath.line(to: NSPoint(x: 9.49, y: 13.55))
        shapePath.line(to: NSPoint(x: 6.96, y: 16.15))
        shapePath.line(to: NSPoint(x: 15.69, y: 25.16))
        shapePath.line(to: NSPoint(x: 15.69, y: 25.16))
        shapePath.close()
        shapePath.move(to: NSPoint(x: 18.03, y: 0))
        shapePath.curve(to: NSPoint(x: 36.06, y: 25.17), controlPoint1: NSPoint(x: 28.7, y: 0), controlPoint2: NSPoint(x: 36.06, y: 5.22))
        shapePath.curve(to: NSPoint(x: 18.03, y: 50.34), controlPoint1: NSPoint(x: 36.06, y: 45.12), controlPoint2: NSPoint(x: 28.7, y: 50.34))
        shapePath.curve(to: NSPoint(x: 0, y: 25.17), controlPoint1: NSPoint(x: 7.36, y: 50.34), controlPoint2: NSPoint(x: 0, y: 45.12))
        shapePath.curve(to: NSPoint(x: 18.03, y: 0), controlPoint1: NSPoint(x: 0, y: 5.22), controlPoint2: NSPoint(x: 7.36, y: 0))
        shapePath.line(to: NSPoint(x: 18.03, y: 0))
        shapePath.line(to: NSPoint(x: 18.03, y: 0))
        shapePath.close()
        shapePath.windingRule = .evenOdd
        fillColor5.setFill()
        shapePath.fill()

        NSGraphicsContext.restoreGraphicsState()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    @objc dynamic public class func drawSettingsCloudIcon(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 100, height: 100), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 100, height: 100), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 100, y: resizedFrame.height / 100)


        //// Color Declarations
        let fillColor5 = NSColor(red: 1, green: 1, blue: 1, alpha: 1)
        let fillColor3 = NSColor(red: 0.557, green: 0.757, blue: 0.937, alpha: 1)

        //// Rectangle Drawing
        let rectanglePath = NSBezierPath(roundedRect: NSRect(x: 0, y: 0, width: 100, height: 100), xRadius: 25, yRadius: 25)
        fillColor3.setFill()
        rectanglePath.fill()


        //// Page-1
        //// Group 3
        //// icloud.fill
        //// shape
        //// Cloud Drawing
        let cloudPath = NSBezierPath()
        cloudPath.move(to: NSPoint(x: 73.13, y: 23.81))
        cloudPath.line(to: NSPoint(x: 29.14, y: 23.81))
        cloudPath.curve(to: NSPoint(x: 10, y: 40.37), controlPoint1: NSPoint(x: 18.21, y: 23.81), controlPoint2: NSPoint(x: 10, y: 31.37))
        cloudPath.curve(to: NSPoint(x: 21.73, y: 55.12), controlPoint1: NSPoint(x: 10, y: 47.84), controlPoint2: NSPoint(x: 14.47, y: 54.02))
        cloudPath.curve(to: NSPoint(x: 38.31, y: 67.21), controlPoint1: NSPoint(x: 21.69, y: 63.69), controlPoint2: NSPoint(x: 30.45, y: 69.47))
        cloudPath.curve(to: NSPoint(x: 56.87, y: 77), controlPoint1: NSPoint(x: 42.05, y: 72.69), controlPoint2: NSPoint(x: 48.31, y: 77))
        cloudPath.curve(to: NSPoint(x: 80.19, y: 53.5), controlPoint1: NSPoint(x: 70.03, y: 77), controlPoint2: NSPoint(x: 80.26, y: 67.15))
        cloudPath.curve(to: NSPoint(x: 90.32, y: 38.99), controlPoint1: NSPoint(x: 86.45, y: 50.99), controlPoint2: NSPoint(x: 90.32, y: 45.39))
        cloudPath.curve(to: NSPoint(x: 73.13, y: 23.81), controlPoint1: NSPoint(x: 90.32, y: 30.58), controlPoint2: NSPoint(x: 82.78, y: 23.78))
        cloudPath.close()
        fillColor5.setFill()
        cloudPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }

    //// Generated Images

    @objc dynamic public class func imageOfSetupLock(imageSize: NSSize = NSSize(width: 230, height: 230), setupLockGear: NSColor = NSColor(red: 0.425, green: 0.46, blue: 0.499, alpha: 1)) -> NSImage {
        return NSImage(size: imageSize, flipped: false) { _ in 
            StyleKit.drawSetupLock(frame: NSRect(x: 0, y: 0, width: imageSize.width, height: imageSize.height), setupLockGear: setupLockGear)

            return true
        }
    }

    @objc dynamic public class func imageOfSetupLockSelected(imageSize: NSSize = NSSize(width: 230, height: 230), setupLockGear: NSColor = NSColor(red: 0.425, green: 0.46, blue: 0.499, alpha: 1)) -> NSImage {
        return NSImage(size: imageSize, flipped: false) { _ in 
            StyleKit.drawSetupLockSelected(frame: NSRect(x: 0, y: 0, width: imageSize.width, height: imageSize.height), setupLockGear: setupLockGear)

            return true
        }
    }

    @objc dynamic public class func imageOfSetupKey(imageSize: NSSize = NSSize(width: 230, height: 230)) -> NSImage {
        return NSImage(size: imageSize, flipped: false) { _ in 
            StyleKit.drawSetupKey(frame: NSRect(x: 0, y: 0, width: imageSize.width, height: imageSize.height))

            return true
        }
    }

    @objc dynamic public class func imageOfSetupKeySelected(imageSize: NSSize = NSSize(width: 230, height: 230)) -> NSImage {
        return NSImage(size: imageSize, flipped: false) { _ in 
            StyleKit.drawSetupKeySelected(frame: NSRect(x: 0, y: 0, width: imageSize.width, height: imageSize.height))

            return true
        }
    }

    @objc dynamic public class func imageOfPermissionBadgeAnytime(imageSize: NSSize = NSSize(width: 51, height: 51)) -> NSImage {
        return NSImage(size: imageSize, flipped: false) { _ in 
            StyleKit.drawPermissionBadgeAnytime(frame: NSRect(x: 0, y: 0, width: imageSize.width, height: imageSize.height))

            return true
        }
    }

    @objc dynamic public class var imageOfActivityNewKey: NSImage {
        if Cache.imageOfActivityNewKey != nil {
            return Cache.imageOfActivityNewKey!
        }

        Cache.imageOfActivityNewKey = NSImage(size: NSSize(width: 70, height: 70), flipped: false) { _ in 
            StyleKit.drawActivityNewKey()

            return true
        }

        return Cache.imageOfActivityNewKey!
    }




    @objc(StyleKitResizingBehavior)
    public enum ResizingBehavior: Int {
        case aspectFit /// The content is proportionally resized to fit into the target rectangle.
        case aspectFill /// The content is proportionally resized to completely fill the target rectangle.
        case stretch /// The content is stretched to match the entire target rectangle.
        case center /// The content is centered in the target rectangle, but it is NOT resized.

        public func apply(rect: NSRect, target: NSRect) -> NSRect {
            if rect == target || target == NSRect.zero {
                return rect
            }

            var scales = NSSize.zero
            scales.width = abs(target.width / rect.width)
            scales.height = abs(target.height / rect.height)

            switch self {
                case .aspectFit:
                    scales.width = min(scales.width, scales.height)
                    scales.height = scales.width
                case .aspectFill:
                    scales.width = max(scales.width, scales.height)
                    scales.height = scales.width
                case .stretch:
                    break
                case .center:
                    scales.width = 1
                    scales.height = 1
            }

            var result = rect.standardized
            result.size.width *= scales.width
            result.size.height *= scales.height
            result.origin.x = target.minX + (target.width - result.width) / 2
            result.origin.y = target.minY + (target.height - result.height) / 2
            return result
        }
    }
}
#endif
